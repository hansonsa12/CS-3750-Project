{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\Calendar.js\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid'; // must come after FullCalendar import\n\nimport React, { useContext } from 'react';\nimport { DataContext } from '../context/DataProvider';\n\nfunction getCalEvents(course) {\n  const dayNums = {\n    m: 1,\n    t: 2,\n    w: 3,\n    r: 4,\n    f: 5\n  };\n  const daysOfWeek = course.meetingDays.toLowerCase().split('').map(d => dayNums[d]);\n  var callEvents = [];\n  callEvents.push({\n    title: course.courseName + ' ' + course.buildingName + ' Room: ' + course.roomNumber,\n    startTime: course.startTime != null ? course.startTime : '00:00',\n    endTime: course.endTime != null ? course.endTime : '00:00',\n    daysOfWeek: daysOfWeek != null ? daysOfWeek : null\n  });\n  return callEvents;\n}\n\nexport default function Calendar() {\n  const {\n    userCourses\n  } = useContext(DataContext);\n  var callEvents = [];\n  var tempArray = [];\n  userCourses.map(course => (callEvents = tempArray.concat(getCalEvents(course)), tempArray = callEvents));\n  return /*#__PURE__*/React.createElement(FullCalendar, {\n    plugins: [dayGridPlugin],\n    initialView: \"dayGridMonth\",\n    events: callEvents,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/Calendar.js"],"names":["FullCalendar","dayGridPlugin","React","useContext","DataContext","getCalEvents","course","dayNums","m","t","w","r","f","daysOfWeek","meetingDays","toLowerCase","split","map","d","callEvents","push","title","courseName","buildingName","roomNumber","startTime","endTime","Calendar","userCourses","tempArray","concat"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B,C,CAAmD;;AACnD,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAGA,SAASC,YAAT,CAAsBC,MAAtB,EACA;AACI,QAAMC,OAAO,GAAG;AAACC,IAAAA,CAAC,EAAE,CAAJ;AAAOC,IAAAA,CAAC,EAAC,CAAT;AAAYC,IAAAA,CAAC,EAAC,CAAd;AAAiBC,IAAAA,CAAC,EAAC,CAAnB;AAAsBC,IAAAA,CAAC,EAAC;AAAxB,GAAhB;AACA,QAAMC,UAAU,GAAGP,MAAM,CAACQ,WAAP,CAAmBC,WAAnB,GAAiCC,KAAjC,CAAuC,EAAvC,EAA2CC,GAA3C,CAA+CC,CAAC,IAAIX,OAAO,CAACW,CAAD,CAA3D,CAAnB;AACA,MAAIC,UAAU,GAAG,EAAjB;AAEAA,EAAAA,UAAU,CAACC,IAAX,CAAgB;AACZC,IAAAA,KAAK,EAAEf,MAAM,CAACgB,UAAP,GAAoB,GAApB,GAA0BhB,MAAM,CAACiB,YAAjC,GAAgD,SAAhD,GAA4DjB,MAAM,CAACkB,UAD9D;AAEZC,IAAAA,SAAS,EAAEnB,MAAM,CAACmB,SAAP,IAAoB,IAApB,GAA2BnB,MAAM,CAACmB,SAAlC,GAA8C,OAF7C;AAGZC,IAAAA,OAAO,EAAEpB,MAAM,CAACoB,OAAP,IAAkB,IAAlB,GAAyBpB,MAAM,CAACoB,OAAhC,GAA0C,OAHvC;AAIZb,IAAAA,UAAU,EAAEA,UAAU,IAAI,IAAd,GAAqBA,UAArB,GAAkC;AAJlC,GAAhB;AAMA,SAAOM,UAAP;AACH;;AAED,eAAe,SAASQ,QAAT,GAAmB;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAkBzB,UAAU,CAACC,WAAD,CAAlC;AAEA,MAAIe,UAAU,GAAC,EAAf;AACA,MAAIU,SAAS,GAAC,EAAd;AACAD,EAAAA,WAAW,CAACX,GAAZ,CAAgBX,MAAM,KAClBa,UAAU,GAAGU,SAAS,CAACC,MAAV,CAAiBzB,YAAY,CAACC,MAAD,CAA7B,CAAb,EACAuB,SAAS,GAAGV,UAFM,CAAtB;AAKA,sBAEI,oBAAC,YAAD;AACI,IAAA,OAAO,EAAE,CAAClB,aAAD,CADb;AAEI,IAAA,WAAW,EAAC,cAFhB;AAGI,IAAA,MAAM,EAAEkB,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAQH","sourcesContent":["import FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid'; // must come after FullCalendar import\r\nimport React, { useContext } from 'react';\r\nimport { DataContext } from '../context/DataProvider';\r\n\r\n\r\nfunction getCalEvents(course)\r\n{\r\n    const dayNums = {m: 1, t:2, w:3, r:4, f:5};\r\n    const daysOfWeek = course.meetingDays.toLowerCase().split('').map(d => dayNums[d]);\r\n    var callEvents = [];\r\n\r\n    callEvents.push({\r\n        title: course.courseName + ' ' + course.buildingName + ' Room: ' + course.roomNumber ,\r\n        startTime: course.startTime != null ? course.startTime : '00:00',\r\n        endTime: course.endTime != null ? course.endTime : '00:00',\r\n        daysOfWeek: daysOfWeek != null ? daysOfWeek : null\r\n    })\r\n    return callEvents;\r\n}\r\n\r\nexport default function Calendar(){\r\n    const { userCourses } = useContext(DataContext);\r\n\r\n    var callEvents=[];\r\n    var tempArray=[];\r\n    userCourses.map(course => (\r\n        callEvents = tempArray.concat(getCalEvents(course)),\r\n        tempArray = callEvents\r\n    ))\r\n\r\n    return (\r\n        \r\n        <FullCalendar\r\n            plugins={[dayGridPlugin]}\r\n            initialView='dayGridMonth'\r\n            events={callEvents}\r\n        />\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}