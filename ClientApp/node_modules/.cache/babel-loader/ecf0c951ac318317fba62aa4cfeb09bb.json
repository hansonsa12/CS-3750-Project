{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\TableComponent.js\";\nimport { withStyles } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport _ from 'lodash';\nimport React from 'react';\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    fontWeight: \"bold\"\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: \"rgb(245,245,255)\"\n    }\n  }\n}))(TableRow);\nexport default function TableComponent({\n  rows = [],\n  columns = [],\n  emptyMessage = \"No rows\"\n}) {\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(StyledTableCell, {\n    key: `th-${column.header}`,\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, column.header || typeof column.accessor === 'string' && _.startCase(column.accessor))))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, rows.length > 0 ? rows.map((row, rIndex) => /*#__PURE__*/React.createElement(StyledTableRow, {\n    key: `row-${rIndex}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, columns.map((column, cIndex) => {\n    let cellValue = null;\n\n    switch (typeof column.accessor) {\n      case \"string\":\n        cellValue = row[column.accessor];\n        break;\n\n      case \"function\":\n        cellValue = column.accessor(row);\n        break;\n    }\n\n    return /*#__PURE__*/React.createElement(StyledTableCell, {\n      key: `cell-${rIndex}-${cIndex}-${cellValue}`,\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 41\n      }\n    }, cellValue);\n  }))) : /*#__PURE__*/React.createElement(StyledTableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    colSpan: 8,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, emptyMessage)))));\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/TableComponent.js"],"names":["withStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","_","React","StyledTableCell","theme","head","fontWeight","StyledTableRow","root","backgroundColor","TableComponent","rows","columns","emptyMessage","map","column","header","accessor","startCase","length","row","rIndex","cIndex","cellValue"],"mappings":"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","sourcesContent":["import { withStyles } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport _ from 'lodash';\r\nimport React from 'react';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        fontWeight: \"bold\",\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: \"rgb(245,245,255)\",\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nexport default function TableComponent({\r\n    rows = [],\r\n    columns = [],\r\n    emptyMessage = \"No rows\"\r\n}) {\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        {columns.map(column => (\r\n                            <StyledTableCell key={`th-${column.header}`} align=\"left\" >\r\n                                {column.header || (typeof column.accessor === 'string'\r\n                                    && _.startCase(column.accessor))}\r\n                            </StyledTableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.length > 0 ?\r\n                        rows.map((row, rIndex) => (\r\n                            <StyledTableRow key={`row-${rIndex}`}>\r\n                                {columns.map((column, cIndex) => {\r\n                                    let cellValue = null;\r\n                                    switch (typeof column.accessor) {\r\n                                        case \"string\":\r\n                                            cellValue = row[column.accessor];\r\n                                            break;\r\n                                        case \"function\":\r\n                                            cellValue = column.accessor(row);\r\n                                            break;\r\n                                    }\r\n                                    return (\r\n                                        <StyledTableCell key={`cell-${rIndex}-${cIndex}-${cellValue}`}\r\n                                            align=\"left\"\r\n                                        >\r\n                                            {cellValue}\r\n                                        </StyledTableCell>\r\n                                    );\r\n                                })}\r\n                            </StyledTableRow>)) : (\r\n                            <StyledTableRow>\r\n                                <StyledTableCell colSpan={8} align=\"center\">{emptyMessage}</StyledTableCell>\r\n                            </StyledTableRow>\r\n                        )}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}