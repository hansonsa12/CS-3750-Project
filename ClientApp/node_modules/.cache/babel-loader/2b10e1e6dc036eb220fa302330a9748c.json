{"ast":null,"code":"'use strict';\n\nmodule.exports = function () {\n  // Occupy the global variable of Chart, and create a simple base class\n  var Chart = function (item, config) {\n    this.controller = new Chart.Controller(item, config, this);\n    return this.controller;\n  }; // Globally expose the defaults to allow for user updating/changing\n\n\n  Chart.defaults = {\n    global: {\n      responsive: true,\n      responsiveAnimationDuration: 0,\n      maintainAspectRatio: true,\n      events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n      hover: {\n        onHover: null,\n        mode: 'nearest',\n        intersect: true,\n        animationDuration: 400\n      },\n      onClick: null,\n      defaultColor: 'rgba(0,0,0,0.1)',\n      defaultFontColor: '#666',\n      defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      defaultFontSize: 12,\n      defaultFontStyle: 'normal',\n      showLines: true,\n      // Element defaults defined in element extensions\n      elements: {},\n      // Legend callback string\n      legendCallback: function (chart) {\n        var text = [];\n        text.push('<ul class=\"' + chart.id + '-legend\">');\n\n        for (var i = 0; i < chart.data.datasets.length; i++) {\n          text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n          if (chart.data.datasets[i].label) {\n            text.push(chart.data.datasets[i].label);\n          }\n\n          text.push('</li>');\n        }\n\n        text.push('</ul>');\n        return text.join('');\n      }\n    }\n  };\n  Chart.Chart = Chart;\n  return Chart;\n};","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/node_modules/chart.js/src/core/core.js"],"names":["module","exports","Chart","item","config","controller","Controller","defaults","global","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","mode","intersect","animationDuration","onClick","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","showLines","elements","legendCallback","chart","text","push","id","i","data","datasets","length","backgroundColor","label","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,YAAW;AAE3B;AACA,MAAIC,KAAK,GAAG,UAASC,IAAT,EAAeC,MAAf,EAAuB;AAClC,SAAKC,UAAL,GAAkB,IAAIH,KAAK,CAACI,UAAV,CAAqBH,IAArB,EAA2BC,MAA3B,EAAmC,IAAnC,CAAlB;AACA,WAAO,KAAKC,UAAZ;AACA,GAHD,CAH2B,CAQ3B;;;AACAH,EAAAA,KAAK,CAACK,QAAN,GAAiB;AAChBC,IAAAA,MAAM,EAAE;AACPC,MAAAA,UAAU,EAAE,IADL;AAEPC,MAAAA,2BAA2B,EAAE,CAFtB;AAGPC,MAAAA,mBAAmB,EAAE,IAHd;AAIPC,MAAAA,MAAM,EAAE,CAAC,WAAD,EAAc,UAAd,EAA0B,OAA1B,EAAmC,YAAnC,EAAiD,WAAjD,CAJD;AAKPC,MAAAA,KAAK,EAAE;AACNC,QAAAA,OAAO,EAAE,IADH;AAENC,QAAAA,IAAI,EAAE,SAFA;AAGNC,QAAAA,SAAS,EAAE,IAHL;AAINC,QAAAA,iBAAiB,EAAE;AAJb,OALA;AAWPC,MAAAA,OAAO,EAAE,IAXF;AAYPC,MAAAA,YAAY,EAAE,iBAZP;AAaPC,MAAAA,gBAAgB,EAAE,MAbX;AAcPC,MAAAA,iBAAiB,EAAE,oDAdZ;AAePC,MAAAA,eAAe,EAAE,EAfV;AAgBPC,MAAAA,gBAAgB,EAAE,QAhBX;AAiBPC,MAAAA,SAAS,EAAE,IAjBJ;AAmBP;AACAC,MAAAA,QAAQ,EAAE,EApBH;AAsBP;AACAC,MAAAA,cAAc,EAAE,UAASC,KAAT,EAAgB;AAC/B,YAAIC,IAAI,GAAG,EAAX;AACAA,QAAAA,IAAI,CAACC,IAAL,CAAU,gBAAgBF,KAAK,CAACG,EAAtB,GAA2B,WAArC;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,IAAN,CAAWC,QAAX,CAAoBC,MAAxC,EAAgDH,CAAC,EAAjD,EAAqD;AACpDH,UAAAA,IAAI,CAACC,IAAL,CAAU,uCAAuCF,KAAK,CAACK,IAAN,CAAWC,QAAX,CAAoBF,CAApB,EAAuBI,eAA9D,GAAgF,WAA1F;;AACA,cAAIR,KAAK,CAACK,IAAN,CAAWC,QAAX,CAAoBF,CAApB,EAAuBK,KAA3B,EAAkC;AACjCR,YAAAA,IAAI,CAACC,IAAL,CAAUF,KAAK,CAACK,IAAN,CAAWC,QAAX,CAAoBF,CAApB,EAAuBK,KAAjC;AACA;;AACDR,UAAAA,IAAI,CAACC,IAAL,CAAU,OAAV;AACA;;AACDD,QAAAA,IAAI,CAACC,IAAL,CAAU,OAAV;AAEA,eAAOD,IAAI,CAACS,IAAL,CAAU,EAAV,CAAP;AACA;AApCM;AADQ,GAAjB;AAyCAnC,EAAAA,KAAK,CAACA,KAAN,GAAcA,KAAd;AAEA,SAAOA,KAAP;AACA,CArDD","sourcesContent":["'use strict';\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.controller = new Chart.Controller(item, config, this);\n\t\treturn this.controller;\n\t};\n\n\t// Globally expose the defaults to allow for user updating/changing\n\tChart.defaults = {\n\t\tglobal: {\n\t\t\tresponsive: true,\n\t\t\tresponsiveAnimationDuration: 0,\n\t\t\tmaintainAspectRatio: true,\n\t\t\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\t\t\thover: {\n\t\t\t\tonHover: null,\n\t\t\t\tmode: 'nearest',\n\t\t\t\tintersect: true,\n\t\t\t\tanimationDuration: 400\n\t\t\t},\n\t\t\tonClick: null,\n\t\t\tdefaultColor: 'rgba(0,0,0,0.1)',\n\t\t\tdefaultFontColor: '#666',\n\t\t\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\t\t\tdefaultFontSize: 12,\n\t\t\tdefaultFontStyle: 'normal',\n\t\t\tshowLines: true,\n\n\t\t\t// Element defaults defined in element extensions\n\t\t\telements: {},\n\n\t\t\t// Legend callback string\n\t\t\tlegendCallback: function(chart) {\n\t\t\t\tvar text = [];\n\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\t\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t\t\t}\n\t\t\t\t\ttext.push('</li>');\n\t\t\t\t}\n\t\t\t\ttext.push('</ul>');\n\n\t\t\t\treturn text.join('');\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n"]},"metadata":{},"sourceType":"script"}