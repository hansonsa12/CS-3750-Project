{"ast":null,"code":"'use strict';\n\nmodule.exports = function (Chart) {\n  var helpers = Chart.helpers;\n  Chart.defaults.line = {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  };\n\n  function lineEnabled(dataset, options) {\n    return helpers.getValueOrDefault(dataset.showLine, options.showLines);\n  }\n\n  Chart.controllers.line = Chart.DatasetController.extend({\n    datasetElementType: Chart.elements.Line,\n    dataElementType: Chart.elements.Point,\n    update: function (reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var options = me.chart.options;\n      var lineElementOptions = options.elements.line;\n      var scale = me.getScaleForId(meta.yAxisID);\n      var i, ilen, custom;\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, options); // Update Line\n\n      if (showLine) {\n        custom = line.custom || {}; // Compatibility: If the properties are defined with only the old name, use those values\n\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = {\n          // Appearance\n          // The default behavior of lines is to break at null values, according\n          // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n          // This option gives lines the ability to span gaps\n          spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n          tension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          steppedLine: custom.steppedLine ? custom.steppedLine : helpers.getValueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n          cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.getValueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n          // Scale\n          scaleTop: scale.top,\n          scaleBottom: scale.bottom,\n          scaleZero: scale.getBasePixel()\n        };\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    getPointBackgroundColor: function (point, index) {\n      var backgroundColor = this.chart.options.elements.point.backgroundColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.backgroundColor) {\n        backgroundColor = custom.backgroundColor;\n      } else if (dataset.pointBackgroundColor) {\n        backgroundColor = helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n      } else if (dataset.backgroundColor) {\n        backgroundColor = dataset.backgroundColor;\n      }\n\n      return backgroundColor;\n    },\n    getPointBorderColor: function (point, index) {\n      var borderColor = this.chart.options.elements.point.borderColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.borderColor) {\n        borderColor = custom.borderColor;\n      } else if (dataset.pointBorderColor) {\n        borderColor = helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n      } else if (dataset.borderColor) {\n        borderColor = dataset.borderColor;\n      }\n\n      return borderColor;\n    },\n    getPointBorderWidth: function (point, index) {\n      var borderWidth = this.chart.options.elements.point.borderWidth;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.borderWidth)) {\n        borderWidth = custom.borderWidth;\n      } else if (!isNaN(dataset.pointBorderWidth)) {\n        borderWidth = helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n      } else if (!isNaN(dataset.borderWidth)) {\n        borderWidth = dataset.borderWidth;\n      }\n\n      return borderWidth;\n    },\n    updateElement: function (point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var pointOptions = me.chart.options.elements.point;\n      var x, y;\n      var labels = me.chart.data.labels || [];\n      var includeOffset = labels.length === 1 || dataset.data.length === 1 || me.chart.isCombo; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex, includeOffset);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n        pointStyle: custom.pointStyle || helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n        backgroundColor: me.getPointBackgroundColor(point, index),\n        borderColor: me.getPointBorderColor(point, index),\n        borderWidth: me.getPointBorderWidth(point, index),\n        tension: meta.dataset._model ? meta.dataset._model.tension : 0,\n        steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n        // Tooltip\n        hitRadius: custom.hitRadius || helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n      };\n    },\n    calculatePointY: function (value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function () {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, point, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (meta.dataset._model.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n        helpers.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          point = points[i];\n          model = point._model;\n          controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (me.chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n          model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n          model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n          model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n        }\n      }\n    },\n    draw: function (ease) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var easingDecimal = ease || 1;\n      var i, ilen; // Transition Point Locations\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].transition(easingDecimal);\n      }\n\n      Chart.canvasHelpers.clipArea(me.chart.chart.ctx, me.chart.chartArea); // Transition and Draw the line\n\n      if (lineEnabled(me.getDataset(), me.chart.options)) {\n        meta.dataset.transition(easingDecimal).draw();\n      }\n\n      Chart.canvasHelpers.unclipArea(me.chart.chart.ctx); // Draw the points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].draw(me.chart.chartArea);\n      }\n    },\n    setHoverStyle: function (point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var index = point._index;\n      var custom = point.custom || {};\n      var model = point._model;\n      model.radius = custom.hoverRadius || helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    },\n    removeHoverStyle: function (point) {\n      var me = this;\n      var dataset = me.chart.data.datasets[point._datasetIndex];\n      var index = point._index;\n      var custom = point.custom || {};\n      var model = point._model; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      model.radius = custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n      model.backgroundColor = me.getPointBackgroundColor(point, index);\n      model.borderColor = me.getPointBorderColor(point, index);\n      model.borderWidth = me.getPointBorderWidth(point, index);\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/node_modules/chart.js/src/controllers/controller.line.js"],"names":["module","exports","Chart","helpers","defaults","line","showLines","spanGaps","hover","mode","scales","xAxes","type","id","yAxes","lineEnabled","dataset","options","getValueOrDefault","showLine","controllers","DatasetController","extend","datasetElementType","elements","Line","dataElementType","Point","update","reset","me","meta","getMeta","points","data","chart","lineElementOptions","scale","getScaleForId","yAxisID","i","ilen","custom","getDataset","tension","undefined","lineTension","_scale","_datasetIndex","index","_children","_model","backgroundColor","borderWidth","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill","steppedLine","stepped","cubicInterpolationMode","scaleTop","top","scaleBottom","bottom","scaleZero","getBasePixel","pivot","length","updateElement","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","getValueAtIndexOrDefault","getPointBorderColor","pointBorderColor","getPointBorderWidth","isNaN","pointBorderWidth","datasetIndex","value","yScale","xScale","xAxisID","pointOptions","x","y","labels","includeOffset","isCombo","radius","pointRadius","hitRadius","pointHitRadius","getPixelForValue","NaN","calculatePointY","_xScale","_yScale","_index","skip","pointStyle","sumPos","sumNeg","ds","dsMeta","stacked","datasets","getDatasetMeta","isDatasetVisible","stackedRightValue","Number","getRightValue","rightValue","area","chartArea","model","controlPoints","filter","pt","capControlPoint","min","max","Math","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","next","controlPointNextY","capBezierPoints","left","right","draw","ease","easingDecimal","transition","canvasHelpers","clipArea","ctx","unclipArea","setHoverStyle","hoverRadius","pointHoverRadius","hoverBackgroundColor","pointHoverBackgroundColor","getHoverColor","hoverBorderColor","pointHoverBorderColor","hoverBorderWidth","pointHoverBorderWidth","removeHoverStyle"],"mappings":"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","sourcesContent":["'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.line = {\n\t\tshowLines: true,\n\t\tspanGaps: false,\n\n\t\thover: {\n\t\t\tmode: 'label'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'category',\n\t\t\t\tid: 'x-axis-0'\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tid: 'y-axis-0'\n\t\t\t}]\n\t\t}\n\t};\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.getValueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: Chart.elements.Line,\n\n\t\tdataElementType: Chart.elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.getValueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.getValueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t\t// Scale\n\t\t\t\t\tscaleTop: scale.top,\n\t\t\t\t\tscaleBottom: scale.bottom,\n\t\t\t\t\tscaleZero: scale.getBasePixel()\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\t\t\tvar labels = me.chart.data.labels || [];\n\t\t\tvar includeOffset = (labels.length === 1 || dataset.data.length === 1) || me.chart.isCombo;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex, includeOffset);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function(ease) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tvar i, ilen;\n\n\t\t\t// Transition Point Locations\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tpoints[i].transition(easingDecimal);\n\t\t\t}\n\n\t\t\tChart.canvasHelpers.clipArea(me.chart.chart.ctx, me.chart.chartArea);\n\t\t\t// Transition and Draw the line\n\t\t\tif (lineEnabled(me.getDataset(), me.chart.options)) {\n\t\t\t\tmeta.dataset.transition(easingDecimal).draw();\n\t\t\t}\n\t\t\tChart.canvasHelpers.unclipArea(me.chart.chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tpoints[i].draw(me.chart.chartArea);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n"]},"metadata":{},"sourceType":"script"}