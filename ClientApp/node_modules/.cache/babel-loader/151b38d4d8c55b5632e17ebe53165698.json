{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\Courses\\\\CourseDetails\\\\CourseDetails.js\";\nimport { Grid, IconButton } from \"@material-ui/core\";\nimport { Add, Edit } from \"@material-ui/icons\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { AuthContext } from \"../../../context/AuthProvider\";\nimport { DataContext } from \"../../../context/DataProvider\";\nimport { getFormattedInstructorName } from \"../../../helpers/helpers\";\nimport AssignmentForm from \"../../Assignments/AssignmentForm\";\nimport DetailsContainer from \"../../DetailsContainer\";\nimport { SectionHeaderItem } from \"../../FormComponents\";\nimport MainView from \"../../MainView\";\nimport CourseFinalGrade from \"../CourseFinalGrade\";\nimport CourseForm from \"../CourseForm\";\nimport AssignmentsTable from \"./AssignmentsTable\";\nexport default function CourseDetails() {\n  const {\n    isInstructor\n  } = useContext(AuthContext);\n  const {\n    id\n  } = useParams(); // get params from route url\n\n  const {\n    userCourses\n  } = useContext(DataContext);\n  const [course, setCourse] = useState({});\n  const {\n    assignments\n  } = useContext(DataContext);\n  const {\n    submissions\n  } = useContext(DataContext);\n  const [finalGrade, setFinalGrade] = useState();\n  const [courseAssignments, setCourseAssignments] = useState();\n  useEffect(() => {\n    setCourse(userCourses.find(c => c.courseId.toString() === id));\n  }, [userCourses, id]);\n  const actionProps = isInstructor ? {\n    action: /*#__PURE__*/React.createElement(CourseForm, {\n      course: course,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 27\n      }\n    }))),\n    actionTooltip: \"Edit Course\"\n  } : {};\n  return /*#__PURE__*/React.createElement(MainView, Object.assign({\n    title: course === null || course === void 0 ? void 0 : course.courseName\n  }, actionProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DetailsContainer, {\n    object: course,\n    omitProperties: \"instructorId registrations assignment\".split(\" \"),\n    specialFormatters: {\n      // TODO Ky: Add missing instructor info to student registrations\n      instructor: c => getFormattedInstructorName(c.instructor || {})\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CourseFinalGrade, {\n    course: course,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(SectionHeaderItem, {\n    title: \"Assignments\",\n    action: isInstructor && /*#__PURE__*/React.createElement(AssignmentForm, {\n      courseId: course.courseId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Add, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }\n    }))),\n    actionTooltip: \"Add Assignment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AssignmentsTable, {\n    course: course,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/Courses/CourseDetails/CourseDetails.js"],"names":["Grid","IconButton","Add","Edit","React","useContext","useEffect","useState","useParams","AuthContext","DataContext","getFormattedInstructorName","AssignmentForm","DetailsContainer","SectionHeaderItem","MainView","CourseFinalGrade","CourseForm","AssignmentsTable","CourseDetails","isInstructor","id","userCourses","course","setCourse","assignments","submissions","finalGrade","setFinalGrade","courseAssignments","setCourseAssignments","find","c","courseId","toString","actionProps","action","actionTooltip","courseName","split","instructor"],"mappings":"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","sourcesContent":["import { Grid, IconButton } from \"@material-ui/core\";\r\nimport { Add, Edit } from \"@material-ui/icons\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { AuthContext } from \"../../../context/AuthProvider\";\r\nimport { DataContext } from \"../../../context/DataProvider\";\r\nimport { getFormattedInstructorName } from \"../../../helpers/helpers\";\r\nimport AssignmentForm from \"../../Assignments/AssignmentForm\";\r\nimport DetailsContainer from \"../../DetailsContainer\";\r\nimport { SectionHeaderItem } from \"../../FormComponents\";\r\nimport MainView from \"../../MainView\";\r\nimport CourseFinalGrade from \"../CourseFinalGrade\";\r\nimport CourseForm from \"../CourseForm\";\r\nimport AssignmentsTable from \"./AssignmentsTable\";\r\n\r\nexport default function CourseDetails() {\r\n    const { isInstructor } = useContext(AuthContext);\r\n    const { id } = useParams(); // get params from route url\r\n\r\n    const { userCourses } = useContext(DataContext);\r\n\r\n    const [course, setCourse] = useState({});\r\n\r\n    const { assignments } = useContext(DataContext);\r\n    const { submissions } = useContext(DataContext);\r\n    const [finalGrade, setFinalGrade] = useState();\r\n    const [courseAssignments, setCourseAssignments] = useState();\r\n    useEffect(() => {\r\n        setCourse(userCourses.find((c) => c.courseId.toString() === id));\r\n    }, [userCourses, id]);\r\n\r\n    const actionProps = isInstructor\r\n        ? {\r\n              action: (\r\n                  <CourseForm course={course}>\r\n                      <IconButton>\r\n                          <Edit />\r\n                      </IconButton>\r\n                  </CourseForm>\r\n              ),\r\n              actionTooltip: \"Edit Course\",\r\n          }\r\n        : {};\r\n\r\n    return (\r\n        <MainView title={course?.courseName} {...actionProps}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <DetailsContainer\r\n                        object={course}\r\n                        omitProperties={\"instructorId registrations assignment\".split(\r\n                            \" \"\r\n                        )}\r\n                        specialFormatters={{\r\n                            // TODO Ky: Add missing instructor info to student registrations\r\n                            instructor: (c) =>\r\n                                getFormattedInstructorName(c.instructor || {}),\r\n                        }}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <CourseFinalGrade course={course} />\r\n                </Grid>\r\n\r\n                <SectionHeaderItem\r\n                    title=\"Assignments\"\r\n                    action={\r\n                        isInstructor && (\r\n                            <AssignmentForm courseId={course.courseId}>\r\n                                <IconButton size=\"small\">\r\n                                    <Add fontSize=\"small\" />\r\n                                </IconButton>\r\n                            </AssignmentForm>\r\n                        )\r\n                    }\r\n                    actionTooltip=\"Add Assignment\"\r\n                />\r\n                <Grid item xs={12}>\r\n                    <AssignmentsTable course={course} />\r\n                </Grid>\r\n            </Grid>\r\n        </MainView>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}