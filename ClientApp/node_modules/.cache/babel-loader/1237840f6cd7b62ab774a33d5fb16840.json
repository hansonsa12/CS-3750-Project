{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\context\\\\DataProvider.js\";\n// reference: https://www.youtube.com/watch?v=XuFDcZABiDQ\nimport axios from \"axios\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"./AuthProvider\";\nconst initialState = {\n  courses: [{\n    courseId: undefined,\n    courseName: undefined,\n    courseNumber: undefined,\n    instructorId: undefined,\n    instructor: {\n      firstName: undefined,\n      lastName: undefined\n    },\n    department: undefined,\n    creditHours: undefined,\n    description: undefined,\n    buildingName: undefined,\n    roomNumber: undefined,\n    meetingDays: undefined,\n    startTime: undefined,\n    endTime: undefined,\n    maxCapacity: undefined\n  }]\n}; // Create context\n\nexport const DataContext = createContext(initialState); // Provider component\n\nexport default function DataProvider({\n  children\n}) {\n  const {\n    isInstructor,\n    isStudent,\n    authHeader\n  } = useContext(AuthContext);\n  const [loading, setLoading] = useState(true);\n  const [courses, setCourses] = useState();\n  const [registrations, setRegistrations] = useState([]);\n  const [allCourses, setAllCourses] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      setCourses(await getCourses());\n      setRegistrations(await getRegistrations());\n      setAllCourses(await getAllCourses());\n      setLoading(false);\n    }\n\n    fetchData();\n  }, []);\n\n  const getCourses = async () => {\n    if (isInstructor) {\n      const res = await axios.get(\"api/courses\", authHeader);\n      return res.data;\n    }\n  };\n\n  const getRegistrations = async () => {\n    if (isStudent) {\n      const res = await axios.get(\"api/registrations\", authHeader);\n      return res.data;\n    }\n  };\n\n  const getAllCourses = async () => {\n    if (isStudent) {\n      const res = await axios.get(\"api/courses/all\", authHeader);\n      return res.data;\n    }\n  };\n\n  return !loading && /*#__PURE__*/React.createElement(DataContext.Provider, {\n    value: {\n      userCourses: isInstructor ? courses : registrations,\n      setUserCourses: isInstructor ? setCourses : setRegistrations,\n      allCourses\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, children);\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/context/DataProvider.js"],"names":["axios","React","createContext","useContext","useEffect","useState","AuthContext","initialState","courses","courseId","undefined","courseName","courseNumber","instructorId","instructor","firstName","lastName","department","creditHours","description","buildingName","roomNumber","meetingDays","startTime","endTime","maxCapacity","DataContext","DataProvider","children","isInstructor","isStudent","authHeader","loading","setLoading","setCourses","registrations","setRegistrations","allCourses","setAllCourses","fetchData","getCourses","getRegistrations","getAllCourses","res","get","data","userCourses","setUserCourses"],"mappings":"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","sourcesContent":["// reference: https://www.youtube.com/watch?v=XuFDcZABiDQ\r\nimport axios from \"axios\";\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"./AuthProvider\";\r\n\r\nconst initialState = {\r\n    courses: [\r\n        {\r\n            courseId: undefined,\r\n            courseName: undefined,\r\n            courseNumber: undefined,\r\n            instructorId: undefined,\r\n            instructor: {\r\n                firstName: undefined,\r\n                lastName: undefined,\r\n            },\r\n            department: undefined,\r\n            creditHours: undefined,\r\n            description: undefined,\r\n            buildingName: undefined,\r\n            roomNumber: undefined,\r\n            meetingDays: undefined,\r\n            startTime: undefined,\r\n            endTime: undefined,\r\n            maxCapacity: undefined,\r\n        },\r\n    ],\r\n};\r\n\r\n// Create context\r\nexport const DataContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport default function DataProvider({ children }) {\r\n    const { isInstructor, isStudent, authHeader } = useContext(AuthContext);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [courses, setCourses] = useState();\r\n    const [registrations, setRegistrations] = useState([]);\r\n    const [allCourses, setAllCourses] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setCourses(await getCourses());\r\n            setRegistrations(await getRegistrations());\r\n            setAllCourses(await getAllCourses());\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const getCourses = async () => {\r\n        if (isInstructor) {\r\n            const res = await axios.get(\"api/courses\", authHeader);\r\n            return res.data;\r\n        }\r\n    };\r\n\r\n    const getRegistrations = async () => {\r\n        if (isStudent) {\r\n            const res = await axios.get(\"api/registrations\", authHeader);\r\n            return res.data;\r\n        }\r\n    };\r\n\r\n    const getAllCourses = async () => {\r\n        if (isStudent) {\r\n            const res = await axios.get(\"api/courses/all\", authHeader);\r\n            return res.data;\r\n        }\r\n    }\r\n\r\n    return (\r\n        !loading && (\r\n            <DataContext.Provider\r\n                value={{\r\n                    userCourses: isInstructor ? courses : registrations,\r\n                    setUserCourses: isInstructor ? setCourses : setRegistrations,\r\n                    allCourses,\r\n                }}\r\n            >\r\n                {children}\r\n            </DataContext.Provider>\r\n        )\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}