{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\Registrations\\\\RegistrationsTable.js\";\nimport { Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport React, { useContext, useMemo } from \"react\";\nimport { AuthContext } from \"../../context/AuthProvider\";\nimport { DataContext } from \"../../context/DataProvider\";\nimport { getFormattedLocation, getFormattedTime } from \"../../helpers/helpers\";\nimport TableComponent from \"../TableComponent\";\nexport default function RegistrationsTable({\n  rows\n}) {\n  const {\n    authHeader\n  } = useContext(AuthContext);\n  const {\n    userCourses,\n    setUserCourses\n  } = useContext(DataContext);\n  const registeredCourseIds = useMemo(() => {\n    // get array of registered course ids on initial component\n    // load and if registrations array changes\n    // https://reactjs.org/docs/hooks-reference.html#usecallback\n    return _.map(userCourses, \"courseId\");\n  }, [userCourses]);\n\n  function registerForCourse(courseId) {\n    axios.post(`api/registrations/${courseId}`, {}, authHeader).then(res => {\n      alert(\"Registered Successfully!\");\n      setUserCourses(res.data);\n    }).catch((err, res) => {\n      alert(`${err.message}:\\n${err.response.data.error}`);\n    });\n  }\n\n  function dropCourse(courseId) {\n    axios.delete(`api/registrations/${courseId}`, authHeader).then(res => {\n      alert(\"Dropped Sucessfully\");\n      setUserCourses(res.data);\n    }).catch((err, res) => {\n      alert(`${err.message}:\\n${err.response.data.error}`);\n    });\n  }\n\n  const columns = useMemo(() => [{\n    header: \"Course Number\",\n    accessor: \"courseNumber\"\n  }, {\n    accessor: \"courseName\"\n  }, {\n    accessor: \"department\"\n  }, {\n    header: \"Instructor\",\n    accessor: r => {\n      var _r$instructor, _r$instructor2;\n\n      return `${(_r$instructor = r.instructor) === null || _r$instructor === void 0 ? void 0 : _r$instructor.lastName}, ${(_r$instructor2 = r.instructor) === null || _r$instructor2 === void 0 ? void 0 : _r$instructor2.firstName}`;\n    }\n  }, {\n    header: \"Location\",\n    accessor: r => getFormattedLocation(r.buildingName, r.roomNumber)\n  }, {\n    header: \"Time\",\n    accessor: r => getFormattedTime(r.startTime, r.endTime)\n  }, {\n    header: \"Meeting Days\",\n    accessor: \"meetingDays\"\n  }, {\n    header: \"Action\",\n    accessor: r => registeredCourseIds.includes(r.courseId) ? /*#__PURE__*/React.createElement(Button, {\n      onClick: () => dropCourse(r.courseId),\n      color: \"secondary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"Drop\") : /*#__PURE__*/React.createElement(Button, {\n      onClick: () => registerForCourse(r.courseId),\n      color: \"primary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, \"Register\")\n  }], [registeredCourseIds]);\n  return /*#__PURE__*/React.createElement(TableComponent, {\n    rows: rows,\n    columns: columns,\n    emptyMessage: \"No courses matching specified criteria.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/Registrations/RegistrationsTable.js"],"names":["Button","axios","_","React","useContext","useMemo","AuthContext","DataContext","getFormattedLocation","getFormattedTime","TableComponent","RegistrationsTable","rows","authHeader","userCourses","setUserCourses","registeredCourseIds","map","registerForCourse","courseId","post","then","res","alert","data","catch","err","message","response","error","dropCourse","delete","columns","header","accessor","r","instructor","lastName","firstName","buildingName","roomNumber","startTime","endTime","includes"],"mappings":"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","sourcesContent":["import { Button } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\nimport React, { useContext, useMemo } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthProvider\";\r\nimport { DataContext } from \"../../context/DataProvider\";\r\nimport { getFormattedLocation, getFormattedTime } from \"../../helpers/helpers\";\r\nimport TableComponent from \"../TableComponent\";\r\n\r\nexport default function RegistrationsTable({ rows }) {\r\n    const { authHeader } = useContext(AuthContext);\r\n    const { userCourses, setUserCourses } = useContext(DataContext);\r\n\r\n    const registeredCourseIds = useMemo(() => {\r\n        // get array of registered course ids on initial component\r\n        // load and if registrations array changes\r\n        // https://reactjs.org/docs/hooks-reference.html#usecallback\r\n        return _.map(userCourses, \"courseId\");\r\n    }, [userCourses]);\r\n\r\n    function registerForCourse(courseId) {\r\n        axios\r\n            .post(`api/registrations/${courseId}`, {}, authHeader)\r\n            .then(res => {\r\n                alert(\"Registered Successfully!\");\r\n                setUserCourses(res.data);\r\n            })\r\n            .catch((err, res) => {\r\n                alert(`${err.message}:\\n${err.response.data.error}`);\r\n            });\r\n    }\r\n\r\n    function dropCourse(courseId) {\r\n        axios\r\n            .delete(`api/registrations/${courseId}`, authHeader)\r\n            .then(res => {\r\n                alert(\"Dropped Sucessfully\");\r\n                setUserCourses(res.data);\r\n            })\r\n            .catch((err, res) => {\r\n                alert(`${err.message}:\\n${err.response.data.error}`);\r\n            });\r\n    }\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            { header: \"Course Number\", accessor: \"courseNumber\" },\r\n            { accessor: \"courseName\" },\r\n            { accessor: \"department\" },\r\n            {\r\n                header: \"Instructor\",\r\n                accessor: r =>\r\n                    `${r.instructor?.lastName}, ${r.instructor?.firstName}`\r\n            },\r\n            {\r\n                header: \"Location\",\r\n                accessor: r =>\r\n                    getFormattedLocation(r.buildingName, r.roomNumber)\r\n            },\r\n            {\r\n                header: \"Time\",\r\n                accessor: r => getFormattedTime(r.startTime, r.endTime)\r\n            },\r\n            { header: \"Meeting Days\", accessor: \"meetingDays\" },\r\n            {\r\n                header: \"Action\",\r\n                accessor: r =>\r\n                    registeredCourseIds.includes(r.courseId) ? (\r\n                        <Button\r\n                            onClick={() => dropCourse(r.courseId)}\r\n                            color=\"secondary\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            Drop\r\n                        </Button>\r\n                    ) : (\r\n                        <Button\r\n                            onClick={() => registerForCourse(r.courseId)}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                    )\r\n            }\r\n        ],\r\n        [registeredCourseIds]\r\n    );\r\n    return (\r\n        <TableComponent\r\n            rows={rows}\r\n            columns={columns}\r\n            emptyMessage=\"No courses matching specified criteria.\"\r\n        />\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}