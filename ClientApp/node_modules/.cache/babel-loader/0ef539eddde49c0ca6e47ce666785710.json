{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\Courses\\\\CourseDetails\\\\CourseDetails.js\";\nimport { Grid, IconButton } from \"@material-ui/core\";\nimport { Edit } from \"@material-ui/icons\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { AuthContext } from \"../../../context/AuthProvider\";\nimport { DataContext } from \"../../../context/DataProvider\";\nimport AssignmentForm from \"../../Assignments/AssignmentForm\";\nimport { SectionHeaderItem } from \"../../FormComponents\";\nimport MainView from \"../../MainView\";\nimport TableComponent from \"../../TableComponent\";\nimport CourseForm from \"../CourseForm\";\nimport DetailsContainer from \"./DetailsContainer\";\nexport default function CourseDetails() {\n  const {\n    isInstructor\n  } = useContext(AuthContext);\n  const {\n    id\n  } = useParams(); // get params from route url\n\n  const {\n    courses\n  } = useContext(DataContext);\n  const [course, setCourse] = useState({});\n  useEffect(() => {\n    setCourse(courses.find(c => c.courseId.toString() === id));\n  }, [courses, id]);\n  const actionProps = isInstructor ? {\n    action: /*#__PURE__*/React.createElement(CourseForm, {\n      course: course,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 27\n      }\n    }))),\n    actionTooltip: \"Edit Course\"\n  } : {};\n  return /*#__PURE__*/React.createElement(MainView, Object.assign({\n    title: course === null || course === void 0 ? void 0 : course.courseName\n  }, actionProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DetailsContainer, {\n    object: course,\n    omitValues: \"instructorId registrations assignment\".split(\" \"),\n    specialFormatters: {\n      instructor: i => `${i.lastName}, ${i.firstName}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  })), isInstructor && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SectionHeaderItem, {\n    title: \"Assignments\",\n    action: /*#__PURE__*/React.createElement(AssignmentForm, {\n      courseId: course.courseId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }\n    }),\n    actionTooltip: \"Add Assignment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableComponent, {\n    course: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/Courses/CourseDetails/CourseDetails.js"],"names":["Grid","IconButton","Edit","React","useContext","useEffect","useState","useParams","AuthContext","DataContext","AssignmentForm","SectionHeaderItem","MainView","TableComponent","CourseForm","DetailsContainer","CourseDetails","isInstructor","id","courses","course","setCourse","find","c","courseId","toString","actionProps","action","actionTooltip","courseName","split","instructor","i","lastName","firstName"],"mappings":"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","sourcesContent":["import { Grid, IconButton } from \"@material-ui/core\";\r\nimport { Edit } from \"@material-ui/icons\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { AuthContext } from \"../../../context/AuthProvider\";\r\nimport { DataContext } from \"../../../context/DataProvider\";\r\nimport AssignmentForm from \"../../Assignments/AssignmentForm\";\r\nimport { SectionHeaderItem } from \"../../FormComponents\";\r\nimport MainView from \"../../MainView\";\r\nimport TableComponent from \"../../TableComponent\";\r\nimport CourseForm from \"../CourseForm\";\r\nimport DetailsContainer from \"./DetailsContainer\";\r\n\r\nexport default function CourseDetails() {\r\n    const { isInstructor } = useContext(AuthContext);\r\n    const { id } = useParams(); // get params from route url\r\n\r\n    const { courses } = useContext(DataContext);\r\n\r\n    const [course, setCourse] = useState({});\r\n\r\n    useEffect(() => {\r\n        setCourse(courses.find(c => c.courseId.toString() === id));\r\n    }, [courses, id]);\r\n\r\n    const actionProps = isInstructor\r\n        ? {\r\n              action: (\r\n                  <CourseForm course={course}>\r\n                      <IconButton>\r\n                          <Edit />\r\n                      </IconButton>\r\n                  </CourseForm>\r\n              ),\r\n              actionTooltip: \"Edit Course\",\r\n          }\r\n        : {};\r\n\r\n    return (\r\n        <MainView title={course?.courseName} {...actionProps}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <DetailsContainer\r\n                        object={course}\r\n                        omitValues={\"instructorId registrations assignment\".split(\r\n                            \" \"\r\n                        )}\r\n                        specialFormatters={{\r\n                            instructor: i => `${i.lastName}, ${i.firstName}`,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                {isInstructor && (\r\n                    <>\r\n                        <SectionHeaderItem\r\n                            title=\"Assignments\"\r\n                            action={\r\n                                <AssignmentForm courseId={course.courseId} />\r\n                            }\r\n                            actionTooltip=\"Add Assignment\"\r\n                        />\r\n                        <Grid item xs={12}>\r\n                            <TableComponent course />\r\n                        </Grid>\r\n                    </>\r\n                )}\r\n            </Grid>\r\n        </MainView>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}