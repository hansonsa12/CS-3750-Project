{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\TopBar\\\\Notifications\\\\NotificationList.js\";\nimport { Divider, IconButton, makeStyles, Popover, Typography } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\nimport { Alert } from '@material-ui/lab';\nimport React, { Fragment } from 'react';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    margin: \"5px 0px 5px 10px\"\n  }\n}));\nexport default function NotificationList({\n  popoverProps,\n  notifications = []\n}) {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Popover, Object.assign({}, popoverProps, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Notifications\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), notifications.map((notification, index) => /*#__PURE__*/React.createElement(Fragment, {\n    key: `notification-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"info\",\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Close, {\n      fontSize: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    })),\n    style: {\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, notification), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/TopBar/Notifications/NotificationList.js"],"names":["Divider","IconButton","makeStyles","Popover","Typography","Close","Alert","React","Fragment","useStyles","theme","title","margin","NotificationList","popoverProps","notifications","classes","vertical","horizontal","map","notification","index","backgroundColor"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B,EAA0CC,OAA1C,EAAmDC,UAAnD,QAAqE,mBAArE;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE;AADL;AAD8B,CAAZ,CAAD,CAA5B;AAMA,eAAe,SAASC,gBAAT,CAA0B;AACrCC,EAAAA,YADqC;AAErCC,EAAAA,aAAa,GAAG;AAFqB,CAA1B,EAGZ;AACC,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AAEA,sBACI,oBAAC,OAAD,oBAAaK,YAAb;AACI,IAAA,YAAY,EAAE;AACVG,MAAAA,QAAQ,EAAE,QADA;AAEVC,MAAAA,UAAU,EAAE;AAFF,KADlB;AAKI,IAAA,eAAe,EAAE;AACbD,MAAAA,QAAQ,EAAE,KADG;AAEbC,MAAAA,UAAU,EAAE;AAFC,KALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAUI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEF,OAAO,CAACL,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVJ,eAWI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAYKI,aAAa,CAACI,GAAd,CAAkB,CAACC,YAAD,EAAeC,KAAf,kBACf,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAG,gBAAeA,KAAM,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,QAAQ,EAAC,MADb;AAEI,IAAA,MAAM,eACF,oBAAC,UAAD;AACI,oBAAW,OADf;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,IAAI,EAAC,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAHR;AAWI,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaKF,YAbL,CADJ,eAgBI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CADH,CAZL,CADJ;AAmCH","sourcesContent":["import { Divider, IconButton, makeStyles, Popover, Typography } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nimport { Alert } from '@material-ui/lab';\r\nimport React, { Fragment } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        margin: \"5px 0px 5px 10px\"\r\n    }\r\n}));\r\n\r\nexport default function NotificationList({\r\n    popoverProps,\r\n    notifications = []\r\n}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Popover {...popoverProps}\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n            }}\r\n        >\r\n            <Typography variant=\"h6\" className={classes.title}>Notifications</Typography>\r\n            <Divider />\r\n            {notifications.map((notification, index) => (\r\n                <Fragment key={`notification-${index}`}>\r\n                    <Alert\r\n                        severity=\"info\"\r\n                        action={\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                            >\r\n                                <Close fontSize=\"inherit\" />\r\n                            </IconButton>\r\n                        }\r\n                        style={{ backgroundColor: \"white\" }}\r\n                    >\r\n                        {notification}\r\n                    </Alert>\r\n                    <Divider />\r\n                </Fragment>\r\n            ))}\r\n        </Popover>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}