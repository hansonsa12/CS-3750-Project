{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\FileUploading\\\\ProfilePicUploader.js\";\nimport React, { useContext, useState } from 'react';\nimport { Avatar, Button, Grid } from '@material-ui/core';\nimport axios from 'axios';\nimport { AuthContext } from '../../context/AuthProvider';\nexport default function ProfilePicUploader() {\n  // https://www.geeksforgeeks.org/file-uploading-in-react-js/\n  const {\n    user,\n    authHeader,\n    updateUser\n  } = useContext(AuthContext);\n\n  const getFileUrl = () => {\n    // user? makes sure user is not null before accessing profilePicName.\n    // if it is null, user.profilePicName will throw an error without the ?\n    // this is referred to as \"optional chaining\". (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining)\n    return (user === null || user === void 0 ? void 0 : user.profilePicName) ? `/uploads/u${user.userId}/${user.profilePicName}` : null;\n  };\n\n  const [fileUrl, setFileUrl] = useState(getFileUrl());\n\n  const uploadFile = e => {\n    const selectedFile = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile, selectedFile.name);\n    axios.post(\"api/fileuploads/profilepic\", formData, authHeader).then(res => {\n      const {\n        data: {\n          filePath,\n          fileName\n        }\n      } = res;\n      setFileUrl(filePath);\n      updateUser({ ...user,\n        profilePicName: fileName\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: fileUrl,\n    style: {\n      width: 150,\n      height: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    component: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Upload\", /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"image/*\",\n    type: \"file\",\n    onChange: uploadFile,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/FileUploading/ProfilePicUploader.js"],"names":["React","useContext","useState","Avatar","Button","Grid","axios","AuthContext","ProfilePicUploader","user","authHeader","updateUser","getFileUrl","profilePicName","userId","fileUrl","setFileUrl","uploadFile","e","selectedFile","target","files","formData","FormData","append","name","post","then","res","data","filePath","fileName","width","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,QAAqC,mBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,eAAe,SAASC,kBAAT,GAA8B;AACzC;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA;AAApB,MAAmCV,UAAU,CAACM,WAAD,CAAnD;;AAEA,QAAMK,UAAU,GAAG,MAAM;AACrB;AACA;AACA;AACA,WAAO,CAACH,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEI,cAAP,IAA0B,aAAYJ,IAAI,CAACK,MAAO,IAAGL,IAAI,CAACI,cAAe,EAAzE,GAA6E,IAApF;AACH,GALD;;AAOA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAACU,UAAU,EAAX,CAAtC;;AAEA,QAAMK,UAAU,GAAIC,CAAD,IAAO;AACtB,UAAMC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAArB;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBL,YAAxB,EAAsCA,YAAY,CAACM,IAAnD;AACAnB,IAAAA,KAAK,CAACoB,IAAN,CAAW,4BAAX,EAAyCJ,QAAzC,EAAmDZ,UAAnD,EAA+DiB,IAA/D,CAAqEC,GAAD,IAAS;AACzE,YAAM;AAAEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,QAAF;AAAYC,UAAAA;AAAZ;AAAR,UAAmCH,GAAzC;AACAZ,MAAAA,UAAU,CAACc,QAAD,CAAV;AACAnB,MAAAA,UAAU,CAAC,EAAE,GAAGF,IAAL;AAAWI,QAAAA,cAAc,EAAEkB;AAA3B,OAAD,CAAV;AACH,KAJD;AAKH,GATD;;AAWA,sBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAmC,IAAA,OAAO,EAAC,QAA3C;AAAoD,IAAA,UAAU,EAAC,QAA/D;AAAwE,IAAA,OAAO,EAAE,CAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEhB,OAAb;AAAsB,IAAA,KAAK,EAAE;AAAEiB,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,CADJ,eAII,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,SAAS,EAAC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEA;AAAO,IAAA,MAAM,EAAE,SAAf;AAA0B,IAAA,IAAI,EAAC,MAA/B;AAAsC,IAAA,QAAQ,EAAEhB,UAAhD;AAA4D,IAAA,MAAM,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADJ,CAJJ,CADJ;AAaH","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { Avatar, Button, Grid } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../context/AuthProvider';\r\n\r\nexport default function ProfilePicUploader() {\r\n    // https://www.geeksforgeeks.org/file-uploading-in-react-js/\r\n    const { user, authHeader, updateUser } = useContext(AuthContext);\r\n\r\n    const getFileUrl = () => {\r\n        // user? makes sure user is not null before accessing profilePicName.\r\n        // if it is null, user.profilePicName will throw an error without the ?\r\n        // this is referred to as \"optional chaining\". (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining)\r\n        return (user?.profilePicName) ? `/uploads/u${user.userId}/${user.profilePicName}` : null;\r\n    };\r\n\r\n    const [fileUrl, setFileUrl] = useState(getFileUrl());\r\n\r\n    const uploadFile = (e) => {\r\n        const selectedFile = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append(\"file\", selectedFile, selectedFile.name);\r\n        axios.post(\"api/fileuploads/profilepic\", formData, authHeader).then((res) => {\r\n            const { data: { filePath, fileName } } = res;\r\n            setFileUrl(filePath);\r\n            updateUser({ ...user, profilePicName: fileName });\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={1}>\r\n            <Grid item>\r\n                {<Avatar src={fileUrl} style={{ width: 150, height: 150 }} />}\r\n            </Grid>\r\n            <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\" component=\"label\">\r\n                    Upload\r\n                <input accept={\"image/*\"} type=\"file\" onChange={uploadFile} hidden />\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}