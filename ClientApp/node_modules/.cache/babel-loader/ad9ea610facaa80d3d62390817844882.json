{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\Assignments\\\\AssignmentBarChart.js\";\nimport { Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { AuthContext } from \"../../context/AuthProvider\";\nexport default function AssignmentBarChart({\n  assignment,\n  receivedScore\n}) {\n  const {\n    authHeader\n  } = useContext(AuthContext);\n  const [stats, setStats] = useState({});\n  useEffect(() => {\n    if (assignment === null || assignment === void 0 ? void 0 : assignment.assignmentId) {\n      axios.get(`api/assignments/${assignment.assignmentId}/scores`, authHeader).then(res => {\n        setStats(res.data);\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  }, [assignment]);\n  const {\n    high,\n    low,\n    average\n  } = stats;\n  const data = {\n    labels: [\"High\", \"Low\", \"Average\", \"Me\"],\n    datasets: [{\n      label: \"Score\",\n      data: [high, low, average, receivedScore],\n      backgroundColor: [\"rgba(75, 192, 192, 0.2)\", \"rgba(255, 99, 132, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(54, 162, 235, 0.2)\"],\n      borderColor: [\"rgba(75, 192, 192, 1)\", \"rgba(255, 99, 132, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(54, 162, 235, 1)\"],\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true,\n          min: 0,\n          max: assignment.maxPoints ? assignment.maxPoints : undefined\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Class Scores\"), /*#__PURE__*/React.createElement(Bar, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/Assignments/AssignmentBarChart.js"],"names":["Typography","axios","React","useContext","useEffect","useState","Bar","AuthContext","AssignmentBarChart","assignment","receivedScore","authHeader","stats","setStats","assignmentId","get","then","res","data","catch","err","console","error","high","low","average","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","min","max","maxPoints","undefined","textAlign"],"mappings":";AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,eAAe,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAA5B,EAA2D;AACtE,QAAM;AAAEC,IAAAA;AAAF,MAAiBR,UAAU,CAACI,WAAD,CAAjC;AAEA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,UAAJ,aAAIA,UAAJ,uBAAIA,UAAU,CAAEK,YAAhB,EAA8B;AAC1Bb,MAAAA,KAAK,CACAc,GADL,CAES,mBAAkBN,UAAU,CAACK,YAAa,SAFnD,EAGQH,UAHR,EAKKK,IALL,CAKUC,GAAG,IAAI;AACTJ,QAAAA,QAAQ,CAACI,GAAG,CAACC,IAAL,CAAR;AACH,OAPL,EAQKC,KARL,CAQWC,GAAG,IAAI;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,OAVL;AAWH;AACJ,GAdQ,EAcN,CAACX,UAAD,CAdM,CAAT;AAgBA,QAAM;AAAEc,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA;AAAb,MAAyBb,KAA/B;AAEA,QAAMM,IAAI,GAAG;AACTQ,IAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,SAAhB,EAA2B,IAA3B,CADC;AAETC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,KAAK,EAAE,OADX;AAEIV,MAAAA,IAAI,EAAE,CAACK,IAAD,EAAOC,GAAP,EAAYC,OAAZ,EAAqBf,aAArB,CAFV;AAGImB,MAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,CAHrB;AASIC,MAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,CATjB;AAeIC,MAAAA,WAAW,EAAE;AAfjB,KADM;AAFD,GAAb;AAuBA,QAAMC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,CACH;AACIC,QAAAA,KAAK,EAAE;AACHC,UAAAA,WAAW,EAAE,IADV;AAEHC,UAAAA,GAAG,EAAE,CAFF;AAGHC,UAAAA,GAAG,EAAE7B,UAAU,CAAC8B,SAAX,GACC9B,UAAU,CAAC8B,SADZ,GAECC;AALH;AADX,OADG;AADH;AADI,GAAhB;AAgBA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAEvB,IAAX;AAAiB,IAAA,OAAO,EAAEc,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH","sourcesContent":["import { Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { AuthContext } from \"../../context/AuthProvider\";\r\n\r\nexport default function AssignmentBarChart({ assignment, receivedScore }) {\r\n    const { authHeader } = useContext(AuthContext);\r\n\r\n    const [stats, setStats] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (assignment?.assignmentId) {\r\n            axios\r\n                .get(\r\n                    `api/assignments/${assignment.assignmentId}/scores`,\r\n                    authHeader\r\n                )\r\n                .then(res => {\r\n                    setStats(res.data);\r\n                })\r\n                .catch(err => {\r\n                    console.error(err);\r\n                });\r\n        }\r\n    }, [assignment]);\r\n\r\n    const { high, low, average } = stats;\r\n\r\n    const data = {\r\n        labels: [\"High\", \"Low\", \"Average\", \"Me\"],\r\n        datasets: [\r\n            {\r\n                label: \"Score\",\r\n                data: [high, low, average, receivedScore],\r\n                backgroundColor: [\r\n                    \"rgba(75, 192, 192, 0.2)\",\r\n                    \"rgba(255, 99, 132, 0.2)\",\r\n                    \"rgba(255, 206, 86, 0.2)\",\r\n                    \"rgba(54, 162, 235, 0.2)\"\r\n                ],\r\n                borderColor: [\r\n                    \"rgba(75, 192, 192, 1)\",\r\n                    \"rgba(255, 99, 132, 1)\",\r\n                    \"rgba(255, 206, 86, 1)\",\r\n                    \"rgba(54, 162, 235, 1)\"\r\n                ],\r\n                borderWidth: 1\r\n            }\r\n        ]\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        min: 0,\r\n                        max: assignment.maxPoints\r\n                            ? assignment.maxPoints\r\n                            : undefined\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\" }}>\r\n            <Typography variant=\"h6\">Class Scores</Typography>\r\n            <Bar data={data} options={options} />\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}