{"ast":null,"code":"'use strict';\n\nmodule.exports = function (Chart) {\n  var helpers = Chart.helpers;\n  var plugins = Chart.plugins;\n  var platform = Chart.platform; // Create a dictionary of chart types, to allow for extension of existing types\n\n  Chart.types = {}; // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  // Destroy method on the chart will remove the instance of the chart from this reference.\n\n  Chart.instances = {}; // Controllers available for dataset visualization eg. bar, line, slice, etc.\n\n  Chart.controllers = {};\n  /**\n   * Initializes the given config with global and chart default values.\n   */\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use configMerge() for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = helpers.configMerge(Chart.defaults.global, Chart.defaults[config.type], config.options || {});\n    return config;\n  }\n  /**\n   * Updates the config of the chart\n   * @param chart {Chart.Controller} chart to update the options for\n   */\n\n\n  function updateConfig(chart) {\n    var newOptions = chart.options; // Update Scale(s) with options\n\n    if (newOptions.scale) {\n      chart.scale.options = newOptions.scale;\n    } else if (newOptions.scales) {\n      newOptions.scales.xAxes.concat(newOptions.scales.yAxes).forEach(function (scaleOptions) {\n        chart.scales[scaleOptions.id].options = scaleOptions;\n      });\n    } // Tooltip\n\n\n    chart.tooltip._options = newOptions.tooltips;\n  }\n  /**\n   * @class Chart.Controller\n   * The main controller of a chart.\n   */\n\n\n  Chart.Controller = function (item, config, instance) {\n    var me = this;\n    config = initConfig(config);\n    var context = platform.acquireContext(item, config);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    instance.ctx = context;\n    instance.canvas = canvas;\n    instance.config = config;\n    instance.width = width;\n    instance.height = height;\n    instance.aspectRatio = height ? width / height : null;\n    me.id = helpers.uid();\n    me.chart = instance;\n    me.config = config;\n    me.options = config.options;\n    me._bufferedRender = false; // Add the chart instance to the global namespace\n\n    Chart.instances[me.id] = me;\n    Object.defineProperty(me, 'data', {\n      get: function () {\n        return me.config.data;\n      }\n    });\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return me;\n    }\n\n    me.initialize();\n    me.update();\n    return me;\n  };\n\n  helpers.extend(Chart.Controller.prototype,\n  /** @lends Chart.Controller.prototype */\n  {\n    initialize: function () {\n      var me = this; // Before init plugin notification\n\n      plugins.notify(me, 'beforeInit');\n      helpers.retinaScale(me.chart);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildScales();\n      me.initToolTip(); // After init plugin notification\n\n      plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function () {\n      helpers.clear(this.chart);\n      return this;\n    },\n    stop: function () {\n      // Stops any current animation loop occurring\n      Chart.animationService.cancelAnimation(this);\n      return this;\n    },\n    resize: function (silent) {\n      var me = this;\n      var chart = me.chart;\n      var options = me.options;\n      var canvas = chart.canvas;\n      var aspectRatio = options.maintainAspectRatio && chart.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n\n      var newWidth = Math.floor(helpers.getMaximumWidth(canvas));\n      var newHeight = Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas));\n\n      if (chart.width === newWidth && chart.height === newHeight) {\n        return;\n      }\n\n      canvas.width = chart.width = newWidth;\n      canvas.height = chart.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers.retinaScale(chart);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (me.options.onResize) {\n          me.options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update(me.options.responsiveAnimationDuration);\n      }\n    },\n    ensureScalesHaveIDs: function () {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildScales: function () {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales = {};\n      var items = [];\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true\n        });\n      }\n\n      helpers.each(items, function (item) {\n        var scaleOptions = item.options;\n        var scaleType = helpers.getValueOrDefault(scaleOptions.type, item.dtype);\n        var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\n        if (!scaleClass) {\n          return;\n        }\n\n        var scale = new scaleClass({\n          id: scaleOptions.id,\n          options: scaleOptions,\n          ctx: me.chart.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale; // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      });\n      Chart.scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function () {\n      var me = this;\n      var types = [];\n      var newControllers = [];\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n\n        if (!meta.type) {\n          meta.type = dataset.type || me.config.type;\n        }\n\n        types.push(meta.type);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n        } else {\n          meta.controller = new Chart.controllers[meta.type](me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n\n      if (types.length > 1) {\n        for (var i = 1; i < types.length; i++) {\n          if (types[i] !== types[i - 1]) {\n            me.isCombo = true;\n            break;\n          }\n        }\n      }\n\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function () {\n      var me = this;\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function () {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function (animationDuration, lazy) {\n      var me = this;\n      updateConfig(me);\n\n      if (plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      helpers.each(newControllers, function (controller) {\n        controller.reset();\n      });\n      me.updateDatasets(); // Do this before render so that any plugins that need final scale updates can use it\n\n      plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          lazy: lazy,\n          duration: animationDuration\n        };\n      } else {\n        me.render(animationDuration, lazy);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function () {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      Chart.layoutService.update(this, this.chart.width, this.chart.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       */\n\n      plugins.notify(me, 'afterScaleUpdate');\n      plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function () {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.getDatasetMeta(i).controller.update();\n      }\n\n      plugins.notify(me, 'afterDatasetsUpdate');\n    },\n    render: function (duration, lazy) {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var animationOptions = me.options.animation;\n\n      var onComplete = function () {\n        plugins.notify(me, 'afterRender');\n        var callback = animationOptions && animationOptions.onComplete;\n\n        if (callback && callback.call) {\n          callback.call(me);\n        }\n      };\n\n      if (animationOptions && (typeof duration !== 'undefined' && duration !== 0 || typeof duration === 'undefined' && animationOptions.duration !== 0)) {\n        var animation = new Chart.Animation();\n        animation.numSteps = (duration || animationOptions.duration) / 16.66; // 60 fps\n\n        animation.easing = animationOptions.easing; // render function\n\n        animation.render = function (chartInstance, animationObject) {\n          var easingFunction = helpers.easingEffects[animationObject.easing];\n          var stepDecimal = animationObject.currentStep / animationObject.numSteps;\n          var easeDecimal = easingFunction(stepDecimal);\n          chartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\n        }; // user events\n\n\n        animation.onAnimationProgress = animationOptions.onProgress;\n        animation.onAnimationComplete = onComplete;\n        Chart.animationService.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw();\n        onComplete();\n      }\n\n      return me;\n    },\n    draw: function (easingValue) {\n      var me = this;\n      me.clear();\n\n      if (easingValue === undefined || easingValue === null) {\n        easingValue = 1;\n      }\n\n      if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n\n      if (me.scale) {\n        me.scale.draw();\n      }\n\n      me.drawDatasets(easingValue); // Finally draw the tooltip\n\n      me.tooltip.transition(easingValue).draw();\n      plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function (easingValue) {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw each dataset via its respective controller (reversed to support proper line stacking)\n\n\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        if (me.isDatasetVisible(datasetIndex)) {\n          me.getDatasetMeta(datasetIndex).controller.draw(easingValue);\n        }\n      }, me, true);\n      plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n    // Get the single element that was clicked on\n    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n    getElementAtEvent: function (e) {\n      return Chart.Interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function (e) {\n      return Chart.Interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function (e) {\n      return Chart.Interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function (e, mode, options) {\n      var method = Chart.Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function (e) {\n      return Chart.Interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function (datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function () {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function (datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function () {\n      return this.options.legendCallback(this);\n    },\n    destroy: function () {\n      var me = this;\n      var canvas = me.chart.canvas;\n      var meta, i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        meta = me.getDatasetMeta(i);\n\n        if (meta.controller) {\n          meta.controller.destroy();\n          meta.controller = null;\n        }\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers.clear(me.chart);\n        platform.releaseContext(me.chart.ctx);\n        me.chart.canvas = null;\n        me.chart.ctx = null;\n      }\n\n      plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function () {\n      return this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n    },\n    initToolTip: function () {\n      var me = this;\n      me.tooltip = new Chart.Tooltip({\n        _chart: me.chart,\n        _chartInstance: me,\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n      me.tooltip.initialize();\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function () {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function () {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Responsiveness is currently based on the use of an iframe, however this method causes\n      // performance issues and could be troublesome when used with ad blockers. So make sure\n      // that the user is still able to create a chart without iframe when responsive is false.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function () {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function () {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function (elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function (e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e);\n      changed |= tooltip && tooltip.handleEvent(e);\n      plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest.duration, bufferedRequest.lazy);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render(me.options.hover.animationDuration, true);\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {Boolean} true if the chart needs to re-render\n     */\n    handleEvent: function (e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // On Hover hook\n\n\n      if (hoverOptions.onHover) {\n        // Need to call with native event here to not break backwards compatibility\n        hoverOptions.onHover.call(me, e.native, me.active);\n      }\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/node_modules/chart.js/src/core/core.controller.js"],"names":["module","exports","Chart","helpers","plugins","platform","types","instances","controllers","initConfig","config","data","datasets","labels","options","configMerge","defaults","global","type","updateConfig","chart","newOptions","scale","scales","xAxes","concat","yAxes","forEach","scaleOptions","id","tooltip","_options","tooltips","Controller","item","instance","me","context","acquireContext","canvas","height","width","ctx","aspectRatio","uid","_bufferedRender","Object","defineProperty","get","console","error","initialize","update","extend","prototype","notify","retinaScale","bindEvents","responsive","resize","ensureScalesHaveIDs","buildScales","initToolTip","clear","stop","animationService","cancelAnimation","silent","maintainAspectRatio","newWidth","Math","floor","getMaximumWidth","newHeight","getMaximumHeight","style","newSize","onResize","responsiveAnimationDuration","scalesOptions","each","xAxisOptions","index","yAxisOptions","items","map","dtype","push","isDefault","scaleType","getValueOrDefault","scaleClass","scaleService","getScaleConstructor","addScalesToLayout","buildOrUpdateControllers","newControllers","dataset","datasetIndex","meta","getDatasetMeta","controller","updateIndex","length","i","isCombo","resetElements","reset","animationDuration","lazy","_data","buildOrUpdateElements","updateLayout","updateDatasets","_bufferedRequest","duration","render","layoutService","ilen","animationOptions","animation","onComplete","callback","call","Animation","numSteps","easing","chartInstance","animationObject","easingFunction","easingEffects","stepDecimal","currentStep","easeDecimal","draw","onAnimationProgress","onProgress","onAnimationComplete","addAnimation","easingValue","undefined","boxes","box","chartArea","drawDatasets","transition","isDatasetVisible","getElementAtEvent","e","Interaction","modes","single","getElementsAtEvent","label","intersect","getElementsAtXAxis","getElementsAtEventForMode","mode","method","getDatasetAtEvent","_meta","hidden","xAxisID","yAxisID","getVisibleDatasetCount","count","generateLegend","legendCallback","destroy","unbindEvents","releaseContext","toBase64Image","toDataURL","apply","arguments","Tooltip","_chart","_chartInstance","listeners","_listeners","listener","eventHandler","events","addEventListener","removeEventListener","updateHoverStyle","elements","enabled","element","_datasetIndex","changed","handleEvent","bufferedRequest","animating","hover","hoverOptions","lastActive","active","onHover","native","onClick","arrayEquals"],"mappings":"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","sourcesContent":["'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar plugins = Chart.plugins;\n\tvar platform = Chart.platform;\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart.Controller} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\t// Update Scale(s) with options\n\t\tif (newOptions.scale) {\n\t\t\tchart.scale.options = newOptions.scale;\n\t\t} else if (newOptions.scales) {\n\t\t\tnewOptions.scales.xAxes.concat(newOptions.scales.yAxes).forEach(function(scaleOptions) {\n\t\t\t\tchart.scales[scaleOptions.id].options = scaleOptions;\n\t\t\t});\n\t\t}\n\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t}\n\n\t/**\n\t * @class Chart.Controller\n\t * The main controller of a chart.\n\t */\n\tChart.Controller = function(item, config, instance) {\n\t\tvar me = this;\n\n\t\tconfig = initConfig(config);\n\n\t\tvar context = platform.acquireContext(item, config);\n\t\tvar canvas = context && context.canvas;\n\t\tvar height = canvas && canvas.height;\n\t\tvar width = canvas && canvas.width;\n\n\t\tinstance.ctx = context;\n\t\tinstance.canvas = canvas;\n\t\tinstance.config = config;\n\t\tinstance.width = width;\n\t\tinstance.height = height;\n\t\tinstance.aspectRatio = height? width / height : null;\n\n\t\tme.id = helpers.uid();\n\t\tme.chart = instance;\n\t\tme.config = config;\n\t\tme.options = config.options;\n\t\tme._bufferedRender = false;\n\n\t\t// Add the chart instance to the global namespace\n\t\tChart.instances[me.id] = me;\n\n\t\tObject.defineProperty(me, 'data', {\n\t\t\tget: function() {\n\t\t\t\treturn me.config.data;\n\t\t\t}\n\t\t});\n\n\t\tif (!context || !canvas) {\n\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\treturn me;\n\t\t}\n\n\t\tme.initialize();\n\t\tme.update();\n\n\t\treturn me;\n\t};\n\n\thelpers.extend(Chart.Controller.prototype, /** @lends Chart.Controller.prototype */ {\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me.chart);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.clear(this.chart);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = chart.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && chart.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\t\t\tvar newWidth = Math.floor(helpers.getMaximumWidth(canvas));\n\t\t\tvar newHeight = Math.floor(aspectRatio? newWidth / aspectRatio : helpers.getMaximumHeight(canvas));\n\n\t\t\tif (chart.width === newWidth && chart.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = chart.width = newWidth;\n\t\t\tcanvas.height = chart.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(chart);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales = {};\n\t\t\tvar items = [];\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({options: options.scale, dtype: 'radialLinear', isDefault: true});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar scaleType = helpers.getValueOrDefault(scaleOptions.type, item.dtype);\n\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar scale = new scaleClass({\n\t\t\t\t\tid: scaleOptions.id,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.chart.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\n\t\t\t\tscales[scale.id] = scale;\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tif (!meta.type) {\n\t\t\t\t\tmeta.type = dataset.type || me.config.type;\n\t\t\t\t}\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t} else {\n\t\t\t\t\tmeta.controller = new Chart.controllers[meta.type](me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\tif (types.length > 1) {\n\t\t\t\tfor (var i = 1; i < types.length; i++) {\n\t\t\t\t\tif (types[i] !== types[i - 1]) {\n\t\t\t\t\t\tme.isCombo = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(animationDuration, lazy) {\n\t\t\tvar me = this;\n\n\t\t\tupdateConfig(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tlazy: lazy,\n\t\t\t\t\tduration: animationDuration\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(animationDuration, lazy);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tChart.layoutService.update(this, this.chart.width, this.chart.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.getDatasetMeta(i).controller.update();\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\trender: function(duration, lazy) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function() {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\tvar callback = animationOptions && animationOptions.onComplete;\n\t\t\t\tif (callback && callback.call) {\n\t\t\t\t\tcallback.call(me);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation();\n\t\t\t\tanimation.numSteps = (duration || animationOptions.duration) / 16.66; // 60 fps\n\t\t\t\tanimation.easing = animationOptions.easing;\n\n\t\t\t\t// render function\n\t\t\t\tanimation.render = function(chartInstance, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers.easingEffects[animationObject.easing];\n\t\t\t\t\tvar stepDecimal = animationObject.currentStep / animationObject.numSteps;\n\t\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\n\t\t\t\t\tchartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\n\t\t\t\t};\n\n\t\t\t\t// user events\n\t\t\t\tanimation.onAnimationProgress = animationOptions.onProgress;\n\t\t\t\tanimation.onAnimationComplete = onComplete;\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\t\t\t\tonComplete();\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (easingValue === undefined || easingValue === null) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\n\t\t\t// Finally draw the tooltip\n\t\t\tme.tooltip.transition(easingValue).draw();\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw each dataset via its respective controller (reversed to support proper line stacking)\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tme.getDatasetMeta(datasetIndex).controller.draw(easingValue);\n\t\t\t\t}\n\t\t\t}, me, true);\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Chart.Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Chart.Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Chart.Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Chart.Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Chart.Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i<ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean'? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.chart.canvas;\n\t\t\tvar meta, i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tmeta = me.getDatasetMeta(i);\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.destroy();\n\t\t\t\t\tmeta.controller = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.clear(me.chart);\n\t\t\t\tplatform.releaseContext(me.chart.ctx);\n\t\t\t\tme.chart.canvas = null;\n\t\t\t\tme.chart.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_chartInstance: me,\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t\tme.tooltip.initialize();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Responsiveness is currently based on the use of an iframe, however this method causes\n\t\t\t// performance issues and could be troublesome when used with ad blockers. So make sure\n\t\t\t// that the user is still able to create a chart without iframe when responsive is false.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i=0, ilen=elements.length; i<ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\tchanged |= tooltip && tooltip.handleEvent(e);\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest.duration, bufferedRequest.lazy);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// On Hover hook\n\t\t\tif (hoverOptions.onHover) {\n\t\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\t\thoverOptions.onHover.call(me, e.native, me.active);\n\t\t\t}\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n};\n"]},"metadata":{},"sourceType":"script"}