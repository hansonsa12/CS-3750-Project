{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\FormComponents.js\";\nimport { Divider, Grid, Typography } from '@material-ui/core';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport { KeyboardDateTimePicker, KeyboardTimePicker, showErrorOnBlur, TextField } from \"mui-rff\";\nimport React from 'react';\nexport const TextEntryItem = props => {\n  const {\n    name\n  } = props;\n  return /*#__PURE__*/React.createElement(Grid, Object.assign({\n    item: true,\n    xs: 12\n  }, gridPropsFrom(props), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, Object.assign({\n    size: \"small\",\n    label: getLabelFromName(name),\n    variant: \"outlined\",\n    showError: showErrorOnBlur\n  }, fieldPropsFrom(props), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  })));\n};\nexport const TimeEntryItem = props => {\n  const {\n    name\n  } = props;\n  return /*#__PURE__*/React.createElement(Grid, Object.assign({\n    item: true,\n    xs: 12\n  }, gridPropsFrom(props), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(KeyboardTimePicker, Object.assign({\n    label: getLabelFromName(name),\n    variant: \"inline\",\n    ampm: true,\n    inputVariant: \"outlined\",\n    size: \"small\",\n    mask: \"__:__ _M\",\n    placeholder: \"08:00 AM\"\n  }, fieldPropsFrom(props), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  })));\n};\nexport const DateTimeEntryItem = props => {\n  const {\n    name\n  } = props;\n  return /*#__PURE__*/React.createElement(Grid, Object.assign({\n    item: true,\n    xs: 12\n  }, gridPropsFrom(props), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(KeyboardDateTimePicker, Object.assign({\n    label: getLabelFromName(name),\n    variant: \"inline\",\n    ampm: true,\n    inputVariant: \"outlined\",\n    size: \"small\",\n    format: \"MM/dd/yyyy hh:mm a\",\n    mask: \"__/__/____ __:__ _M\",\n    placeholder: dayjs().format(\"MM/DD/YYYY hh:mm A\")\n  }, fieldPropsFrom(props), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })));\n};\nexport const SectionHeaderItem = props => {\n  const {\n    top,\n    style = top ? {} : {\n      marginTop: 10\n    },\n    title,\n    action\n  } = props;\n  return /*#__PURE__*/React.createElement(Grid, Object.assign({\n    item: true,\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"flex-end\",\n    xs: 12\n  }, gridPropsFrom(props), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 24\n    }\n  }, title)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, action), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 32\n    }\n  })));\n};\nconst gridPropNames = ['xs', 'sm', 'm'];\n\nconst gridPropsFrom = props => {\n  return _.pick(props, gridPropNames);\n};\n\nconst fieldPropsFrom = props => {\n  return _.omit(props, gridPropNames);\n};\n\nconst getLabelFromName = name => {\n  return _.chain(name).split('.').last().startCase().value();\n};","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/FormComponents.js"],"names":["Divider","Grid","Typography","dayjs","_","KeyboardDateTimePicker","KeyboardTimePicker","showErrorOnBlur","TextField","React","TextEntryItem","props","name","gridPropsFrom","getLabelFromName","fieldPropsFrom","TimeEntryItem","DateTimeEntryItem","format","SectionHeaderItem","top","style","marginTop","title","action","gridPropNames","pick","omit","chain","split","last","startCase","value"],"mappings":"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","sourcesContent":["import {\r\n    Divider, Grid,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport dayjs from 'dayjs';\r\nimport _ from 'lodash';\r\nimport {\r\n    KeyboardDateTimePicker,\r\n    KeyboardTimePicker,\r\n    showErrorOnBlur, TextField\r\n} from \"mui-rff\";\r\nimport React from 'react';\r\n\r\nexport const TextEntryItem = (props) => {\r\n    const { name } = props;\r\n    return (\r\n        <Grid item xs={12} {...gridPropsFrom(props)}>\r\n            <TextField size=\"small\"\r\n                label={getLabelFromName(name)}\r\n                variant=\"outlined\" showError={showErrorOnBlur}\r\n                {...fieldPropsFrom(props)}\r\n            />\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport const TimeEntryItem = (props) => {\r\n    const { name } = props;\r\n    return (\r\n        <Grid item xs={12} {...gridPropsFrom(props)}>\r\n            <KeyboardTimePicker\r\n                label={getLabelFromName(name)}\r\n                variant=\"inline\"\r\n                ampm={true}\r\n                inputVariant=\"outlined\"\r\n                size=\"small\"\r\n                mask=\"__:__ _M\"\r\n                placeholder=\"08:00 AM\"\r\n                {...fieldPropsFrom(props)}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport const DateTimeEntryItem = (props) => {\r\n    const { name } = props;\r\n    return (\r\n        <Grid item xs={12} {...gridPropsFrom(props)}>\r\n            <KeyboardDateTimePicker\r\n                label={getLabelFromName(name)}\r\n                variant=\"inline\"\r\n                ampm={true}\r\n                inputVariant=\"outlined\"\r\n                size=\"small\"\r\n                format=\"MM/dd/yyyy hh:mm a\"\r\n                mask=\"__/__/____ __:__ _M\"\r\n                placeholder={dayjs().format(\"MM/DD/YYYY hh:mm A\")}\r\n                {...fieldPropsFrom(props)}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport const SectionHeaderItem = (props) => {\r\n    const { \r\n        top,\r\n        style = top ? {} : { marginTop: 10 }, \r\n        title,\r\n        action\r\n    } = props;\r\n\r\n    return (\r\n        <Grid item container justify=\"space-between\" alignItems=\"flex-end\"\r\n            xs={12} {...gridPropsFrom(props)}\r\n        >\r\n            <Grid item><Typography style={style}>{title}</Typography></Grid>\r\n            <Grid item>{action}</Grid>\r\n            <Grid item xs={12}><Divider /></Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst gridPropNames = ['xs', 'sm', 'm'];\r\n\r\nconst gridPropsFrom = (props) => {\r\n    return _.pick(props, gridPropNames);\r\n};\r\n\r\nconst fieldPropsFrom = (props) => {\r\n    return _.omit(props, gridPropNames);\r\n};\r\n\r\nconst getLabelFromName = (name) => {\r\n    return _.chain(name).split('.').last().startCase().value();\r\n};\r\n"]},"metadata":{},"sourceType":"module"}