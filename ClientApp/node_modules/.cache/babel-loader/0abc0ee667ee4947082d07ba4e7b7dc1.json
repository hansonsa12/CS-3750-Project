{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\auth_components\\\\LoginForm.js\";\nimport { Button, CssBaseline, Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport { makeValidate, showErrorOnBlur, TextField } from \"mui-rff\";\nimport React, { useContext } from \"react\";\nimport { Form as FForm } from \"react-final-form\";\nimport { Link } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { AuthContext } from '../../context/AuthProvider';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    padding: 20,\n    maxWidth: \"450px\",\n    height: \"100vh\",\n    marginRight: \"auto\"\n  }\n}));\nexport default function SignUpForm(props) {\n  const textFields = [\"email\"].map(name => /*#__PURE__*/React.createElement(TextField, {\n    name: name,\n    label: _.startCase(name),\n    variant: \"outlined\",\n    required: true,\n    showError: showErrorOnBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }));\n  const passwordFields = [\"password\"].map(name => /*#__PURE__*/React.createElement(TextField, {\n    name: name,\n    label: _.startCase(name),\n    variant: \"outlined\",\n    type: \"password\",\n    required: true,\n    showError: showErrorOnBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }));\n  const formFields = [...textFields, ...passwordFields];\n  const {\n    login\n  } = useContext(AuthContext);\n\n  const onSubmit = values => {\n    login(values);\n  };\n\n  const classes = useStyles();\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().required(\"Email is required\").email(\"Please enter a valid email\"),\n    password: Yup.string().required(\"Password is required\")\n  });\n  const validate = makeValidate(validationSchema);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(FForm, {\n    onSubmit: onSubmit,\n    validate: validate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"row\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }, formFields.map((item, index) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 41\n    }\n  }, item)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 41\n    }\n  }, \"Login\"))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"Don't have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 48\n    }\n  }, \"Sign Up\")))));\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/auth_components/LoginForm.js"],"names":["Button","CssBaseline","Grid","makeStyles","Paper","Typography","_","makeValidate","showErrorOnBlur","TextField","React","useContext","Form","FForm","Link","Yup","AuthContext","useStyles","theme","paper","display","flexDirection","textAlign","justifyContent","padding","maxWidth","height","marginRight","SignUpForm","props","textFields","map","name","startCase","passwordFields","formFields","login","onSubmit","values","classes","validationSchema","object","shape","email","string","required","password","validate","className","handleSubmit","item","index","marginTop"],"mappings":"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","sourcesContent":["import {\r\n    Button,\r\n    CssBaseline, Grid,\r\n    makeStyles, Paper,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\nimport {\r\n    makeValidate,\r\n    showErrorOnBlur, TextField\r\n} from \"mui-rff\";\r\nimport React, { useContext } from \"react\";\r\nimport { Form as FForm } from \"react-final-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { AuthContext } from '../../context/AuthProvider';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        textAlign: \"center\",\r\n        justifyContent: \"center\",\r\n        padding: 20,\r\n        maxWidth: \"450px\",\r\n        height: \"100vh\",\r\n        marginRight: \"auto\",\r\n    },\r\n}));\r\n\r\nexport default function SignUpForm(props) {\r\n    const textFields = [\"email\"].map(name => (\r\n        <TextField\r\n            name={name}\r\n            label={_.startCase(name)}\r\n            variant=\"outlined\"\r\n            required={true}\r\n            showError={showErrorOnBlur}\r\n        />\r\n    ));\r\n\r\n    const passwordFields = [\"password\"].map(name => (\r\n        <TextField\r\n            name={name}\r\n            label={_.startCase(name)}\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            required={true}\r\n            showError={showErrorOnBlur}\r\n        />\r\n    ));\r\n\r\n    const formFields = [\r\n        ...textFields,\r\n        ...passwordFields,\r\n    ];\r\n\r\n    const { login } = useContext(AuthContext);\r\n\r\n    const onSubmit = values => {\r\n        login(values);\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        email: Yup.string()\r\n            .required(\"Email is required\")\r\n            .email(\"Please enter a valid email\"),\r\n        password: Yup.string().required(\"Password is required\"),\r\n\r\n    });\r\n\r\n    const validate = makeValidate(validationSchema);\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            <CssBaseline />\r\n            <Paper className={classes.paper}>\r\n                <Grid container spacing={2} justify=\"center\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h3\">Login</Typography>\r\n                    </Grid>\r\n                    <FForm\r\n                        onSubmit={onSubmit}\r\n                        validate={validate}\r\n                    >\r\n                        {({ handleSubmit }) => (\r\n                            <form onSubmit={handleSubmit}>\r\n                                <Grid\r\n                                    container\r\n                                    spacing={2}\r\n                                    justify=\"center\"\r\n                                    direction=\"row\"\r\n                                    alignItems=\"center\"\r\n                                >\r\n                                    {formFields.map((item, index) => (\r\n                                        <Grid item xs={12} key={index}>\r\n                                            {item}\r\n                                        </Grid>\r\n                                    ))}\r\n                                    <Grid item xs={12}>\r\n                                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                                            Login\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </form>\r\n                        )}\r\n                    </FForm>\r\n                    <Grid item style={{ marginTop: 10 }}>\r\n                        Don't have an account? <Link to=\"signup\">Sign Up</Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}