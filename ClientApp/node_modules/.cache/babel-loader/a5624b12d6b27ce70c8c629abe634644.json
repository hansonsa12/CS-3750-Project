{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\Calendar.js\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid'; // must come after FullCalendar import\n\nimport React, { useContext } from 'react';\nimport { DataContext } from '../context/DataProvider';\n\nfunction getCalEvents(course) {\n  const dayNums = {\n    m: 1,\n    t: 2,\n    w: 3,\n    r: 4,\n    f: 5\n  };\n  console.log(course.meetingDays);\n  const daysOfWeek = course.meetingDays != null ? course.meetingDays.toLowerCase().split('').map(d => dayNums[d]) : [6];\n  var callEvents = [];\n  const name = course.courseName;\n  const building = course.buildingName != null ? course.buildingName : 'BUILDING_DEFAULT';\n  const room = course.roomNumber != null ? course.roomNumber : 'ROOMNUMBER_DEFAULT';\n  const start = course.startTime != null ? course.startTime : '00:00';\n  const end = course.endTime != null ? course.endTime : '00:00';\n  callEvents.push({\n    title: name + ' ' + building + ' Room: ' + room,\n    startTime: start,\n    endTime: end,\n    daysOfWeek: daysOfWeek\n  });\n  return callEvents;\n}\n\nexport default function Calendar() {\n  const {\n    userCourses\n  } = useContext(DataContext);\n  var callEvents = [];\n  var tempArray = [];\n  userCourses.map(course => (callEvents = tempArray.concat(getCalEvents(course)), tempArray = callEvents));\n  return /*#__PURE__*/React.createElement(FullCalendar, {\n    plugins: [dayGridPlugin],\n    initialView: \"dayGridMonth\",\n    events: callEvents,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/Calendar.js"],"names":["FullCalendar","dayGridPlugin","React","useContext","DataContext","getCalEvents","course","dayNums","m","t","w","r","f","console","log","meetingDays","daysOfWeek","toLowerCase","split","map","d","callEvents","name","courseName","building","buildingName","room","roomNumber","start","startTime","end","endTime","push","title","Calendar","userCourses","tempArray","concat"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B,C,CAAmD;;AACnD,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAGA,SAASC,YAAT,CAAsBC,MAAtB,EACA;AACI,QAAMC,OAAO,GAAG;AAACC,IAAAA,CAAC,EAAE,CAAJ;AAAOC,IAAAA,CAAC,EAAC,CAAT;AAAYC,IAAAA,CAAC,EAAC,CAAd;AAAiBC,IAAAA,CAAC,EAAC,CAAnB;AAAsBC,IAAAA,CAAC,EAAC;AAAxB,GAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACS,WAAnB;AACA,QAAMC,UAAU,GAAGV,MAAM,CAACS,WAAP,IAAsB,IAAtB,GAA6BT,MAAM,CAACS,WAAP,CAAmBE,WAAnB,GAAiCC,KAAjC,CAAuC,EAAvC,EAA2CC,GAA3C,CAA+CC,CAAC,IAAIb,OAAO,CAACa,CAAD,CAA3D,CAA7B,GAA+F,CAAC,CAAD,CAAlH;AACA,MAAIC,UAAU,GAAG,EAAjB;AAEA,QAAMC,IAAI,GAAGhB,MAAM,CAACiB,UAApB;AACA,QAAMC,QAAQ,GAAGlB,MAAM,CAACmB,YAAP,IAAuB,IAAvB,GAA8BnB,MAAM,CAACmB,YAArC,GAAoD,kBAArE;AACA,QAAMC,IAAI,GAAGpB,MAAM,CAACqB,UAAP,IAAqB,IAArB,GAA4BrB,MAAM,CAACqB,UAAnC,GAAgD,oBAA7D;AACA,QAAMC,KAAK,GAAGtB,MAAM,CAACuB,SAAP,IAAoB,IAApB,GAA2BvB,MAAM,CAACuB,SAAlC,GAA8C,OAA5D;AACA,QAAMC,GAAG,GAAGxB,MAAM,CAACyB,OAAP,IAAkB,IAAlB,GAAyBzB,MAAM,CAACyB,OAAhC,GAA0C,OAAtD;AAEAV,EAAAA,UAAU,CAACW,IAAX,CAAgB;AACZC,IAAAA,KAAK,EAAEX,IAAI,GAAG,GAAP,GAAaE,QAAb,GAAwB,SAAxB,GAAoCE,IAD/B;AAEZG,IAAAA,SAAS,EAAED,KAFC;AAGZG,IAAAA,OAAO,EAAGD,GAHE;AAIZd,IAAAA,UAAU,EAAEA;AAJA,GAAhB;AAMA,SAAOK,UAAP;AACH;;AAED,eAAe,SAASa,QAAT,GAAmB;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAkBhC,UAAU,CAACC,WAAD,CAAlC;AAEA,MAAIiB,UAAU,GAAC,EAAf;AACA,MAAIe,SAAS,GAAC,EAAd;AACAD,EAAAA,WAAW,CAAChB,GAAZ,CAAgBb,MAAM,KAClBe,UAAU,GAAGe,SAAS,CAACC,MAAV,CAAiBhC,YAAY,CAACC,MAAD,CAA7B,CAAb,EACA8B,SAAS,GAAGf,UAFM,CAAtB;AAKA,sBAEI,oBAAC,YAAD;AACI,IAAA,OAAO,EAAE,CAACpB,aAAD,CADb;AAEI,IAAA,WAAW,EAAC,cAFhB;AAGI,IAAA,MAAM,EAAEoB,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAQH","sourcesContent":["import FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid'; // must come after FullCalendar import\r\nimport React, { useContext } from 'react';\r\nimport { DataContext } from '../context/DataProvider';\r\n\r\n\r\nfunction getCalEvents(course)\r\n{\r\n    const dayNums = {m: 1, t:2, w:3, r:4, f:5};\r\n    console.log(course.meetingDays)\r\n    const daysOfWeek = course.meetingDays != null ? course.meetingDays.toLowerCase().split('').map(d => dayNums[d]) : [6];\r\n    var callEvents = [];\r\n\r\n    const name = course.courseName;\r\n    const building = course.buildingName != null ? course.buildingName : 'BUILDING_DEFAULT';\r\n    const room = course.roomNumber != null ? course.roomNumber : 'ROOMNUMBER_DEFAULT';\r\n    const start = course.startTime != null ? course.startTime : '00:00';\r\n    const end = course.endTime != null ? course.endTime : '00:00';\r\n\r\n    callEvents.push({\r\n        title: name + ' ' + building + ' Room: ' + room,\r\n        startTime: start,\r\n        endTime : end,\r\n        daysOfWeek: daysOfWeek\r\n    })\r\n    return callEvents;\r\n}\r\n\r\nexport default function Calendar(){\r\n    const { userCourses } = useContext(DataContext);\r\n\r\n    var callEvents=[];\r\n    var tempArray=[];\r\n    userCourses.map(course => (\r\n        callEvents = tempArray.concat(getCalEvents(course)),\r\n        tempArray = callEvents\r\n    ))\r\n\r\n    return (\r\n        \r\n        <FullCalendar\r\n            plugins={[dayGridPlugin]}\r\n            initialView='dayGridMonth'\r\n            events={callEvents}\r\n        />\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}