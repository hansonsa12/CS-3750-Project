{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\Assignments\\\\AssignmentForm.js\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, MenuItem } from \"@material-ui/core\";\nimport { makeValidate } from 'mui-rff';\nimport React, { useContext } from \"react\";\nimport { Form as FForm } from \"react-final-form\";\nimport * as Yup from \"yup\";\nimport { AuthContext } from '../../context/AuthProvider';\nimport { AssignmentType, ASSIGNMENT_TYPES } from '../../helpers/constants';\nimport { DateTimeEntryItem, SectionHeaderItem, TextEntryItem } from \"../FormComponents\";\nexport default function AssignmentForm({\n  courseId\n}) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onSubmit = values => {\n    alert(JSON.stringify(values));\n  };\n\n  const {\n    authHeader\n  } = useContext(AuthContext);\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n    dueDate: Yup.string().required(\"Due Date is required\"),\n    maxPoints: Yup.number().required(\"Max points is required\")\n  });\n  const validate = makeValidate(validationSchema);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Add Assignment\"), /*#__PURE__*/React.createElement(FForm, {\n    onSubmit: onSubmit,\n    initialValues: {\n      assignmentType: AssignmentType.FILE_UPLOAD,\n      maxPoints: 0,\n      courseId\n    },\n    validate: validate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, \"Assignment Form\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(SectionHeaderItem, {\n    top: true,\n    title: \"Assignment Information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TextEntryItem, {\n    name: \"title\",\n    required: true,\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TextEntryItem, {\n    name: \"assignmentType\",\n    sm: 4,\n    required: true,\n    select: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 37\n    }\n  }, ASSIGNMENT_TYPES.map((option, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: `assignmentTypeOption-${index}`,\n    value: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 45\n    }\n  }, option))), /*#__PURE__*/React.createElement(TextEntryItem, {\n    name: \"description\",\n    rows: 6,\n    multiline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TextEntryItem, {\n    name: \"maxPoints\",\n    sm: 6,\n    required: true,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(DateTimeEntryItem, {\n    name: \"dueDate\",\n    sm: 6,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, \"Submit\"))))));\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/Assignments/AssignmentForm.js"],"names":["Button","Dialog","DialogActions","DialogContent","DialogTitle","Grid","MenuItem","makeValidate","React","useContext","Form","FForm","Yup","AuthContext","AssignmentType","ASSIGNMENT_TYPES","DateTimeEntryItem","SectionHeaderItem","TextEntryItem","AssignmentForm","courseId","open","setOpen","useState","handleClickOpen","handleClose","onSubmit","values","alert","JSON","stringify","authHeader","validationSchema","object","shape","title","string","required","dueDate","maxPoints","number","validate","assignmentType","FILE_UPLOAD","handleSubmit","map","option","index"],"mappings":"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","sourcesContent":["import {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle, Grid, MenuItem\r\n} from \"@material-ui/core\";\r\nimport { makeValidate } from 'mui-rff';\r\nimport React, { useContext } from \"react\";\r\nimport { Form as FForm } from \"react-final-form\";\r\nimport * as Yup from \"yup\";\r\nimport { AuthContext } from '../../context/AuthProvider';\r\nimport { AssignmentType, ASSIGNMENT_TYPES } from '../../helpers/constants';\r\nimport { DateTimeEntryItem, SectionHeaderItem, TextEntryItem } from \"../FormComponents\";\r\n\r\nexport default function AssignmentForm({\r\n    courseId\r\n}) {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const onSubmit = (values) => {\r\n        alert(JSON.stringify(values));\r\n    }\r\n\r\n    const {\r\n        authHeader\r\n    } = useContext(AuthContext);\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        title: Yup.string().required(\"Title is required\"),\r\n        dueDate: Yup.string().required(\"Due Date is required\"),\r\n        maxPoints: Yup.number().required(\"Max points is required\")\r\n    });\r\n\r\n    const validate = makeValidate(validationSchema);\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={handleClickOpen}>Add Assignment</Button>\r\n            <FForm onSubmit={onSubmit}\r\n                initialValues={{\r\n                    assignmentType: AssignmentType.FILE_UPLOAD,\r\n                    maxPoints: 0,\r\n                    courseId\r\n                }}\r\n                validate={validate}\r\n            >\r\n                {({ handleSubmit }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Dialog\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"form-dialog-title\"\r\n                        >\r\n                            <DialogTitle id=\"form-dialog-title\">Assignment Form</DialogTitle>\r\n                            <DialogContent>\r\n                                <Grid container spacing={2} justify=\"space-between\">\r\n                                    <SectionHeaderItem top title=\"Assignment Information\" />\r\n                                    <TextEntryItem name=\"title\" required={true} sm={8} />\r\n                                    <TextEntryItem name=\"assignmentType\" sm={4} required={true} select>\r\n                                        {ASSIGNMENT_TYPES.map((option, index) => (\r\n                                            <MenuItem key={`assignmentTypeOption-${index}`} value={option}>\r\n                                                {option}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextEntryItem>\r\n                                    <TextEntryItem name=\"description\" rows={6} multiline />\r\n                                    <TextEntryItem name=\"maxPoints\" sm={6} required={true} \r\n                                        type=\"number\" />\r\n                                    <DateTimeEntryItem name=\"dueDate\" sm={6} required={true} />\r\n                                </Grid>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={handleClose} color=\"primary\">\r\n                                    Cancel\r\n                            </Button>\r\n                                <Button onClick={handleSubmit} color=\"primary\">\r\n                                    Submit\r\n                            </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </form>\r\n                )}\r\n            </FForm>\r\n        </div>\r\n\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}