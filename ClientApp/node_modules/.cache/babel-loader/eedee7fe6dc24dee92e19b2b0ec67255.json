{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\Profile\\\\ProfileForm.js\";\nimport { Button, Grid, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Typography, Divider } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport _ from \"lodash\";\nimport { Form as FForm } from \"react-final-form\";\nimport { showErrorOnBlur } from \"mui-rff\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AuthContext } from '../../context/AuthProvider';\nimport axios from \"axios\";\nexport default function ProfileForm() {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      \"& > *\": {\n        margin: theme.spacing(1)\n      }\n    },\n    input: {\n      display: \"none\"\n    }\n  }));\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const {\n    user\n  } = useContext(AuthContext);\n\n  const onSubmit = values => {\n    var id = user.userId;\n    alert(id);\n    axios.put(\"api/users/${user.userID}\").then(res => {\n      this.setResponseToken(res);\n    }).catch(err => {\n      alert(err.message);\n      console.error(err.message);\n    });\n  };\n\n  const TextEntry = fieldProps => /*#__PURE__*/React.createElement(Grid, Object.assign({\n    item: true,\n    xs: 12\n  }, _.pick(fieldProps, [\"sm\"]), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, Object.assign({\n    size: \"small\",\n    label: _.startCase(fieldProps.name),\n    variant: \"outlined\",\n    showError: showErrorOnBlur\n  }, _.omit(fieldProps, [\"sm\"]), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })));\n\n  const SectionHeader = fieldProps => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: fieldProps.style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, fieldProps.title), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(FForm, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Edit Form\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SectionHeader, {\n    title: \"Profile Information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextEntry, {\n    name: \"phoneNumber\",\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextEntry, {\n    name: \"address1\",\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextEntry, {\n    name: \"address2\",\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextEntry, {\n    name: \"city\",\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextEntry, {\n    name: \"state\",\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextEntry, {\n    name: \"zipcode\",\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextEntry, {\n    name: \"link1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextEntry, {\n    name: \"link2\",\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextEntry, {\n    name: \"link3\",\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    id: \"contained-button-file\",\n    multiple: true,\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"Upload\"))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, \"Submit\"))))));\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/Profile/ProfileForm.js"],"names":["Button","Grid","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Typography","Divider","React","useContext","_","Form","FForm","showErrorOnBlur","makeStyles","AuthContext","axios","ProfileForm","useStyles","theme","root","margin","spacing","input","display","classes","open","setOpen","useState","handleClickOpen","handleClose","user","onSubmit","values","id","userId","alert","put","then","res","setResponseToken","catch","err","message","console","error","TextEntry","fieldProps","pick","startCase","name","omit","SectionHeader","style","title","handleSubmit"],"mappings":";AAAA,SACEA,MADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,aANF,EAOEC,SAPF,EAQEC,UARF,EASEC,OATF,QAUO,mBAVP;AAYA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,kBAA9B;AACA,SAAQC,eAAR,QAA+B,SAA/B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,eAAe,SAASC,WAAT,GAAuB;AAClC,QAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACrCC,IAAAA,IAAI,EAAE;AACJ,eAAS;AACPC,QAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADD;AADL,KAD+B;AAMrCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE;AADJ;AAN8B,GAAZ,CAAD,CAA5B;AAWA,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AAGA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBnB,KAAK,CAACoB,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5BF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMG,WAAW,GAAG,MAAM;AACxBH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAM;AAAEI,IAAAA;AAAF,MAAWtB,UAAU,CAACM,WAAD,CAA3B;;AAEA,QAAMiB,QAAQ,GAAGC,MAAM,IAAI;AACzB,QAAIC,EAAE,GAAGH,IAAI,CAACI,MAAd;AACAC,IAAAA,KAAK,CAACF,EAAD,CAAL;AAEAlB,IAAAA,KAAK,CACFqB,GADH,CACO,0BADP,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACX,WAAKC,gBAAL,CAAsBD,GAAtB;AACD,KAJH,EAKGE,KALH,CAKSC,GAAG,IAAI;AACZN,MAAAA,KAAK,CAACM,GAAG,CAACC,OAAL,CAAL;AACAC,MAAAA,OAAO,CAACC,KAAR,CAAcH,GAAG,CAACC,OAAlB;AACH,KARD;AAUD,GAdD;;AAgBA,QAAMG,SAAS,GAAIC,UAAD,iBACd,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE;AAAf,KAAuBrC,CAAC,CAACsC,IAAF,CAAOD,UAAP,EAAmB,CAAC,IAAD,CAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAErC,CAAC,CAACuC,SAAF,CAAYF,UAAU,CAACG,IAAvB,CAFT;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,SAAS,EAAErC;AAJb,KAKMH,CAAC,CAACyC,IAAF,CAAOJ,UAAP,EAAmB,CAAC,IAAD,CAAnB,CALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADJ;;AAYE,QAAMK,aAAa,GAAIL,UAAD,iBACpB,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEA,UAAU,CAACM,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCN,UAAU,CAACO,KAAjD,CADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;;AAQJ,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAEzB,eAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAIA,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEG,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEuB,IAAAA;AAAF,GAAD,kBACC;AAAM,IAAA,QAAQ,EAAEA,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAE7B,IADR;AAEE,IAAA,OAAO,EAAEI,WAFX;AAGE,uBAAgB,mBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,eAME,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,OAAO,EAAC,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,aAAhB;AAA8B,IAAA,EAAE,EAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,UAAhB;AAA2B,IAAA,EAAE,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,UAAhB;AAA2B,IAAA,EAAE,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,MAAhB;AAAuB,IAAA,EAAE,EAAE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,EAAE,EAAE,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,SAAhB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,EAAE,EAAE,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,EAAE,EAAE,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAWE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,MAAM,EAAC,SADT;AAEE,IAAA,SAAS,EAAEL,OAAO,CAACF,KAFrB;AAGE,IAAA,EAAE,EAAC,uBAHL;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,IAAI,EAAC,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AAAO,IAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,SAAS,EAAC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CARF,CAXF,CADF,CANF,eAsCE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEO,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEyB,YAAjB;AAA+B,IAAA,KAAK,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAtCF,CADF,CAFJ,CAJA,CADF;AA4DD","sourcesContent":["import {\r\n  Button,\r\n  Grid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport React, { useContext } from \"react\";\r\n\r\nimport _ from \"lodash\";\r\nimport { Form as FForm } from \"react-final-form\";\r\nimport {showErrorOnBlur } from \"mui-rff\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AuthContext } from '../../context/AuthProvider';\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nexport default function ProfileForm() {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          \"& > *\": {\r\n            margin: theme.spacing(1),\r\n          },\r\n        },\r\n        input: {\r\n          display: \"none\",\r\n        },\r\n      }));\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    const { user } = useContext(AuthContext);\r\n\r\n    const onSubmit = values => {\r\n      var id = user.userId;\r\n      alert(id);\r\n\r\n      axios\r\n        .put(\"api/users/${user.userID}\")\r\n        .then(res => {\r\n          this.setResponseToken(res);\r\n        })\r\n        .catch(err => {\r\n          alert(err.message);\r\n          console.error(err.message);\r\n      });\r\n      \r\n    }\r\n\r\n    const TextEntry = (fieldProps) => (\r\n        <Grid item xs={12} {..._.pick(fieldProps, [\"sm\"])}>\r\n          <TextField\r\n            size=\"small\"\r\n            label={_.startCase(fieldProps.name)}\r\n            variant=\"outlined\"\r\n            showError={showErrorOnBlur}\r\n            {..._.omit(fieldProps, [\"sm\"])}\r\n          />\r\n        </Grid>\r\n      );\r\n\r\n      const SectionHeader = (fieldProps) => (\r\n        <Grid item xs={12}>\r\n          <Typography style={fieldProps.style}>{fieldProps.title}</Typography>\r\n          <Divider />\r\n        </Grid>\r\n      );\r\n\r\n\r\n  return (\r\n    <div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n            Edit\r\n        </Button>\r\n    <FForm onSubmit={onSubmit}>\r\n      {({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Edit Form</DialogTitle>\r\n            <DialogContent>\r\n              <Grid container spacing={2} justify=\"space-between\">\r\n                <SectionHeader title=\"Profile Information\" />\r\n                <TextEntry name=\"phoneNumber\" sm={6} />\r\n                <TextEntry name=\"address1\" sm={6} />\r\n                <TextEntry name=\"address2\" sm={6} />\r\n                <TextEntry name=\"city\" sm={6} />\r\n                <TextEntry name=\"state\" sm={6} />\r\n                <TextEntry name=\"zipcode\" sm={6} />\r\n                <TextEntry name=\"link1\" />\r\n                <TextEntry name=\"link2\" sm={6} />\r\n                <TextEntry name=\"link3\" sm={6} />\r\n                <Grid item>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                  />\r\n                  <label htmlFor=\"contained-button-file\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      component=\"span\"\r\n                    >\r\n                      Upload\r\n                    </Button>\r\n                  </label>\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={handleSubmit} color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </form>\r\n      )}\r\n    </FForm>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}