{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\auth_components\\\\SignUpForm.js\";\nimport React, { useContext } from \"react\";\nimport { Form as FForm } from \"react-final-form\";\nimport { KeyboardDatePicker, makeValidate, Radios, TextField, showErrorOnBlur } from \"mui-rff\";\nimport { Button, Paper, Grid, makeStyles, CssBaseline, Typography, Divider } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport * as Yup from \"yup\";\nimport dayjs from \"dayjs\";\nimport axios from \"axios\";\nimport { AuthContext } from '../../context/AuthProvider';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    padding: 20,\n    maxWidth: \"450px\",\n    height: \"100vh\",\n    marginRight: \"auto\"\n  }\n}));\nexport default function SignUpForm(props) {\n  const textFields = [\"firstName\", \"lastName\", \"email\"].map(name => /*#__PURE__*/React.createElement(TextField, {\n    name: name,\n    label: _.startCase(name),\n    variant: \"outlined\",\n    required: true,\n    showError: showErrorOnBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }));\n  const passwordFields = [\"password\", \"confirmPassword\"].map(name => /*#__PURE__*/React.createElement(TextField, {\n    name: name,\n    label: _.startCase(name),\n    variant: \"outlined\",\n    type: \"password\",\n    required: true,\n    showError: showErrorOnBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }));\n  const formFields = [...textFields, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    name: \"birthDay\",\n    disableToolbar: false,\n    variant: \"inline\",\n    format: \"MM/dd/yyyy\",\n    placeholder: \"mm/dd/yyyy\",\n    label: \"Birth Date\",\n    inputVariant: \"outlined\",\n    required: true,\n    showError: showErrorOnBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), ...passwordFields, /*#__PURE__*/React.createElement(Radios, {\n    variant: \"inline\",\n    name: \"accountType\",\n    data: [{\n      label: \"Student\",\n      value: \"student\"\n    }, {\n      label: \"Instructor\",\n      value: \"instructor\"\n    }],\n    radioGroupProps: {\n      row: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })];\n  const {\n    signup\n  } = useContext(AuthContext);\n\n  const onSubmit = values => {\n    signup(values);\n  };\n\n  const classes = useStyles();\n  const initialValues = {\n    accountType: \"student\"\n  };\n  const validationSchema = Yup.object().shape({\n    firstName: Yup.string().required(\"First name is required\"),\n    lastName: Yup.string().required(\"Last name is required\"),\n    email: Yup.string().required(\"Email is required\").email(\"Please enter a valid email\"),\n    birthDay: Yup.mixed().required(\"Birth date is required. \").test(\"birthDay\", \"Must be at least 16 years old to register\", value => {\n      return dayjs().diff(dayjs(value), \"year\") >= 16;\n    }),\n    password: Yup.string().required(\"Password is required\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref(\"password\")], \"Passwords must match\")\n  });\n  const validate = makeValidate(validationSchema);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, \"Sign Up\")), /*#__PURE__*/React.createElement(FForm, {\n    onSubmit: onSubmit,\n    initialValues: initialValues,\n    validate: validate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"row\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  }, formFields.map((item, index) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 41\n    }\n  }, item)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 41\n    }\n  }, \"Submit\"))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 50\n    }\n  }, \"Login\")))));\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/auth_components/SignUpForm.js"],"names":["React","useContext","Form","FForm","KeyboardDatePicker","makeValidate","Radios","TextField","showErrorOnBlur","Button","Paper","Grid","makeStyles","CssBaseline","Typography","Divider","Link","_","Yup","dayjs","axios","AuthContext","useStyles","theme","paper","display","flexDirection","textAlign","justifyContent","padding","maxWidth","height","marginRight","SignUpForm","props","textFields","map","name","startCase","passwordFields","formFields","label","value","row","signup","onSubmit","values","classes","initialValues","accountType","validationSchema","object","shape","firstName","string","required","lastName","email","birthDay","mixed","test","diff","password","confirmPassword","oneOf","ref","validate","className","handleSubmit","item","index","marginTop"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Form as FForm } from \"react-final-form\";\r\nimport {\r\n    KeyboardDatePicker,\r\n    makeValidate,\r\n    Radios,\r\n    TextField,\r\n    showErrorOnBlur,\r\n} from \"mui-rff\";\r\nimport {\r\n    Button,\r\n    Paper,\r\n    Grid,\r\n    makeStyles,\r\n    CssBaseline,\r\n    Typography,\r\n    Divider,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport * as Yup from \"yup\";\r\nimport dayjs from \"dayjs\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from '../../context/AuthProvider';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        textAlign: \"center\",\r\n        justifyContent: \"center\",\r\n        padding: 20,\r\n        maxWidth: \"450px\",\r\n        height: \"100vh\",\r\n        marginRight: \"auto\",\r\n    },\r\n}));\r\n\r\nexport default function SignUpForm(props) {\r\n    const textFields = [\"firstName\", \"lastName\", \"email\"].map(name => (\r\n        <TextField\r\n            name={name}\r\n            label={_.startCase(name)}\r\n            variant=\"outlined\"\r\n            required={true}\r\n            showError={showErrorOnBlur}\r\n        />\r\n    ));\r\n\r\n    const passwordFields = [\"password\", \"confirmPassword\"].map(name => (\r\n        <TextField\r\n            name={name}\r\n            label={_.startCase(name)}\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            required={true}\r\n            showError={showErrorOnBlur}\r\n        />\r\n    ));\r\n\r\n    const formFields = [\r\n        ...textFields,\r\n\r\n        <Divider />,\r\n\r\n        <KeyboardDatePicker\r\n            name=\"birthDay\"\r\n            disableToolbar={false}\r\n            variant=\"inline\"\r\n            format=\"MM/dd/yyyy\"\r\n            placeholder=\"mm/dd/yyyy\"\r\n            label=\"Birth Date\"\r\n            inputVariant=\"outlined\"\r\n            required={true}\r\n            showError={showErrorOnBlur}\r\n        />,\r\n\r\n        ...passwordFields,\r\n\r\n        <Radios\r\n            variant=\"inline\"\r\n            name=\"accountType\"\r\n            data={[\r\n                { label: \"Student\", value: \"student\" },\r\n                { label: \"Instructor\", value: \"instructor\" },\r\n            ]}\r\n            radioGroupProps={{ row: true }}\r\n        />,\r\n    ];\r\n\r\n    const { signup } = useContext(AuthContext);\r\n\r\n    const onSubmit = values => {\r\n        signup(values);\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    const initialValues = {\r\n        accountType: \"student\",\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        firstName: Yup.string().required(\"First name is required\"),\r\n        lastName: Yup.string().required(\"Last name is required\"),\r\n        email: Yup.string()\r\n            .required(\"Email is required\")\r\n            .email(\"Please enter a valid email\"),\r\n        birthDay: Yup.mixed()\r\n            .required(\"Birth date is required. \")\r\n            .test(\"birthDay\", \"Must be at least 16 years old to register\", value => {\r\n                return dayjs().diff(dayjs(value), \"year\") >= 16;\r\n            }),\r\n        password: Yup.string().required(\"Password is required\"),\r\n        confirmPassword: Yup.string().oneOf(\r\n            [Yup.ref(\"password\")],\r\n            \"Passwords must match\"\r\n        ),\r\n    });\r\n\r\n    const validate = makeValidate(validationSchema);\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            <CssBaseline />\r\n            <Paper className={classes.paper}>\r\n                <Grid container spacing={2} justify=\"center\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h3\">Sign Up</Typography>\r\n                    </Grid>\r\n                    <FForm\r\n                        onSubmit={onSubmit}\r\n                        initialValues={initialValues}\r\n                        validate={validate}\r\n                    >\r\n                        {({ handleSubmit }) => (\r\n                            <form onSubmit={handleSubmit}>\r\n                                <Grid\r\n                                    container\r\n                                    spacing={2}\r\n                                    justify=\"center\"\r\n                                    direction=\"row\"\r\n                                    alignItems=\"center\"\r\n                                >\r\n                                    {formFields.map((item, index) => (\r\n                                        <Grid item xs={12} key={index}>\r\n                                            {item}\r\n                                        </Grid>\r\n                                    ))}\r\n                                    <Grid item xs={12}>\r\n                                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </form>\r\n                        )}\r\n                    </FForm>\r\n                    <Grid item style={{ marginTop: 10 }}>\r\n                        Already have an account? <Link to=\"login\">Login</Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}