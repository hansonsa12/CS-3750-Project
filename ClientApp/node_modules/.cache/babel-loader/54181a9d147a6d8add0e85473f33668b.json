{"ast":null,"code":"import dayjs from \"dayjs\";\nimport _ from \"lodash\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nexport const AccountType = {\n  INSTRUCTOR: \"instructor\",\n  STUDENT: \"student\"\n};\nexport const getFormattedTime = (startTime, endTime) => {\n  return _.chain([startTime, endTime]).compact().join(\" - \").value();\n};\nexport const getFormattedLocation = (building, room) => {\n  return _.chain([building, room]).compact().join(\", \").value();\n};\nexport const getFormattedInstructorName = ({\n  lastName,\n  firstName\n}) => {\n  return _.chain([lastName, firstName]).compact().join(\", \").value();\n};\nexport const getFileUrl = (userId, type, fileName) => {\n  return userId && fileName ? `/uploads/u${userId}/${type}s/${fileName}` : null;\n};\nexport const MAX_PROFILE_LINKS = 5;\nexport const AssignmentType = {\n  FILE_UPLOAD: \"File Upload\",\n  TEXT_ENTRY: \"Text Entry\"\n};\nexport const COST_PER_CREDIT = 100;\nexport const ASSIGNMENT_TYPES = [...Object.values(AssignmentType)];\nexport const DEPARTMENTS = [\"Computer Science\", \"Physics\", \"Math\", \"English\", \"Communications\"];\nexport const getFormattedDateTime = dueDate => {\n  return dueDate ? dayjs(dueDate).format(\"MM/DD/YYYY hh:mm A\") : \"n/a\";\n};\nexport const currencyFormatter = new Intl.NumberFormat(\"en-US\", {\n  /* https://stackoverflow.com/questions/149055/how-to-format-numbers-as-currency-string */\n  style: \"currency\",\n  currency: \"USD\"\n});\ndayjs.extend(customParseFormat);\nexport const testCreditCard = {\n  nameOnCard: \"Test Card\",\n  cardNumber: \"4242424242424242\",\n  expDate: dayjs(\"04/22\", \"MM/YY\").format(),\n  cvc: \"314\"\n};\nexport const stripePublicKey = \"pk_test_51IbtKZD8gKZEIEySSvvoF7Wn4ldzPK0fBfV91OchfcM9Oz8Fgk3HEJeSXdOdrsRrNBFo8z8yWqFwrUBxZx5TUMRs00mYyjCI2c\";","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/helpers/helpers.js"],"names":["dayjs","_","customParseFormat","AccountType","INSTRUCTOR","STUDENT","getFormattedTime","startTime","endTime","chain","compact","join","value","getFormattedLocation","building","room","getFormattedInstructorName","lastName","firstName","getFileUrl","userId","type","fileName","MAX_PROFILE_LINKS","AssignmentType","FILE_UPLOAD","TEXT_ENTRY","COST_PER_CREDIT","ASSIGNMENT_TYPES","Object","values","DEPARTMENTS","getFormattedDateTime","dueDate","format","currencyFormatter","Intl","NumberFormat","style","currency","extend","testCreditCard","nameOnCard","cardNumber","expDate","cvc","stripePublicKey"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AAEA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,UAAU,EAAE,YADW;AAEvBC,EAAAA,OAAO,EAAE;AAFc,CAApB;AAKP,OAAO,MAAMC,gBAAgB,GAAG,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AACpD,SAAOP,CAAC,CAACQ,KAAF,CAAQ,CAACF,SAAD,EAAYC,OAAZ,CAAR,EAA8BE,OAA9B,GAAwCC,IAAxC,CAA6C,KAA7C,EAAoDC,KAApD,EAAP;AACH,CAFM;AAIP,OAAO,MAAMC,oBAAoB,GAAG,CAACC,QAAD,EAAWC,IAAX,KAAoB;AACpD,SAAOd,CAAC,CAACQ,KAAF,CAAQ,CAACK,QAAD,EAAWC,IAAX,CAAR,EAA0BL,OAA1B,GAAoCC,IAApC,CAAyC,IAAzC,EAA+CC,KAA/C,EAAP;AACH,CAFM;AAIP,OAAO,MAAMI,0BAA0B,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA6B;AACnE,SAAOjB,CAAC,CAACQ,KAAF,CAAQ,CAACQ,QAAD,EAAWC,SAAX,CAAR,EAA+BR,OAA/B,GAAyCC,IAAzC,CAA8C,IAA9C,EAAoDC,KAApD,EAAP;AACH,CAFM;AAIP,OAAO,MAAMO,UAAU,GAAG,CAACC,MAAD,EAASC,IAAT,EAAeC,QAAf,KAA4B;AAClD,SAAOF,MAAM,IAAIE,QAAV,GACA,aAAYF,MAAO,IAAGC,IAAK,KAAIC,QAAS,EADxC,GAED,IAFN;AAGH,CAJM;AAMP,OAAO,MAAMC,iBAAiB,GAAG,CAA1B;AAEP,OAAO,MAAMC,cAAc,GAAG;AAC1BC,EAAAA,WAAW,EAAE,aADa;AAE1BC,EAAAA,UAAU,EAAE;AAFc,CAAvB;AAKP,OAAO,MAAMC,eAAe,GAAG,GAAxB;AAEP,OAAO,MAAMC,gBAAgB,GAAG,CAAC,GAAGC,MAAM,CAACC,MAAP,CAAcN,cAAd,CAAJ,CAAzB;AACP,OAAO,MAAMO,WAAW,GAAG,CACvB,kBADuB,EAEvB,SAFuB,EAGvB,MAHuB,EAIvB,SAJuB,EAKvB,gBALuB,CAApB;AAQP,OAAO,MAAMC,oBAAoB,GAAGC,OAAO,IAAI;AAC3C,SAAOA,OAAO,GAAGjC,KAAK,CAACiC,OAAD,CAAL,CAAeC,MAAf,CAAsB,oBAAtB,CAAH,GAAiD,KAA/D;AACH,CAFM;AAIP,OAAO,MAAMC,iBAAiB,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC5D;AACAC,EAAAA,KAAK,EAAE,UAFqD;AAG5DC,EAAAA,QAAQ,EAAE;AAHkD,CAA/B,CAA1B;AAMPvC,KAAK,CAACwC,MAAN,CAAatC,iBAAb;AACA,OAAO,MAAMuC,cAAc,GAAG;AAC1BC,EAAAA,UAAU,EAAE,WADc;AAE1BC,EAAAA,UAAU,EAAE,kBAFc;AAG1BC,EAAAA,OAAO,EAAE5C,KAAK,CAAC,OAAD,EAAU,OAAV,CAAL,CAAwBkC,MAAxB,EAHiB;AAI1BW,EAAAA,GAAG,EAAE;AAJqB,CAAvB;AAOP,OAAO,MAAMC,eAAe,GACxB,6GADG","sourcesContent":["import dayjs from \"dayjs\";\r\nimport _ from \"lodash\";\r\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\r\n\r\nexport const AccountType = {\r\n    INSTRUCTOR: \"instructor\",\r\n    STUDENT: \"student\"\r\n};\r\n\r\nexport const getFormattedTime = (startTime, endTime) => {\r\n    return _.chain([startTime, endTime]).compact().join(\" - \").value();\r\n};\r\n\r\nexport const getFormattedLocation = (building, room) => {\r\n    return _.chain([building, room]).compact().join(\", \").value();\r\n};\r\n\r\nexport const getFormattedInstructorName = ({ lastName, firstName }) => {\r\n    return _.chain([lastName, firstName]).compact().join(\", \").value();\r\n};\r\n\r\nexport const getFileUrl = (userId, type, fileName) => {\r\n    return userId && fileName\r\n        ? `/uploads/u${userId}/${type}s/${fileName}`\r\n        : null;\r\n};\r\n\r\nexport const MAX_PROFILE_LINKS = 5;\r\n\r\nexport const AssignmentType = {\r\n    FILE_UPLOAD: \"File Upload\",\r\n    TEXT_ENTRY: \"Text Entry\"\r\n};\r\n\r\nexport const COST_PER_CREDIT = 100;\r\n\r\nexport const ASSIGNMENT_TYPES = [...Object.values(AssignmentType)];\r\nexport const DEPARTMENTS = [\r\n    \"Computer Science\",\r\n    \"Physics\",\r\n    \"Math\",\r\n    \"English\",\r\n    \"Communications\"\r\n];\r\n\r\nexport const getFormattedDateTime = dueDate => {\r\n    return dueDate ? dayjs(dueDate).format(\"MM/DD/YYYY hh:mm A\") : \"n/a\";\r\n};\r\n\r\nexport const currencyFormatter = new Intl.NumberFormat(\"en-US\", {\r\n    /* https://stackoverflow.com/questions/149055/how-to-format-numbers-as-currency-string */\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n});\r\n\r\ndayjs.extend(customParseFormat);\r\nexport const testCreditCard = {\r\n    nameOnCard: \"Test Card\",\r\n    cardNumber: \"4242424242424242\",\r\n    expDate: dayjs(\"04/22\", \"MM/YY\").format(),\r\n    cvc: \"314\"\r\n};\r\n\r\nexport const stripePublicKey =\r\n    \"pk_test_51IbtKZD8gKZEIEySSvvoF7Wn4ldzPK0fBfV91OchfcM9Oz8Fgk3HEJeSXdOdrsRrNBFo8z8yWqFwrUBxZx5TUMRs00mYyjCI2c\";\r\n"]},"metadata":{},"sourceType":"module"}