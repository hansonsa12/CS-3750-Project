{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\Assignments\\\\SubmissionDetails.js\";\nimport { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { CircularProgressbar, CircularProgressbarWithChildren } from \"react-circular-progressbar\";\nimport { getFileUrl, getFormattedDateTime } from \"../../helpers/helpers\";\nimport DetailsContainer from \"../DetailsContainer\";\nimport { SectionHeaderItem } from \"../FormComponents\";\nexport default function SubmissionDetails({\n  submission,\n  assignment\n}) {\n  const percentageScore = (submission === null || submission === void 0 ? void 0 : submission.receivedScore) / (assignment === null || assignment === void 0 ? void 0 : assignment.maxPoints) * 100;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SectionHeaderItem, {\n    title: \"Submission Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DetailsContainer, {\n    object: submission,\n    omitProperties: [\"student\", \"assignmentSubmissionId\", \"assignmentId\", \"studentId\", \"fileName\"],\n    specialFormatters: {\n      submittedAt: s => getFormattedDateTime(s.submittedAt),\n      submission: s => s.fileName ? /*#__PURE__*/React.createElement(\"a\", {\n        href: getFileUrl(s.studentId, \"submission\", s.fileName),\n        target: \"_blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }\n      }, s.submission) : s.submission,\n      gradedAt: s => getFormattedDateTime(s.gradedAt),\n      receivedScore: s => s.receivedScore && assignment.maxPoints ? `${s.receivedScore}/${assignment.maxPoints} (${percentageScore}%)` : s.receivedScore ? s.receivedScore : \"-\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 180,\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, submission.receivedScore ? /*#__PURE__*/React.createElement(CircularProgressbar, {\n    value: percentageScore,\n    text: percentageScore === Infinity ? `${submission.receivedScore}pts.` : `${percentageScore}%`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(CircularProgressbarWithChildren, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, \"Not Yet Graded\")))));\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/Assignments/SubmissionDetails.js"],"names":["Grid","React","CircularProgressbar","CircularProgressbarWithChildren","getFileUrl","getFormattedDateTime","DetailsContainer","SectionHeaderItem","SubmissionDetails","submission","assignment","percentageScore","receivedScore","maxPoints","submittedAt","s","fileName","studentId","gradedAt","width","margin","Infinity"],"mappings":";AAAA,SAASA,IAAT,QAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,mBADJ,EAEIC,+BAFJ,QAGO,4BAHP;AAIA,SAASC,UAAT,EAAqBC,oBAArB,QAAiD,uBAAjD;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA,eAAe,SAASC,iBAAT,CAA2B;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAA3B,EAAuD;AAClE,QAAMC,eAAe,GAChB,CAAAF,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEG,aAAZ,KAA4BF,UAA5B,aAA4BA,UAA5B,uBAA4BA,UAAU,CAAEG,SAAxC,CAAD,GAAsD,GAD1D;AAGA,sBACI,uDACI,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,oBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AACI,IAAA,MAAM,EAAEJ,UADZ;AAEI,IAAA,cAAc,EAAE,CACZ,SADY,EAEZ,wBAFY,EAGZ,cAHY,EAIZ,WAJY,EAKZ,UALY,CAFpB;AASI,IAAA,iBAAiB,EAAE;AACfK,MAAAA,WAAW,EAAEC,CAAC,IAAIV,oBAAoB,CAACU,CAAC,CAACD,WAAH,CADvB;AAEfL,MAAAA,UAAU,EAAEM,CAAC,IACTA,CAAC,CAACC,QAAF,gBACI;AACI,QAAA,IAAI,EAAEZ,UAAU,CACZW,CAAC,CAACE,SADU,EAEZ,YAFY,EAGZF,CAAC,CAACC,QAHU,CADpB;AAMI,QAAA,MAAM,EAAC,QANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQKD,CAAC,CAACN,UARP,CADJ,GAYIM,CAAC,CAACN,UAfK;AAiBfS,MAAAA,QAAQ,EAAEH,CAAC,IAAIV,oBAAoB,CAACU,CAAC,CAACG,QAAH,CAjBpB;AAkBfN,MAAAA,aAAa,EAAEG,CAAC,IACZA,CAAC,CAACH,aAAF,IAAmBF,UAAU,CAACG,SAA9B,GACO,GAAEE,CAAC,CAACH,aAAc,IAAGF,UAAU,CAACG,SAAU,KAAIF,eAAgB,IADrE,GAEMI,CAAC,CAACH,aAAF,GACAG,CAAC,CAACH,aADF,GAEA;AAvBK,KATvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAmCI;AACI,IAAA,KAAK,EAAE;AACHO,MAAAA,KAAK,EAAE,GADJ;AAEHC,MAAAA,MAAM,EAAE;AAFL,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKX,UAAU,CAACG,aAAX,gBACG,oBAAC,mBAAD;AACI,IAAA,KAAK,EAAED,eADX;AAEI,IAAA,IAAI,EACAA,eAAe,KAAKU,QAApB,GACO,GAAEZ,UAAU,CAACG,aAAc,MADlC,GAEO,GAAED,eAAgB,GALjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,gBAUG,oBAAC,+BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhBR,CAnCJ,CADJ,CAFJ,CADJ;AAgEH","sourcesContent":["import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n    CircularProgressbar,\r\n    CircularProgressbarWithChildren\r\n} from \"react-circular-progressbar\";\r\nimport { getFileUrl, getFormattedDateTime } from \"../../helpers/helpers\";\r\nimport DetailsContainer from \"../DetailsContainer\";\r\nimport { SectionHeaderItem } from \"../FormComponents\";\r\n\r\nexport default function SubmissionDetails({ submission, assignment }) {\r\n    const percentageScore =\r\n        (submission?.receivedScore / assignment?.maxPoints) * 100;\r\n\r\n    return (\r\n        <>\r\n            <SectionHeaderItem title=\"Submission Details\" />\r\n            <Grid item xs={12}>\r\n                <DetailsContainer\r\n                    object={submission}\r\n                    omitProperties={[\r\n                        \"student\",\r\n                        \"assignmentSubmissionId\",\r\n                        \"assignmentId\",\r\n                        \"studentId\",\r\n                        \"fileName\"\r\n                    ]}\r\n                    specialFormatters={{\r\n                        submittedAt: s => getFormattedDateTime(s.submittedAt),\r\n                        submission: s =>\r\n                            s.fileName ? (\r\n                                <a\r\n                                    href={getFileUrl(\r\n                                        s.studentId,\r\n                                        \"submission\",\r\n                                        s.fileName\r\n                                    )}\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    {s.submission}\r\n                                </a>\r\n                            ) : (\r\n                                s.submission\r\n                            ),\r\n                        gradedAt: s => getFormattedDateTime(s.gradedAt),\r\n                        receivedScore: s =>\r\n                            s.receivedScore && assignment.maxPoints\r\n                                ? `${s.receivedScore}/${assignment.maxPoints} (${percentageScore}%)`\r\n                                : s.receivedScore\r\n                                ? s.receivedScore\r\n                                : \"-\"\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            width: 180,\r\n                            margin: \"auto\"\r\n                        }}\r\n                    >\r\n                        {submission.receivedScore ? (\r\n                            <CircularProgressbar\r\n                                value={percentageScore}\r\n                                text={\r\n                                    percentageScore === Infinity\r\n                                        ? `${submission.receivedScore}pts.`\r\n                                        : `${percentageScore}%`\r\n                                }\r\n                            />\r\n                        ) : (\r\n                            <CircularProgressbarWithChildren>\r\n                                Not Yet Graded\r\n                            </CircularProgressbarWithChildren>\r\n                        )}\r\n                    </div>\r\n                </DetailsContainer>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}