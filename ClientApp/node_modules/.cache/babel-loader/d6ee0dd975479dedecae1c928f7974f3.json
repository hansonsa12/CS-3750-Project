{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\Registrations.js\";\nimport { Button, ButtonGroup, Grid } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { getFormattedTime } from '../helpers/constants';\nimport DepartmentDropDown from './Courses/DepartmentDropDown';\nimport TableComponent from './TableComponent';\nimport { AuthContext } from '../context/AuthProvider';\nexport default function Registrations() {\n  const [allCourses, setAllCourses] = useState([]);\n  const {\n    user,\n    authHeader\n  } = useContext(AuthContext);\n\n  function registerStudent() {\n    console.log(\"registering Student\"); // TODO add route here\n  }\n\n  const [columns] = useState([{\n    header: \"Course Number\",\n    accessor: \"courseNumber\"\n  }, {\n    header: \"Title\",\n    accessor: \"courseName\"\n  }, {\n    header: \"Instructor\",\n    accessor: r => {\n      var _r$instructor, _r$instructor2;\n\n      return `${(_r$instructor = r.instructor) === null || _r$instructor === void 0 ? void 0 : _r$instructor.lastName}, ${(_r$instructor2 = r.instructor) === null || _r$instructor2 === void 0 ? void 0 : _r$instructor2.firstName}`;\n    }\n  }, {\n    header: \"Location\",\n    accessor: r => `${r.buildingName}, ${r.roomNumber}`\n  }, {\n    header: \"Time\",\n    accessor: r => getFormattedTime(r.startTime, r.endTime)\n  }, {\n    header: \"Meeting Days\",\n    accessor: \"meetingDays\"\n  }, {\n    header: \"Register\",\n    accessor: r => /*#__PURE__*/React.createElement(ButtonGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: registerStudent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"Register\"))\n  }]);\n  useEffect(() => {\n    // get list of all courses\n    setAllCourses([{\n      courseId: 6,\n      courseName: \"Advanced Database Programming\",\n      courseNumber: \"CS 3550\",\n      instructorId: 1,\n      instructor: {\n        firstName: \"Joe\",\n        lastName: \"Instructor\"\n      },\n      department: \"Computer Science\",\n      creditHours: 4,\n      description: \"Learn how to do some advanced things with databases!\",\n      buildingName: \"Computer Science Building\",\n      roomNumber: \"CA 141\",\n      meetingDays: \"MWF\",\n      startTime: \"08:00 AM\",\n      endTime: \"11:30 AM\",\n      maxCapacity: 35,\n      registrations: null,\n      assignment: null\n    }]);\n  }, []);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DepartmentDropDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableComponent, {\n    rows: allCourses,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/Registrations.js"],"names":["Button","ButtonGroup","Grid","React","useState","useEffect","getFormattedTime","DepartmentDropDown","TableComponent","AuthContext","Registrations","allCourses","setAllCourses","user","authHeader","useContext","registerStudent","console","log","columns","header","accessor","r","instructor","lastName","firstName","buildingName","roomNumber","startTime","endTime","courseId","courseName","courseNumber","instructorId","department","creditHours","description","meetingDays","maxCapacity","registrations","assignment","width"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,IAA9B,QAA0C,mBAA1C;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,eAAe,SAASC,aAAT,GAAyB;AACpC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM;AAACS,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAsBC,UAAU,CAACN,WAAD,CAAtC;;AAEA,WAASO,eAAT,GAA0B;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EADsB,CAEtB;AAEH;;AAED,QAAM,CAACC,OAAD,IAAYf,QAAQ,CAAC,CACvB;AAAEgB,IAAAA,MAAM,EAAE,eAAV;AAA2BC,IAAAA,QAAQ,EAAE;AAArC,GADuB,EAEvB;AAAED,IAAAA,MAAM,EAAE,OAAV;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAFuB,EAGvB;AAAED,IAAAA,MAAM,EAAE,YAAV;AAAwBC,IAAAA,QAAQ,EAAGC,CAAD;AAAA;;AAAA,aAAS,GAAD,iBAAGA,CAAC,CAACC,UAAL,kDAAG,cAAcC,QAAS,KAA1B,kBAA8BF,CAAC,CAACC,UAAhC,mDAA8B,eAAcE,SAAU,EAA9D;AAAA;AAAlC,GAHuB,EAIvB;AAAEL,IAAAA,MAAM,EAAE,UAAV;AAAsBC,IAAAA,QAAQ,EAAGC,CAAD,IAAS,GAAEA,CAAC,CAACI,YAAa,KAAIJ,CAAC,CAACK,UAAW;AAA3E,GAJuB,EAKvB;AAAEP,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,QAAQ,EAAGC,CAAD,IAAQhB,gBAAgB,CAACgB,CAAC,CAACM,SAAH,EAAcN,CAAC,CAACO,OAAhB;AAApD,GALuB,EAMvB;AAAET,IAAAA,MAAM,EAAE,cAAV;AAA0BC,IAAAA,QAAQ,EAAE;AAApC,GANuB,EAOvB;AAAED,IAAAA,MAAM,EAAE,UAAV;AACAC,IAAAA,QAAQ,EAAGC,CAAD,iBACN,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEN,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFJ,GAPuB,CAAD,CAA1B;AAgBAX,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAO,IAAAA,aAAa,CACT,CACI;AACIkB,MAAAA,QAAQ,EAAE,CADd;AAEIC,MAAAA,UAAU,EAAE,+BAFhB;AAGIC,MAAAA,YAAY,EAAE,SAHlB;AAIIC,MAAAA,YAAY,EAAE,CAJlB;AAKIV,MAAAA,UAAU,EAAE;AAAEE,QAAAA,SAAS,EAAE,KAAb;AAAoBD,QAAAA,QAAQ,EAAE;AAA9B,OALhB;AAMIU,MAAAA,UAAU,EAAE,kBANhB;AAOIC,MAAAA,WAAW,EAAE,CAPjB;AAQIC,MAAAA,WAAW,EAAE,sDARjB;AASIV,MAAAA,YAAY,EAAE,2BATlB;AAUIC,MAAAA,UAAU,EAAE,QAVhB;AAWIU,MAAAA,WAAW,EAAE,KAXjB;AAYIT,MAAAA,SAAS,EAAE,UAZf;AAaIC,MAAAA,OAAO,EAAE,UAbb;AAcIS,MAAAA,WAAW,EAAE,EAdjB;AAeIC,MAAAA,aAAa,EAAE,IAfnB;AAgBIC,MAAAA,UAAU,EAAE;AAhBhB,KADJ,CADS,CAAb;AAsBH,GAxBQ,EAwBN,EAxBM,CAAT;AA2BA,sBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAE9B,UAAtB;AAAkC,IAAA,OAAO,EAAEQ,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CADJ;AAUH","sourcesContent":["import { Button, ButtonGroup, Grid } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { getFormattedTime } from '../helpers/constants';\r\nimport DepartmentDropDown from './Courses/DepartmentDropDown'\r\nimport TableComponent from './TableComponent';\r\nimport { AuthContext } from '../context/AuthProvider';\r\n\r\nexport default function Registrations() {\r\n    const [allCourses, setAllCourses] = useState([]);\r\n\r\n    const {user, authHeader } = useContext(AuthContext);\r\n\r\n    function registerStudent(){\r\n        console.log(\"registering Student\");\r\n        // TODO add route here\r\n        \r\n    }\r\n\r\n    const [columns] = useState([\r\n        { header: \"Course Number\", accessor: \"courseNumber\" },\r\n        { header: \"Title\", accessor: \"courseName\" },\r\n        { header: \"Instructor\", accessor: (r) => (`${r.instructor?.lastName}, ${r.instructor?.firstName}`) },\r\n        { header: \"Location\", accessor: (r) => (`${r.buildingName}, ${r.roomNumber}`) },\r\n        { header: \"Time\", accessor: (r) => (getFormattedTime(r.startTime, r.endTime)) },\r\n        { header: \"Meeting Days\", accessor: \"meetingDays\" },\r\n        { header: \"Register\", \r\n        accessor: (r) => (\r\n            <ButtonGroup>\r\n                <Button onClick={registerStudent}>Register</Button>\r\n            </ButtonGroup>\r\n        )\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        // get list of all courses\r\n        setAllCourses(\r\n            [\r\n                {\r\n                    courseId: 6,\r\n                    courseName: \"Advanced Database Programming\",\r\n                    courseNumber: \"CS 3550\",\r\n                    instructorId: 1,\r\n                    instructor: { firstName: \"Joe\", lastName: \"Instructor\" },\r\n                    department: \"Computer Science\",\r\n                    creditHours: 4,\r\n                    description: \"Learn how to do some advanced things with databases!\",\r\n                    buildingName: \"Computer Science Building\",\r\n                    roomNumber: \"CA 141\",\r\n                    meetingDays: \"MWF\",\r\n                    startTime: \"08:00 AM\",\r\n                    endTime: \"11:30 AM\",\r\n                    maxCapacity: 35,\r\n                    registrations: null,\r\n                    assignment: null,\r\n                },\r\n            ]\r\n        );\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Grid container style={{ width: \"100%\" }}>\r\n            <Grid item xs={12}>\r\n                <DepartmentDropDown />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TableComponent rows={allCourses} columns={columns} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}