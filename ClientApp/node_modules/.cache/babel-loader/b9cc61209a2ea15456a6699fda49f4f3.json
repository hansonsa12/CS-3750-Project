{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\FormComponents.js\";\nimport { Divider, Grid, Tooltip, Typography } from \"@material-ui/core\";\nimport dayjs from \"dayjs\";\nimport _ from \"lodash\";\nimport { KeyboardDateTimePicker, KeyboardTimePicker, showErrorOnBlur, TextField } from \"mui-rff\";\nimport React from \"react\";\nexport const TextEntryItem = props => {\n  const {\n    name\n  } = props;\n  return /*#__PURE__*/React.createElement(Grid, Object.assign({\n    item: true,\n    xs: 12\n  }, gridPropsFrom(props), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, Object.assign({\n    size: \"small\",\n    label: getLabelFromName(name),\n    variant: \"outlined\",\n    showError: showErrorOnBlur\n  }, fieldPropsFrom(props), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  })));\n};\nexport const TimeEntryItem = props => {\n  const {\n    name\n  } = props;\n  return /*#__PURE__*/React.createElement(Grid, Object.assign({\n    item: true,\n    xs: 12\n  }, gridPropsFrom(props), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(KeyboardTimePicker, Object.assign({\n    label: getLabelFromName(name),\n    variant: \"inline\",\n    ampm: true,\n    inputVariant: \"outlined\",\n    size: \"small\",\n    mask: \"__:__ _M\",\n    placeholder: \"08:00 AM\"\n  }, fieldPropsFrom(props), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  })));\n};\nexport const DateTimeEntryItem = props => {\n  const {\n    name\n  } = props;\n  return /*#__PURE__*/React.createElement(Grid, Object.assign({\n    item: true,\n    xs: 12\n  }, gridPropsFrom(props), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(KeyboardDateTimePicker, Object.assign({\n    label: getLabelFromName(name),\n    variant: \"inline\",\n    ampm: true,\n    inputVariant: \"outlined\",\n    size: \"small\",\n    format: \"MM/dd/yyyy hh:mm a\",\n    mask: \"__/__/____ __:__ _M\",\n    placeholder: dayjs().format(\"MM/DD/YYYY hh:mm A\")\n  }, fieldPropsFrom(props), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })));\n};\nexport const SectionHeaderItem = props => {\n  const {\n    top,\n    style = top ? {} : {\n      marginTop: 10\n    },\n    title,\n    action,\n    actionTooltip\n  } = props;\n  return /*#__PURE__*/React.createElement(Grid, Object.assign({\n    item: true,\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"flex-end\",\n    xs: 12\n  }, gridPropsFrom(props), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, title)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, actionTooltip && /*#__PURE__*/React.createElement(Tooltip, {\n    key: actionTooltip,\n    title: actionTooltip,\n    placement: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, action)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  })));\n};\nconst gridPropNames = [\"xs\", \"sm\", \"m\"];\n\nconst gridPropsFrom = props => {\n  return _.pick(props, gridPropNames);\n};\n\nconst fieldPropsFrom = props => {\n  return _.omit(props, gridPropNames);\n};\n\nconst getLabelFromName = name => {\n  return _.chain(name).split(\".\").last().startCase().value();\n};","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/FormComponents.js"],"names":["Divider","Grid","Tooltip","Typography","dayjs","_","KeyboardDateTimePicker","KeyboardTimePicker","showErrorOnBlur","TextField","React","TextEntryItem","props","name","gridPropsFrom","getLabelFromName","fieldPropsFrom","TimeEntryItem","DateTimeEntryItem","format","SectionHeaderItem","top","style","marginTop","title","action","actionTooltip","gridPropNames","pick","omit","chain","split","last","startCase","value"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,IAAlB,EAAwBC,OAAxB,EAAiCC,UAAjC,QAAmD,mBAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SACIC,sBADJ,EAEIC,kBAFJ,EAGIC,eAHJ,EAIIC,SAJJ,QAKO,SALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,sBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE;AAAf,KAAuBE,aAAa,CAACF,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAEG,gBAAgB,CAACF,IAAD,CAF3B;AAGI,IAAA,OAAO,EAAC,UAHZ;AAII,IAAA,SAAS,EAAEL;AAJf,KAKQQ,cAAc,CAACJ,KAAD,CALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ;AAWH,CAbM;AAeP,OAAO,MAAMK,aAAa,GAAGL,KAAK,IAAI;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,sBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE;AAAf,KAAuBE,aAAa,CAACF,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI,oBAAC,kBAAD;AACI,IAAA,KAAK,EAAEG,gBAAgB,CAACF,IAAD,CAD3B;AAEI,IAAA,OAAO,EAAC,QAFZ;AAGI,IAAA,IAAI,EAAE,IAHV;AAII,IAAA,YAAY,EAAC,UAJjB;AAKI,IAAA,IAAI,EAAC,OALT;AAMI,IAAA,IAAI,EAAC,UANT;AAOI,IAAA,WAAW,EAAC;AAPhB,KAQQG,cAAc,CAACJ,KAAD,CARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ;AAcH,CAhBM;AAkBP,OAAO,MAAMM,iBAAiB,GAAGN,KAAK,IAAI;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,sBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE;AAAf,KAAuBE,aAAa,CAACF,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI,oBAAC,sBAAD;AACI,IAAA,KAAK,EAAEG,gBAAgB,CAACF,IAAD,CAD3B;AAEI,IAAA,OAAO,EAAC,QAFZ;AAGI,IAAA,IAAI,EAAE,IAHV;AAII,IAAA,YAAY,EAAC,UAJjB;AAKI,IAAA,IAAI,EAAC,OALT;AAMI,IAAA,MAAM,EAAC,oBANX;AAOI,IAAA,IAAI,EAAC,qBAPT;AAQI,IAAA,WAAW,EAAET,KAAK,GAAGe,MAAR,CAAe,oBAAf;AARjB,KASQH,cAAc,CAACJ,KAAD,CATtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ;AAeH,CAjBM;AAmBP,OAAO,MAAMQ,iBAAiB,GAAGR,KAAK,IAAI;AACtC,QAAM;AACFS,IAAAA,GADE;AAEFC,IAAAA,KAAK,GAAGD,GAAG,GAAG,EAAH,GAAQ;AAAEE,MAAAA,SAAS,EAAE;AAAb,KAFjB;AAGFC,IAAAA,KAHE;AAIFC,IAAAA,MAJE;AAKFC,IAAAA;AALE,MAMFd,KANJ;AAQA,sBACI,oBAAC,IAAD;AACI,IAAA,IAAI,MADR;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,OAAO,EAAC,eAHZ;AAII,IAAA,UAAU,EAAC,UAJf;AAKI,IAAA,EAAE,EAAE;AALR,KAMQE,aAAa,CAACF,KAAD,CANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEU,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BE,KAA3B,CADJ,CARJ,eAWI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,aAAa,iBACV,oBAAC,OAAD;AACI,IAAA,GAAG,EAAEA,aADT;AAEI,IAAA,KAAK,EAAEA,aAFX;AAGI,IAAA,SAAS,EAAC,MAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKD,MALL,CAFR,CAXJ,eAsBI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAtBJ,CADJ;AA4BH,CArCM;AAuCP,MAAME,aAAa,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,GAAb,CAAtB;;AAEA,MAAMb,aAAa,GAAGF,KAAK,IAAI;AAC3B,SAAOP,CAAC,CAACuB,IAAF,CAAOhB,KAAP,EAAce,aAAd,CAAP;AACH,CAFD;;AAIA,MAAMX,cAAc,GAAGJ,KAAK,IAAI;AAC5B,SAAOP,CAAC,CAACwB,IAAF,CAAOjB,KAAP,EAAce,aAAd,CAAP;AACH,CAFD;;AAIA,MAAMZ,gBAAgB,GAAGF,IAAI,IAAI;AAC7B,SAAOR,CAAC,CAACyB,KAAF,CAAQjB,IAAR,EAAckB,KAAd,CAAoB,GAApB,EAAyBC,IAAzB,GAAgCC,SAAhC,GAA4CC,KAA5C,EAAP;AACH,CAFD","sourcesContent":["import { Divider, Grid, Tooltip, Typography } from \"@material-ui/core\";\r\nimport dayjs from \"dayjs\";\r\nimport _ from \"lodash\";\r\nimport {\r\n    KeyboardDateTimePicker,\r\n    KeyboardTimePicker,\r\n    showErrorOnBlur,\r\n    TextField,\r\n} from \"mui-rff\";\r\nimport React from \"react\";\r\n\r\nexport const TextEntryItem = props => {\r\n    const { name } = props;\r\n    return (\r\n        <Grid item xs={12} {...gridPropsFrom(props)}>\r\n            <TextField\r\n                size=\"small\"\r\n                label={getLabelFromName(name)}\r\n                variant=\"outlined\"\r\n                showError={showErrorOnBlur}\r\n                {...fieldPropsFrom(props)}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport const TimeEntryItem = props => {\r\n    const { name } = props;\r\n    return (\r\n        <Grid item xs={12} {...gridPropsFrom(props)}>\r\n            <KeyboardTimePicker\r\n                label={getLabelFromName(name)}\r\n                variant=\"inline\"\r\n                ampm={true}\r\n                inputVariant=\"outlined\"\r\n                size=\"small\"\r\n                mask=\"__:__ _M\"\r\n                placeholder=\"08:00 AM\"\r\n                {...fieldPropsFrom(props)}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport const DateTimeEntryItem = props => {\r\n    const { name } = props;\r\n    return (\r\n        <Grid item xs={12} {...gridPropsFrom(props)}>\r\n            <KeyboardDateTimePicker\r\n                label={getLabelFromName(name)}\r\n                variant=\"inline\"\r\n                ampm={true}\r\n                inputVariant=\"outlined\"\r\n                size=\"small\"\r\n                format=\"MM/dd/yyyy hh:mm a\"\r\n                mask=\"__/__/____ __:__ _M\"\r\n                placeholder={dayjs().format(\"MM/DD/YYYY hh:mm A\")}\r\n                {...fieldPropsFrom(props)}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport const SectionHeaderItem = props => {\r\n    const {\r\n        top,\r\n        style = top ? {} : { marginTop: 10 },\r\n        title,\r\n        action,\r\n        actionTooltip,\r\n    } = props;\r\n\r\n    return (\r\n        <Grid\r\n            item\r\n            container\r\n            justify=\"space-between\"\r\n            alignItems=\"flex-end\"\r\n            xs={12}\r\n            {...gridPropsFrom(props)}\r\n        >\r\n            <Grid item>\r\n                <Typography style={style}>{title}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                {actionTooltip && (\r\n                    <Tooltip\r\n                        key={actionTooltip}\r\n                        title={actionTooltip}\r\n                        placement=\"left\"\r\n                    >\r\n                        {action}\r\n                    </Tooltip>\r\n                )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Divider />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst gridPropNames = [\"xs\", \"sm\", \"m\"];\r\n\r\nconst gridPropsFrom = props => {\r\n    return _.pick(props, gridPropNames);\r\n};\r\n\r\nconst fieldPropsFrom = props => {\r\n    return _.omit(props, gridPropNames);\r\n};\r\n\r\nconst getLabelFromName = name => {\r\n    return _.chain(name).split(\".\").last().startCase().value();\r\n};\r\n"]},"metadata":{},"sourceType":"module"}