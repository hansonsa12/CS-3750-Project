{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\Calendar.js\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid'; // must come after FullCalendar import\n\nimport React, { useContext } from 'react';\nimport { DataContext } from '../context/DataProvider';\n\nfunction getCalEvents(course, ucLen) {\n  const dayNums = {\n    m: 1,\n    t: 2,\n    w: 3,\n    r: 4,\n    f: 5\n  };\n  const daysOfWeek = course.MeetingDays.toLowerCase().split('').map(d => daysNum[d]);\n  var callEvents = [];\n\n  for (var i = 0; i < ucLen; i++) {\n    console.log(\"in loop\");\n    callEvents.push({\n      title: course.courseName,\n      startTime: course.startTime,\n      endTime: course.endTime,\n      MeetingDays: course.MeetingDays\n    });\n  }\n\n  return callEvents;\n}\n\nexport default function Calendar() {\n  const {\n    userCourses\n  } = useContext(DataContext); //const course = useState({});\n\n  var callEvents = [];\n  userCourses.map(course => callEvents = getCalEvents(course, userCourses.length));\n  console.log(callEvents); //const titleClass = course.meetingDays.toLowerCase();\n  //console.log(titleClass);\n\n  return /*#__PURE__*/React.createElement(FullCalendar, {\n    plugins: [dayGridPlugin],\n    initialView: \"dayGridMonth\",\n    events: callEvents //events={[\n    //    callEvents\n    // { \n    //     title: 'CS 9999 - Testing',  \n    //     daysOfWeek: [ 1, 3, 5 ], \n    //     startTime: '10:05', \n    //     endTime: '11:30', \n    //     backgroundColor: 'purple',\n    //     extendedProps: {\n    //         courseLocation: 'Online'\n    //       }    \n    // }\n    //]}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/Calendar.js"],"names":["FullCalendar","dayGridPlugin","React","useContext","DataContext","getCalEvents","course","ucLen","dayNums","m","t","w","r","f","daysOfWeek","MeetingDays","toLowerCase","split","map","d","daysNum","callEvents","i","console","log","push","title","courseName","startTime","endTime","Calendar","userCourses","length"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B,C,CAAmD;;AACnD,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAGA,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,KAA9B,EACA;AACI,QAAMC,OAAO,GAAG;AAACC,IAAAA,CAAC,EAAE,CAAJ;AAAOC,IAAAA,CAAC,EAAC,CAAT;AAAYC,IAAAA,CAAC,EAAC,CAAd;AAAiBC,IAAAA,CAAC,EAAC,CAAnB;AAAsBC,IAAAA,CAAC,EAAC;AAAxB,GAAhB;AACA,QAAMC,UAAU,GAAGR,MAAM,CAACS,WAAP,CAAmBC,WAAnB,GAAiCC,KAAjC,CAAuC,EAAvC,EAA2CC,GAA3C,CAA+CC,CAAC,IAAIC,OAAO,CAACD,CAAD,CAA3D,CAAnB;AACA,MAAIE,UAAU,GAAG,EAAjB;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGf,KAAnB,EAA0Be,CAAC,EAA3B,EACA;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAH,IAAAA,UAAU,CAACI,IAAX,CAAgB;AACZC,MAAAA,KAAK,EAAEpB,MAAM,CAACqB,UADF;AAEZC,MAAAA,SAAS,EAAEtB,MAAM,CAACsB,SAFN;AAGZC,MAAAA,OAAO,EAAEvB,MAAM,CAACuB,OAHJ;AAIZd,MAAAA,WAAW,EAAET,MAAM,CAACS;AAJR,KAAhB;AAMH;;AACD,SAAOM,UAAP;AACH;;AAED,eAAe,SAASS,QAAT,GAAmB;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAkB5B,UAAU,CAACC,WAAD,CAAlC,CAD8B,CAI9B;;AAEA,MAAIiB,UAAU,GAAC,EAAf;AACAU,EAAAA,WAAW,CAACb,GAAZ,CAAgBZ,MAAM,IAClBe,UAAU,GAAGhB,YAAY,CAACC,MAAD,EAASyB,WAAW,CAACC,MAArB,CAD7B;AAGAT,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ,EAV8B,CAc9B;AACA;;AAEA,sBAEI,oBAAC,YAAD;AACI,IAAA,OAAO,EAAE,CAACpB,aAAD,CADb;AAEI,IAAA,WAAW,EAAC,cAFhB;AAGI,IAAA,MAAM,EAAEoB,UAHZ,CAII;AACA;AAEwB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACR;AAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAsBH","sourcesContent":["import FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid'; // must come after FullCalendar import\r\nimport React, { useContext } from 'react';\r\nimport { DataContext } from '../context/DataProvider';\r\n\r\n\r\nfunction getCalEvents(course, ucLen)\r\n{\r\n    const dayNums = {m: 1, t:2, w:3, r:4, f:5};\r\n    const daysOfWeek = course.MeetingDays.toLowerCase().split('').map(d => daysNum[d]);\r\n    var callEvents = [];\r\n    for(var i = 0; i < ucLen; i++)\r\n    {\r\n        console.log(\"in loop\")\r\n        callEvents.push({\r\n            title: course.courseName,\r\n            startTime: course.startTime,\r\n            endTime: course.endTime,\r\n            MeetingDays: course.MeetingDays\r\n        })\r\n    }\r\n    return callEvents;\r\n}\r\n\r\nexport default function Calendar(){\r\n    const { userCourses } = useContext(DataContext);\r\n    \r\n\r\n    //const course = useState({});\r\n    \r\n    var callEvents=[];\r\n    userCourses.map(course => (\r\n        callEvents = getCalEvents(course, userCourses.length)\r\n    ))\r\n    console.log(callEvents)\r\n\r\n    \r\n    \r\n    //const titleClass = course.meetingDays.toLowerCase();\r\n    //console.log(titleClass);\r\n\r\n    return (\r\n        \r\n        <FullCalendar\r\n            plugins={[dayGridPlugin]}\r\n            initialView='dayGridMonth'\r\n            events={callEvents}\r\n            //events={[\r\n            //    callEvents\r\n                \r\n                                    // { \r\n                    //     title: 'CS 9999 - Testing',  \r\n                    //     daysOfWeek: [ 1, 3, 5 ], \r\n                    //     startTime: '10:05', \r\n                    //     endTime: '11:30', \r\n                    //     backgroundColor: 'purple',\r\n                    //     extendedProps: {\r\n                    //         courseLocation: 'Online'\r\n                    //       }    \r\n                    // }\r\n            //]}\r\n        />\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}