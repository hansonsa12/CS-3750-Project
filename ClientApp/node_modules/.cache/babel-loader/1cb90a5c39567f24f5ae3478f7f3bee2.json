{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\Courses\\\\CourseForm.js\";\nimport React, { useContext } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Divider, MenuItem, Typography } from \"@material-ui/core\";\nimport { Form as FForm } from \"react-final-form\";\nimport { TextField, KeyboardTimePicker, Checkboxes, showErrorOnBlur, makeValidate } from \"mui-rff\";\nimport { Grid } from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport dayjs from \"dayjs\";\nimport * as Yup from \"yup\";\nimport { AuthContext } from '../../context/AuthProvider';\nimport axios from 'axios';\nexport default function CourseForm(props) {\n  const [open, setOpen] = React.useState(false);\n  const {\n    user,\n    authHeader\n  } = useContext(AuthContext);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onSubmit = values => {\n    var _values$meetingDays;\n\n    let formattedValues = { ...values,\n      meetingDays: (_values$meetingDays = values.meetingDays) === null || _values$meetingDays === void 0 ? void 0 : _values$meetingDays.join(''),\n      startTime: values.startTime ? dayjs(values.startTime).format(\"hh:mm A\") : undefined,\n      endTime: values.endTime ? dayjs(values.endTime).format(\"hh:mm A\") : undefined,\n      instructorId: user.userId\n    };\n    formattedValues = _.omitBy(formattedValues, _.isUndefined); // get rid of undefined values\n\n    console.log(formattedValues);\n    axios.post(\"api/courses\", formattedValues, authHeader).then(res => {\n      alert(\"Course Added Successfully!\");\n      handleClose();\n    }).catch(err => {\n      alert(err.message);\n      console.error(err.message);\n    });\n  };\n\n  const TextEntry = fieldProps => /*#__PURE__*/React.createElement(Grid, Object.assign({\n    item: true,\n    xs: 12\n  }, _.pick(fieldProps, ['sm']), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, Object.assign({\n    size: \"small\",\n    label: _.startCase(fieldProps.name),\n    variant: \"outlined\",\n    showError: showErrorOnBlur\n  }, _.omit(fieldProps, ['sm']), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  })));\n\n  const TimeEntry = fieldProps => /*#__PURE__*/React.createElement(Grid, Object.assign({\n    item: true,\n    xs: 12\n  }, _.pick(fieldProps, ['sm']), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(KeyboardTimePicker, Object.assign({\n    label: _.startCase(fieldProps.name),\n    variant: \"inline\",\n    ampm: true,\n    inputVariant: \"outlined\",\n    size: \"small\",\n    mask: \"__:__ _M\",\n    placeholder: \"08:00 AM\"\n  }, _.omit(fieldProps, ['sm']), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })));\n\n  const SectionHeader = fieldProps => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: fieldProps.style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, fieldProps.title), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }));\n\n  const validationSchema = Yup.object().shape({\n    courseName: Yup.string().required(\"Course name is required\"),\n    courseNumber: Yup.string().required(\"Course number is required\"),\n    department: Yup.string().required(\"Department is required\")\n  });\n  const validate = makeValidate(validationSchema);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Add A Course\"), /*#__PURE__*/React.createElement(FForm, {\n    onSubmit: onSubmit,\n    initialValues: {\n      creditHours: 0\n    },\n    validate: validate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, \"Add Course\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(SectionHeader, {\n    title: \"Course Information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TextEntry, {\n    name: \"courseName\",\n    sm: 6,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TextEntry, {\n    name: \"courseNumber\",\n    sm: 6,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TextEntry, {\n    name: \"description\",\n    rows: 6,\n    multiline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TextEntry, {\n    name: \"department\",\n    sm: 9,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TextEntry, {\n    name: \"creditHours\",\n    select: true,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 37\n    }\n  }, [\"n/a\", \"1\", \"2\", \"3\", \"4\", \"5\"].map((option, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: `creditHoursOption-${index}`,\n    value: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 45\n    }\n  }, option))), /*#__PURE__*/React.createElement(SectionHeader, {\n    style: {\n      marginTop: 10\n    },\n    title: \"Meeting Location/Time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TextEntry, {\n    name: \"buildingName\",\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TextEntry, {\n    name: \"roomNumber\",\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    alignItems: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 41\n    }\n  }, \"Meeting Days:\"), /*#__PURE__*/React.createElement(Checkboxes, {\n    name: \"meetingDays\",\n    data: [\"M\", \"T\", \"W\", \"R\", \"F\"].map(day => ({\n      label: day,\n      value: day\n    })),\n    formControlLabelProps: {\n      labelPlacement: \"top\"\n    },\n    formGroupProps: {\n      row: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(TextEntry, {\n    name: \"maxCapacity\",\n    sm: 4,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TimeEntry, {\n    name: \"startTime\",\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TimeEntry, {\n    name: \"endTime\",\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 33\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 33\n    }\n  }, \"Submit\"))))));\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/Courses/CourseForm.js"],"names":["React","useContext","Button","Dialog","DialogActions","DialogContent","DialogTitle","Divider","MenuItem","Typography","Form","FForm","TextField","KeyboardTimePicker","Checkboxes","showErrorOnBlur","makeValidate","Grid","_","dayjs","Yup","AuthContext","axios","CourseForm","props","open","setOpen","useState","user","authHeader","handleClickOpen","handleClose","onSubmit","values","formattedValues","meetingDays","join","startTime","format","undefined","endTime","instructorId","userId","omitBy","isUndefined","console","log","post","then","res","alert","catch","err","message","error","TextEntry","fieldProps","pick","startCase","name","omit","TimeEntry","SectionHeader","style","title","validationSchema","object","shape","courseName","string","required","courseNumber","department","validate","creditHours","handleSubmit","map","option","index","marginTop","day","label","value","labelPlacement","row"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Divider,\r\n    MenuItem,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport { Form as FForm } from \"react-final-form\";\r\nimport { TextField, KeyboardTimePicker, Checkboxes, showErrorOnBlur, makeValidate } from \"mui-rff\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\nimport dayjs from \"dayjs\";\r\nimport * as Yup from \"yup\";\r\nimport { AuthContext } from '../../context/AuthProvider';\r\nimport axios from 'axios';\r\n\r\nexport default function CourseForm(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const { user, authHeader } = useContext(AuthContext);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const onSubmit = (values) => {\r\n        let formattedValues = {\r\n            ...values,\r\n            meetingDays: values.meetingDays?.join(''),\r\n            startTime: values.startTime ? dayjs(values.startTime).format(\"hh:mm A\") : undefined,\r\n            endTime: values.endTime ? dayjs(values.endTime).format(\"hh:mm A\") : undefined,\r\n            instructorId: user.userId\r\n        }\r\n        formattedValues = _.omitBy(formattedValues, _.isUndefined); // get rid of undefined values\r\n        console.log(formattedValues);\r\n\r\n        axios\r\n            .post(\"api/courses\", formattedValues, authHeader)\r\n            .then(res => {\r\n                alert(\"Course Added Successfully!\");\r\n                handleClose();\r\n            })\r\n            .catch(err => {\r\n                alert(err.message);\r\n                console.error(err.message);\r\n            });\r\n    };\r\n\r\n    const TextEntry = (fieldProps) => (\r\n        <Grid item xs={12} {..._.pick(fieldProps, ['sm'])}>\r\n            <TextField size=\"small\" label={_.startCase(fieldProps.name)}\r\n                variant=\"outlined\" showError={showErrorOnBlur}\r\n                {..._.omit(fieldProps, ['sm'])}\r\n            />\r\n        </Grid>\r\n    )\r\n\r\n    const TimeEntry = (fieldProps) => (\r\n        <Grid item xs={12} {..._.pick(fieldProps, ['sm'])}>\r\n            <KeyboardTimePicker label={_.startCase(fieldProps.name)}\r\n                variant=\"inline\"\r\n                ampm={true}\r\n                inputVariant=\"outlined\"\r\n                size=\"small\"\r\n                mask=\"__:__ _M\"\r\n                placeholder=\"08:00 AM\"\r\n                {..._.omit(fieldProps, ['sm'])}\r\n            />\r\n        </Grid>\r\n    );\r\n\r\n    const SectionHeader = (fieldProps) => (\r\n        <Grid item xs={12}>\r\n            <Typography style={fieldProps.style}>{fieldProps.title}</Typography>\r\n            <Divider />\r\n        </Grid>\r\n    );\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        courseName: Yup.string().required(\"Course name is required\"),\r\n        courseNumber: Yup.string().required(\"Course number is required\"),\r\n        department: Yup.string().required(\"Department is required\"),\r\n    });\r\n\r\n    const validate = makeValidate(validationSchema);\r\n\r\n    return (\r\n        <div>\r\n            <Button color=\"primary\" onClick={handleClickOpen}>\r\n                Add A Course\r\n            </Button>\r\n            <FForm\r\n                onSubmit={onSubmit}\r\n                initialValues={{\r\n                    creditHours: 0\r\n                }}\r\n                validate={validate}\r\n            >\r\n                {({ handleSubmit }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Dialog\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"form-dialog-title\"\r\n                        >\r\n                            <DialogTitle id=\"form-dialog-title\">Add Course</DialogTitle>\r\n                            <DialogContent>\r\n                                <Grid container spacing={2} justify=\"space-between\">\r\n                                    <SectionHeader title=\"Course Information\" />\r\n                                    <TextEntry name=\"courseName\" sm={6} required={true} />\r\n                                    <TextEntry name=\"courseNumber\" sm={6} required={true} />\r\n                                    <TextEntry name=\"description\" rows={6} multiline />\r\n                                    <TextEntry name=\"department\" sm={9} required={true} />\r\n                                    <TextEntry name=\"creditHours\" select sm={3}>\r\n                                        {[\"n/a\", \"1\", \"2\", \"3\", \"4\", \"5\"].map((option, index) => (\r\n                                            <MenuItem key={`creditHoursOption-${index}`} value={index}>\r\n                                                {option}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextEntry>\r\n                                    <SectionHeader style={{ marginTop: 10 }} title=\"Meeting Location/Time\" />\r\n                                    <TextEntry name=\"buildingName\" sm={8} />\r\n                                    <TextEntry name=\"roomNumber\" sm={4} />\r\n                                    <Grid item container xs={12} alignItems=\"center\" justify=\"center\">\r\n                                        <Typography>Meeting Days:</Typography>\r\n                                        <Checkboxes\r\n                                            name=\"meetingDays\"\r\n                                            data={[\"M\", \"T\", \"W\", \"R\", \"F\"].map(day => (\r\n                                                { label: day, value: day }\r\n                                            ))}\r\n                                            formControlLabelProps={{ labelPlacement: \"top\" }}\r\n                                            formGroupProps={{ row: true }}\r\n                                        />\r\n                                    </Grid>\r\n                                    <TextEntry name=\"maxCapacity\" sm={4} type=\"number\" />\r\n                                    <TimeEntry name=\"startTime\" sm={4} />\r\n                                    <TimeEntry name=\"endTime\" sm={4} />\r\n                                </Grid>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={handleClose} color=\"primary\">\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button onClick={handleSubmit} color=\"primary\">\r\n                                    Submit\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </form>\r\n                )}\r\n            </FForm>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}