{"ast":null,"code":"'use strict';\n\nmodule.exports = function (Chart) {\n  var helpers = Chart.helpers;\n  Chart.elements = {};\n\n  Chart.Element = function (configuration) {\n    helpers.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers.extend(Chart.Element.prototype, {\n    initialize: function () {\n      this.hidden = false;\n    },\n    pivot: function () {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers.clone(me._model);\n      }\n\n      me._start = helpers.clone(me._view);\n      return me;\n    },\n    transition: function (ease) {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers.clone(me._model);\n      } // No animation -> No Transition\n\n\n      if (ease === 1) {\n        me._view = me._model;\n        me._start = null;\n        return me;\n      }\n\n      if (!me._start) {\n        me.pivot();\n      }\n\n      helpers.each(me._model, function (value, key) {\n        if (key[0] === '_') {// Only non-underscored properties\n          // Init if doesn't exist\n        } else if (!me._view.hasOwnProperty(key)) {\n          if (typeof value === 'number' && !isNaN(me._view[key])) {\n            me._view[key] = value * ease;\n          } else {\n            me._view[key] = value;\n          } // No unnecessary computations\n\n        } else if (value === me._view[key]) {// It's the same! Woohoo!\n          // Color transitions if possible\n        } else if (typeof value === 'string') {\n          try {\n            var color = helpers.color(me._model[key]).mix(helpers.color(me._start[key]), ease);\n            me._view[key] = color.rgbString();\n          } catch (err) {\n            me._view[key] = value;\n          } // Number transitions\n\n        } else if (typeof value === 'number') {\n          var startVal = me._start[key] !== undefined && isNaN(me._start[key]) === false ? me._start[key] : 0;\n          me._view[key] = (me._model[key] - startVal) * ease + startVal; // Everything else\n        } else {\n          me._view[key] = value;\n        }\n      }, me);\n      return me;\n    },\n    tooltipPosition: function () {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function () {\n      return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n    }\n  });\n  Chart.Element.extend = helpers.inherits;\n};","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/node_modules/chart.js/src/core/core.element.js"],"names":["module","exports","Chart","helpers","elements","Element","configuration","extend","initialize","apply","arguments","prototype","hidden","pivot","me","_view","clone","_model","_start","transition","ease","each","value","key","hasOwnProperty","isNaN","color","mix","rgbString","err","startVal","undefined","tooltipPosition","x","y","hasValue","isNumber","inherits"],"mappings":"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","sourcesContent":["'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.elements = {};\n\n\tChart.Element = function(configuration) {\n\t\thelpers.extend(this, configuration);\n\t\tthis.initialize.apply(this, arguments);\n\t};\n\n\thelpers.extend(Chart.Element.prototype, {\n\n\t\tinitialize: function() {\n\t\t\tthis.hidden = false;\n\t\t},\n\n\t\tpivot: function() {\n\t\t\tvar me = this;\n\t\t\tif (!me._view) {\n\t\t\t\tme._view = helpers.clone(me._model);\n\t\t\t}\n\t\t\tme._start = helpers.clone(me._view);\n\t\t\treturn me;\n\t\t},\n\n\t\ttransition: function(ease) {\n\t\t\tvar me = this;\n\n\t\t\tif (!me._view) {\n\t\t\t\tme._view = helpers.clone(me._model);\n\t\t\t}\n\n\t\t\t// No animation -> No Transition\n\t\t\tif (ease === 1) {\n\t\t\t\tme._view = me._model;\n\t\t\t\tme._start = null;\n\t\t\t\treturn me;\n\t\t\t}\n\n\t\t\tif (!me._start) {\n\t\t\t\tme.pivot();\n\t\t\t}\n\n\t\t\thelpers.each(me._model, function(value, key) {\n\n\t\t\t\tif (key[0] === '_') {\n\t\t\t\t\t// Only non-underscored properties\n\t\t\t\t// Init if doesn't exist\n\t\t\t\t} else if (!me._view.hasOwnProperty(key)) {\n\t\t\t\t\tif (typeof value === 'number' && !isNaN(me._view[key])) {\n\t\t\t\t\t\tme._view[key] = value * ease;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme._view[key] = value;\n\t\t\t\t\t}\n\t\t\t\t// No unnecessary computations\n\t\t\t\t} else if (value === me._view[key]) {\n\t\t\t\t\t// It's the same! Woohoo!\n\t\t\t\t// Color transitions if possible\n\t\t\t\t} else if (typeof value === 'string') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar color = helpers.color(me._model[key]).mix(helpers.color(me._start[key]), ease);\n\t\t\t\t\t\tme._view[key] = color.rgbString();\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tme._view[key] = value;\n\t\t\t\t\t}\n\t\t\t\t// Number transitions\n\t\t\t\t} else if (typeof value === 'number') {\n\t\t\t\t\tvar startVal = me._start[key] !== undefined && isNaN(me._start[key]) === false ? me._start[key] : 0;\n\t\t\t\t\tme._view[key] = ((me._model[key] - startVal) * ease) + startVal;\n\t\t\t\t// Everything else\n\t\t\t\t} else {\n\t\t\t\t\tme._view[key] = value;\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn me;\n\t\t},\n\n\t\ttooltipPosition: function() {\n\t\t\treturn {\n\t\t\t\tx: this._model.x,\n\t\t\t\ty: this._model.y\n\t\t\t};\n\t\t},\n\n\t\thasValue: function() {\n\t\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t\t}\n\t});\n\n\tChart.Element.extend = helpers.inherits;\n\n};\n"]},"metadata":{},"sourceType":"script"}