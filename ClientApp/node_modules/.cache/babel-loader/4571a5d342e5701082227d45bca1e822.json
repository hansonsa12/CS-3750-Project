{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\Dashboard\\\\TodoList.js\";\nimport { Divider } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { DataContext } from \"../../context/DataProvider\";\nimport TodoItem from \"./TodoItem\";\nexport default function TodoList() {\n  const {\n    assignments\n  } = useContext(DataContext);\n  const [todoList, setTodoList] = useState([]);\n  useEffect(() => {\n    setTodoList(getSortedAssignments());\n  }, []);\n\n  const getSortedAssignments = () => {\n    // Get all assignments in chronological order\n    const sortedAssignments = assignments === null || assignments === void 0 ? void 0 : assignments.sort(function (a, b) {\n      return new Date(a.dueDate) - new Date(b.dueDate);\n    }); // Get today's date and format it to fit with due te\n\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0');\n    var yyyy = today.getFullYear();\n    today = yyyy + '-' + mm + '-' + dd;\n    var cleanedAssignments = []; // Only keep items with a due date of today or later\n\n    for (var i = 0; i < sortedAssignments.length; i++) {\n      if (sortedAssignments[i].dueDate >= today) {\n        cleanedAssignments.push(sortedAssignments[i]);\n      }\n    }\n\n    if ((cleanedAssignments === null || cleanedAssignments === void 0 ? void 0 : cleanedAssignments.length) > 6) {\n      return sortedAssignments.slice(0, 6);\n    }\n\n    return cleanedAssignments;\n  };\n\n  const handleTodoItemDelete = id => {\n    let tempArray = [];\n\n    if (todoList != undefined) {\n      tempArray = todoList.filter(item => item.assignmentId != id);\n    }\n\n    setTodoList(tempArray);\n  }; // sort assignments by due date, soonest due to furthest out\n  // only show top 5-6\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    subheader: \"To Do\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), todoList === null || todoList === void 0 ? void 0 : todoList.map((assignment, index) => /*#__PURE__*/React.createElement(TodoItem, {\n    key: `todoitem-${index}`,\n    assignment: assignment,\n    onDelete: handleTodoItemDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/Dashboard/TodoList.js"],"names":["Divider","List","React","useContext","useState","useEffect","DataContext","TodoItem","TodoList","assignments","todoList","setTodoList","getSortedAssignments","sortedAssignments","sort","a","b","Date","dueDate","today","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","cleanedAssignments","i","length","push","slice","handleTodoItemDelete","id","tempArray","undefined","filter","item","assignmentId","map","assignment","index"],"mappings":"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","sourcesContent":["import { Divider } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { DataContext } from \"../../context/DataProvider\";\r\n\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nexport default function TodoList() {\r\n    const { assignments } = useContext(DataContext);\r\n    const [todoList, setTodoList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setTodoList(getSortedAssignments());\r\n    }, []);\r\n\r\n    const getSortedAssignments = () => {\r\n        // Get all assignments in chronological order\r\n        const sortedAssignments = assignments?.sort(function (a, b) {          \r\n            return new Date(a.dueDate) - new Date(b.dueDate);\r\n        });\r\n\r\n        // Get today's date and format it to fit with due te\r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0');\r\n        var yyyy = today.getFullYear();\r\n        today = yyyy + '-'+ mm + '-' + dd;\r\n\r\n        var cleanedAssignments =[];\r\n        // Only keep items with a due date of today or later\r\n        for(var i = 0; i < sortedAssignments.length; i++){\r\n            if(sortedAssignments[i].dueDate >= today)\r\n            {\r\n                cleanedAssignments.push(sortedAssignments[i])\r\n            }\r\n        }\r\n\r\n        if(cleanedAssignments?.length > 6){\r\n            return sortedAssignments.slice(0,6);\r\n        }\r\n        return cleanedAssignments;\r\n    };\r\n\r\n    const handleTodoItemDelete = (id) => {\r\n        let tempArray = [];\r\n        if (todoList != undefined) {\r\n            tempArray = todoList.filter((item) => item.assignmentId != id);\r\n        }\r\n        setTodoList(tempArray);\r\n    };\r\n\r\n    // sort assignments by due date, soonest due to furthest out\r\n    // only show top 5-6\r\n\r\n    return (\r\n        <div>\r\n            <List subheader=\"To Do\">\r\n                <Divider />\r\n                {todoList?.map((assignment, index) => (\r\n                    <TodoItem\r\n                        key={`todoitem-${index}`}\r\n                        assignment={assignment}\r\n                        onDelete={handleTodoItemDelete}\r\n                    />\r\n                ))}\r\n                <Divider />\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}