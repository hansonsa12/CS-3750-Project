{"ast":null,"code":"'use strict';\n\nmodule.exports = function (Chart) {\n  var helpers = Chart.helpers;\n  Chart.defaults.global.title = {\n    display: false,\n    position: 'top',\n    fullWidth: true,\n    // marks that this box should take the full width of the canvas (pushing down other boxes)\n    fontStyle: 'bold',\n    padding: 10,\n    // actual title\n    text: ''\n  };\n  var noop = helpers.noop;\n  Chart.Title = Chart.Element.extend({\n    initialize: function (config) {\n      var me = this;\n      helpers.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop,\n    update: function (maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop,\n    //\n    beforeSetDimensions: noop,\n    setDimensions: function () {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop,\n    //\n    beforeBuildLabels: noop,\n    buildLabels: noop,\n    afterBuildLabels: noop,\n    //\n    beforeFit: noop,\n    fit: function () {\n      var me = this,\n          valueOrDefault = helpers.getValueOrDefault,\n          opts = me.options,\n          globalDefaults = Chart.defaults.global,\n          display = opts.display,\n          fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\n          minSize = me.minSize;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? fontSize + opts.padding * 2 : 0;\n      } else {\n        minSize.width = display ? fontSize + opts.padding * 2 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop,\n    // Shared Methods\n    isHorizontal: function () {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function () {\n      var me = this,\n          ctx = me.ctx,\n          valueOrDefault = helpers.getValueOrDefault,\n          opts = me.options,\n          globalDefaults = Chart.defaults.global;\n\n      if (opts.display) {\n        var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\n            fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle),\n            fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily),\n            titleFont = helpers.fontString(fontSize, fontStyle, fontFamily),\n            rotation = 0,\n            titleX,\n            titleY,\n            top = me.top,\n            left = me.left,\n            bottom = me.bottom,\n            right = me.right,\n            maxWidth;\n        ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\n        ctx.font = titleFont; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + (bottom - top) / 2; // midpoint of the height\n\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + fontSize / 2 : right - fontSize / 2;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText(opts.text, 0, 0, maxWidth);\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chartInstance, titleOpts) {\n    var title = new Chart.Title({\n      ctx: chartInstance.chart.ctx,\n      options: titleOpts,\n      chart: chartInstance\n    });\n    chartInstance.titleBlock = title;\n    Chart.layoutService.addBox(chartInstance, title);\n  } // Register the title plugin\n\n\n  Chart.plugins.register({\n    beforeInit: function (chartInstance) {\n      var titleOpts = chartInstance.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chartInstance, titleOpts);\n      }\n    },\n    beforeUpdate: function (chartInstance) {\n      var titleOpts = chartInstance.options.title;\n\n      if (titleOpts) {\n        titleOpts = helpers.configMerge(Chart.defaults.global.title, titleOpts);\n\n        if (chartInstance.titleBlock) {\n          chartInstance.titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chartInstance, titleOpts);\n        }\n      } else {\n        Chart.layoutService.removeBox(chartInstance, chartInstance.titleBlock);\n        delete chartInstance.titleBlock;\n      }\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/node_modules/chart.js/src/core/core.title.js"],"names":["module","exports","Chart","helpers","defaults","global","title","display","position","fullWidth","fontStyle","padding","text","noop","Title","Element","extend","initialize","config","me","legendHitBoxes","beforeUpdate","update","maxWidth","maxHeight","margins","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","minSize","isHorizontal","width","left","right","height","top","bottom","paddingLeft","paddingTop","paddingRight","paddingBottom","valueOrDefault","getValueOrDefault","opts","options","globalDefaults","fontSize","defaultFontSize","pos","draw","ctx","defaultFontStyle","fontFamily","defaultFontFamily","titleFont","fontString","rotation","titleX","titleY","fillStyle","fontColor","defaultFontColor","font","Math","PI","save","translate","rotate","textAlign","textBaseline","fillText","restore","createNewTitleBlockAndAttach","chartInstance","titleOpts","chart","titleBlock","layoutService","addBox","plugins","register","beforeInit","configMerge","removeBox"],"mappings":"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","sourcesContent":["'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.global.title = {\n\t\tdisplay: false,\n\t\tposition: 'top',\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\n\n\t\tfontStyle: 'bold',\n\t\tpadding: 10,\n\n\t\t// actual title\n\t\ttext: ''\n\t};\n\n\tvar noop = helpers.noop;\n\tChart.Title = Chart.Element.extend({\n\n\t\tinitialize: function(config) {\n\t\t\tvar me = this;\n\t\t\thelpers.extend(me, config);\n\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\t\tme.legendHitBoxes = [];\n\t\t},\n\n\t\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\t\tbeforeUpdate: noop,\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = margins;\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\t\t\t// Labels\n\t\t\tme.beforeBuildLabels();\n\t\t\tme.buildLabels();\n\t\t\tme.afterBuildLabels();\n\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: noop,\n\n\t\t//\n\n\t\tbeforeSetDimensions: noop,\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\n\t\t\t// Reset minSize\n\t\t\tme.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\t\t},\n\t\tafterSetDimensions: noop,\n\n\t\t//\n\n\t\tbeforeBuildLabels: noop,\n\t\tbuildLabels: noop,\n\t\tafterBuildLabels: noop,\n\n\t\t//\n\n\t\tbeforeFit: noop,\n\t\tfit: function() {\n\t\t\tvar me = this,\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\n\t\t\t\topts = me.options,\n\t\t\t\tglobalDefaults = Chart.defaults.global,\n\t\t\t\tdisplay = opts.display,\n\t\t\t\tfontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\n\t\t\t\tminSize = me.minSize;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\t\tminSize.height = display ? fontSize + (opts.padding * 2) : 0;\n\t\t\t} else {\n\t\t\t\tminSize.width = display ? fontSize + (opts.padding * 2) : 0;\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\n\t\t},\n\t\tafterFit: noop,\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\tvar pos = this.options.position;\n\t\t\treturn pos === 'top' || pos === 'bottom';\n\t\t},\n\n\t\t// Actually draw the title block on the canvas\n\t\tdraw: function() {\n\t\t\tvar me = this,\n\t\t\t\tctx = me.ctx,\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\n\t\t\t\topts = me.options,\n\t\t\t\tglobalDefaults = Chart.defaults.global;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\n\t\t\t\t\tfontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\t\t\tfontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\t\t\ttitleFont = helpers.fontString(fontSize, fontStyle, fontFamily),\n\t\t\t\t\trotation = 0,\n\t\t\t\t\ttitleX,\n\t\t\t\t\ttitleY,\n\t\t\t\t\ttop = me.top,\n\t\t\t\t\tleft = me.left,\n\t\t\t\t\tbottom = me.bottom,\n\t\t\t\t\tright = me.right,\n\t\t\t\t\tmaxWidth;\n\n\t\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\t\tctx.font = titleFont;\n\n\t\t\t\t// Horizontal\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2); // midpoint of the height\n\t\t\t\t\tmaxWidth = right - left;\n\t\t\t\t} else {\n\t\t\t\t\ttitleX = opts.position === 'left' ? left + (fontSize / 2) : right - (fontSize / 2);\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t\t}\n\n\t\t\t\tctx.save();\n\t\t\t\tctx.translate(titleX, titleY);\n\t\t\t\tctx.rotate(rotation);\n\t\t\t\tctx.textAlign = 'center';\n\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\tctx.fillText(opts.text, 0, 0, maxWidth);\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction createNewTitleBlockAndAttach(chartInstance, titleOpts) {\n\t\tvar title = new Chart.Title({\n\t\t\tctx: chartInstance.chart.ctx,\n\t\t\toptions: titleOpts,\n\t\t\tchart: chartInstance\n\t\t});\n\t\tchartInstance.titleBlock = title;\n\t\tChart.layoutService.addBox(chartInstance, title);\n\t}\n\n\t// Register the title plugin\n\tChart.plugins.register({\n\t\tbeforeInit: function(chartInstance) {\n\t\t\tvar titleOpts = chartInstance.options.title;\n\n\t\t\tif (titleOpts) {\n\t\t\t\tcreateNewTitleBlockAndAttach(chartInstance, titleOpts);\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function(chartInstance) {\n\t\t\tvar titleOpts = chartInstance.options.title;\n\n\t\t\tif (titleOpts) {\n\t\t\t\ttitleOpts = helpers.configMerge(Chart.defaults.global.title, titleOpts);\n\n\t\t\t\tif (chartInstance.titleBlock) {\n\t\t\t\t\tchartInstance.titleBlock.options = titleOpts;\n\t\t\t\t} else {\n\t\t\t\t\tcreateNewTitleBlockAndAttach(chartInstance, titleOpts);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tChart.layoutService.removeBox(chartInstance, chartInstance.titleBlock);\n\t\t\t\tdelete chartInstance.titleBlock;\n\t\t\t}\n\t\t}\n\t});\n};\n"]},"metadata":{},"sourceType":"script"}