{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\Assignments\\\\AssignmentDetails.js\";\nimport { Grid } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/AuthProvider\";\nimport { getFormattedDateTime } from \"../../helpers/helpers\";\nimport DetailsContainer from \"../DetailsContainer\";\nimport { SectionHeaderItem } from \"../FormComponents\";\nimport MainView from \"../MainView\";\nimport AssignmentSubmissionsTable from \"./AssignmentSubmissionsTable\";\nexport default function AssignmentDetails() {\n  const {\n    assignmentId\n  } = useParams(); // get params from route url\n\n  const {\n    authHeader,\n    isInstructor\n  } = useContext(AuthContext);\n  const [assignment, setAssigment] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await axios.get(`api/assignments/${assignmentId}`, authHeader);\n      setAssigment(res.data);\n    };\n\n    fetchData();\n  }, [assignmentId]);\n  const actions = useMemo(() => ({\n    header: \"Actions\",\n    accessor: a => isInstructor ? /*#__PURE__*/React.createElement(AssignmentSubmissionsTable, {\n      assignment: a,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, \"Derek\")) : /*#__PURE__*/React.createElement(AssignmentSubmissionsTable, {\n      assignment: a,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, \"Derek\"))\n  }));\n  return /*#__PURE__*/React.createElement(MainView, {\n    title: assignment === null || assignment === void 0 ? void 0 : assignment.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DetailsContainer, {\n    object: assignment,\n    omitProperties: [\"assignmentSubmissions\"],\n    specialFormatters: {\n      dueDate: d => getFormattedDateTime(d)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  })), isInstructor && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SectionHeaderItem, {\n    title: \"Submissions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AssignmentSubmissionsTable, {\n    rows: assignment.assignmentSubmissions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/Assignments/AssignmentDetails.js"],"names":["Grid","axios","React","useContext","useEffect","useState","useParams","AuthContext","getFormattedDateTime","DetailsContainer","SectionHeaderItem","MainView","AssignmentSubmissionsTable","AssignmentDetails","assignmentId","authHeader","isInstructor","assignment","setAssigment","fetchData","res","get","data","actions","useMemo","header","accessor","a","title","dueDate","d","assignmentSubmissions"],"mappings":"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","sourcesContent":["import { Grid } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthProvider\";\r\nimport { getFormattedDateTime } from \"../../helpers/helpers\";\r\nimport DetailsContainer from \"../DetailsContainer\";\r\nimport { SectionHeaderItem } from \"../FormComponents\";\r\nimport MainView from \"../MainView\";\r\nimport AssignmentSubmissionsTable from \"./AssignmentSubmissionsTable\";\r\n\r\nexport default function AssignmentDetails() {\r\n    const { assignmentId } = useParams(); // get params from route url\r\n\r\n    const { authHeader, isInstructor } = useContext(AuthContext);\r\n\r\n    const [assignment, setAssigment] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const res = await axios.get(\r\n                `api/assignments/${assignmentId}`,\r\n                authHeader\r\n            );\r\n            setAssigment(res.data);\r\n        };\r\n        fetchData();\r\n    }, [assignmentId]);\r\n\r\n    const actions = useMemo(() => ({\r\n        header: \"Actions\",\r\n        accessor: a =>\r\n            isInstructor ? (\r\n                <AssignmentSubmissionsTable assignment={a}>\r\n                    <Button variant=\"contained\" color=\"primary\">\r\n                        Derek\r\n                    </Button>\r\n                </AssignmentSubmissionsTable>\r\n            ) : (\r\n                <AssignmentSubmissionsTable assignment={a}>\r\n                    <Button variant=\"contained\" color=\"primary\">\r\n                        Derek\r\n                    </Button>\r\n                </AssignmentSubmissionsTable>\r\n            )\r\n\r\n    }))\r\n\r\n\r\n    return (\r\n        <MainView title={assignment?.title}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <DetailsContainer\r\n                        object={assignment}\r\n                        omitProperties={[\"assignmentSubmissions\"]}\r\n                        specialFormatters={{\r\n                            dueDate: d => getFormattedDateTime(d)\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                {isInstructor && (\r\n                    <>\r\n                        <SectionHeaderItem title=\"Submissions\" />\r\n                        <Grid item xs={12}>\r\n                            <AssignmentSubmissionsTable\r\n                                rows={assignment.assignmentSubmissions}\r\n                            />\r\n                        </Grid>\r\n                    </>\r\n                )}\r\n            </Grid>\r\n        </MainView>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}