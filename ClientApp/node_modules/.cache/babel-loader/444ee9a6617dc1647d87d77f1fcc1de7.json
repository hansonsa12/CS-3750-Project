{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\SideNavigation.js\";\nimport React, { useContext } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, Avatar, Drawer, List, IconButton, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { ChevronLeft, ChevronRight, HomeRounded, EventRounded, ExitToAppRounded, LibraryBooks } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from '../context/AuthProvider';\nconst useStyles = makeStyles(theme => {\n  const openDrawerWidth = 180;\n  const closedDrawerWidth = theme.spacing(7) + 1;\n  return {\n    drawer: {\n      width: closedDrawerWidth,\n      flexShrink: 0,\n      whiteSpace: \"nowrap\"\n    },\n    drawerOpen: {\n      width: openDrawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      }),\n      overflowX: \"hidden\"\n    },\n    drawerClose: {\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      overflowX: \"hidden\",\n      width: closedDrawerWidth\n    },\n    collapseToggle: {\n      margin: \"auto 0 0 auto\"\n    },\n    list: {\n      marginTop: \"65px\"\n    }\n  };\n});\nexport default function SideNavigation() {\n  var _JSON$parse;\n\n  const classes = useStyles(); //const open = false;\n\n  var isOpen = localStorage[\"navBarOpen\"] != null ? localStorage[\"navBarOpen\"] : false; //const [open, setOpen] = React.useState(JSON.parse(localStorage[\"navBarOpen\"]) ?? true);\n\n  const [open, setOpen] = React.useState((_JSON$parse = JSON.parse(isOpen)) !== null && _JSON$parse !== void 0 ? _JSON$parse : true);\n\n  const handleDrawerToggle = () => {\n    localStorage[\"navBarOpen\"] = !open; //setOpen(!open);\n  };\n\n  const history = useHistory();\n  const {\n    user,\n    logout\n  } = useContext(AuthContext);\n  return /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"permanent\",\n    className: clsx(classes.drawer, {\n      [classes.drawerOpen]: open,\n      [classes.drawerClose]: !open\n    }),\n    classes: {\n      paper: clsx(classes.paper, {\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, [{\n    text: \"Profile\",\n    icon: /*#__PURE__*/React.createElement(Avatar, {\n      src: `/uploads/u${user.userId}/${user.profilePicName}`,\n      style: {\n        marginLeft: -8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 31\n      }\n    }),\n    onClick: () => history.push(\"/profile\")\n  }, {\n    text: \"Dashboard\",\n    icon: /*#__PURE__*/React.createElement(HomeRounded, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 50\n      }\n    }),\n    onClick: () => history.push(\"/dashboard\")\n  }, {\n    text: \"Calendar\",\n    icon: /*#__PURE__*/React.createElement(EventRounded, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 49\n      }\n    }),\n    onClick: () => history.push(\"/calendar\")\n  }, {\n    for: \"instructor\",\n    text: \"Courses\",\n    icon: /*#__PURE__*/React.createElement(LibraryBooks, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 48\n      }\n    }),\n    onClick: () => history.push(\"/courses\")\n  }, {\n    for: \"student\",\n    text: \"Registrations\",\n    icon: /*#__PURE__*/React.createElement(LibraryBooks, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 54\n      }\n    }),\n    onClick: () => history.push(\"/registrations\")\n  }, {\n    text: \"Logout\",\n    icon: /*#__PURE__*/React.createElement(ExitToAppRounded, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 47\n      }\n    }),\n    onClick: logout\n  }].map((item, index) => {\n    if (item.for && item.for !== user.accountType) return null;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: item.text,\n      onClick: item.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, item.icon), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: item.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.collapseToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleDrawerToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, open ? /*#__PURE__*/React.createElement(ChevronLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(ChevronRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 47\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/SideNavigation.js"],"names":["React","useContext","clsx","makeStyles","Avatar","Drawer","List","IconButton","ListItem","ListItemIcon","ListItemText","ChevronLeft","ChevronRight","HomeRounded","EventRounded","ExitToAppRounded","LibraryBooks","useHistory","AuthContext","useStyles","theme","openDrawerWidth","closedDrawerWidth","spacing","drawer","width","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","drawerClose","leavingScreen","collapseToggle","margin","list","marginTop","SideNavigation","classes","isOpen","localStorage","open","setOpen","useState","JSON","parse","handleDrawerToggle","history","user","logout","paper","text","icon","userId","profilePicName","marginLeft","onClick","push","for","map","item","index","accountType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SACIC,UADJ,EACgBC,MADhB,EACwBC,MADxB,EACgCC,IADhC,EACsCC,UADtC,EACkDC,QADlD,EAC4DC,YAD5D,EAC0EC,YAD1E,QAEO,mBAFP;AAGA,SACIC,WADJ,EACiBC,YADjB,EAC+BC,WAD/B,EAC4CC,YAD5C,EAC0DC,gBAD1D,EAC4EC,YAD5E,QAEO,oBAFP;AAGA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,MAAMC,SAAS,GAAGhB,UAAU,CAAEiB,KAAD,IAAW;AACpC,QAAMC,eAAe,GAAG,GAAxB;AACA,QAAMC,iBAAiB,GAAGF,KAAK,CAACG,OAAN,CAAc,CAAd,IAAmB,CAA7C;AAEA,SAAO;AACHC,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAEH,iBADH;AAEJI,MAAAA,UAAU,EAAE,CAFR;AAGJC,MAAAA,UAAU,EAAE;AAHR,KADL;AAMHC,IAAAA,UAAU,EAAE;AACRH,MAAAA,KAAK,EAAEJ,eADC;AAERQ,MAAAA,UAAU,EAAET,KAAK,CAACU,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC1CC,QAAAA,MAAM,EAAEZ,KAAK,CAACU,WAAN,CAAkBE,MAAlB,CAAyBC,KADS;AAE1CC,QAAAA,QAAQ,EAAEd,KAAK,CAACU,WAAN,CAAkBI,QAAlB,CAA2BC;AAFK,OAAlC,CAFJ;AAMRC,MAAAA,SAAS,EAAE;AANH,KANT;AAcHC,IAAAA,WAAW,EAAE;AACTR,MAAAA,UAAU,EAAET,KAAK,CAACU,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC1CC,QAAAA,MAAM,EAAEZ,KAAK,CAACU,WAAN,CAAkBE,MAAlB,CAAyBC,KADS;AAE1CC,QAAAA,QAAQ,EAAEd,KAAK,CAACU,WAAN,CAAkBI,QAAlB,CAA2BI;AAFK,OAAlC,CADH;AAKTF,MAAAA,SAAS,EAAE,QALF;AAMTX,MAAAA,KAAK,EAAEH;AANE,KAdV;AAsBHiB,IAAAA,cAAc,EAAE;AACZC,MAAAA,MAAM,EAAE;AADI,KAtBb;AAyBHC,IAAAA,IAAI,EAAE;AACFC,MAAAA,SAAS,EAAE;AADT;AAzBH,GAAP;AA6BH,CAjC2B,CAA5B;AAmCA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AAErC,QAAMC,OAAO,GAAGzB,SAAS,EAAzB,CAFqC,CAGrC;;AACA,MAAI0B,MAAM,GAAGC,YAAY,CAAC,YAAD,CAAZ,IAA8B,IAA9B,GAAqCA,YAAY,CAAC,YAAD,CAAjD,GAAkE,KAA/E,CAJqC,CAMrC;;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhD,KAAK,CAACiD,QAAN,gBAAeC,IAAI,CAACC,KAAL,CAAWN,MAAX,CAAf,qDAAqC,IAArC,CAAxB;;AAGA,QAAMO,kBAAkB,GAAG,MAAM;AAC7BN,IAAAA,YAAY,CAAC,YAAD,CAAZ,GAA6B,CAACC,IAA9B,CAD6B,CAE7B;AAEH,GAJD;;AAMA,QAAMM,OAAO,GAAGpC,UAAU,EAA1B;AAEA,QAAM;AAAEqC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBtD,UAAU,CAACiB,WAAD,CAAnC;AAEA,sBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,SAAS,EAAEhB,IAAI,CAAC0C,OAAO,CAACpB,MAAT,EAAiB;AAC5B,OAACoB,OAAO,CAAChB,UAAT,GAAsBmB,IADM;AAE5B,OAACH,OAAO,CAACP,WAAT,GAAuB,CAACU;AAFI,KAAjB,CAFnB;AAMI,IAAA,OAAO,EAAE;AACLS,MAAAA,KAAK,EAAEtD,IAAI,CAAC0C,OAAO,CAACY,KAAT,EAAgB;AACvB,SAACZ,OAAO,CAAChB,UAAT,GAAsBmB,IADC;AAEvB,SAACH,OAAO,CAACP,WAAT,GAAuB,CAACU;AAFD,OAAhB;AADN,KANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAaI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEH,OAAO,CAACH,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CACG;AACIgB,IAAAA,IAAI,EAAE,SADV;AAEIC,IAAAA,IAAI,eAAE,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAG,aAAYJ,IAAI,CAACK,MAAO,IAAGL,IAAI,CAACM,cAAe,EAA7D;AACL,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,CAAC;AAAf,OADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFV;AAIIC,IAAAA,OAAO,EAAE,MAAMT,OAAO,CAACU,IAAR,CAAa,UAAb;AAJnB,GADH,EAOG;AACIN,IAAAA,IAAI,EAAE,WADV;AACuBC,IAAAA,IAAI,eAAE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD7B;AAEII,IAAAA,OAAO,EAAE,MAAMT,OAAO,CAACU,IAAR,CAAa,YAAb;AAFnB,GAPH,EAWG;AACIN,IAAAA,IAAI,EAAE,UADV;AACsBC,IAAAA,IAAI,eAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD5B;AAEII,IAAAA,OAAO,EAAE,MAAMT,OAAO,CAACU,IAAR,CAAa,WAAb;AAFnB,GAXH,EAeG;AACIC,IAAAA,GAAG,EAAE,YADT;AAEIP,IAAAA,IAAI,EAAE,SAFV;AAEqBC,IAAAA,IAAI,eAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF3B;AAGII,IAAAA,OAAO,EAAE,MAAMT,OAAO,CAACU,IAAR,CAAa,UAAb;AAHnB,GAfH,EAoBG;AACIC,IAAAA,GAAG,EAAE,SADT;AAEIP,IAAAA,IAAI,EAAE,eAFV;AAE2BC,IAAAA,IAAI,eAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFjC;AAGII,IAAAA,OAAO,EAAE,MAAMT,OAAO,CAACU,IAAR,CAAa,gBAAb;AAHnB,GApBH,EAyBG;AACIN,IAAAA,IAAI,EAAE,QADV;AACoBC,IAAAA,IAAI,eAAE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD1B;AAEII,IAAAA,OAAO,EAAEP;AAFb,GAzBH,EA6BCU,GA7BD,CA6BK,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnB,QAAID,IAAI,CAACF,GAAL,IAAYE,IAAI,CAACF,GAAL,KAAaV,IAAI,CAACc,WAAlC,EAA+C,OAAO,IAAP;AAC/C,wBACI,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,GAAG,EAAEF,IAAI,CAACT,IAA3B;AAAiC,MAAA,OAAO,EAAES,IAAI,CAACJ,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeI,IAAI,CAACR,IAApB,CADJ,eAEI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEQ,IAAI,CAACT,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH,GArCA,CADL,CAbJ,eAsDI;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACL,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEa,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,IAAI,gBAAG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAqB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD9B,CADJ,CAtDJ,CADJ;AA8DH","sourcesContent":["import React, { useContext } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n    makeStyles, Avatar, Drawer, List, IconButton, ListItem, ListItemIcon, ListItemText\r\n} from \"@material-ui/core\";\r\nimport {\r\n    ChevronLeft, ChevronRight, HomeRounded, EventRounded, ExitToAppRounded, LibraryBooks\r\n} from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from '../context/AuthProvider';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n    const openDrawerWidth = 180;\r\n    const closedDrawerWidth = theme.spacing(7) + 1;\r\n\r\n    return {\r\n        drawer: {\r\n            width: closedDrawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: \"nowrap\"\r\n        },\r\n        drawerOpen: {\r\n            width: openDrawerWidth,\r\n            transition: theme.transitions.create(\"width\", {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen\r\n            }),\r\n            overflowX: \"hidden\",\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create(\"width\", {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen\r\n            }),\r\n            overflowX: \"hidden\",\r\n            width: closedDrawerWidth\r\n        },\r\n        collapseToggle: {\r\n            margin: \"auto 0 0 auto\"\r\n        },\r\n        list: {\r\n            marginTop: \"65px\"\r\n        }\r\n    };\r\n});\r\n\r\nexport default function SideNavigation() {\r\n    \r\n    const classes = useStyles();\r\n    //const open = false;\r\n    var isOpen = localStorage[\"navBarOpen\"] != null ? localStorage[\"navBarOpen\"] : false;\r\n\r\n    //const [open, setOpen] = React.useState(JSON.parse(localStorage[\"navBarOpen\"]) ?? true);\r\n    const [open, setOpen] = React.useState(JSON.parse(isOpen) ?? true);\r\n    \r\n\r\n    const handleDrawerToggle = () => {\r\n        localStorage[\"navBarOpen\"] = !open;\r\n        //setOpen(!open);\r\n        \r\n    };\r\n\r\n    const history = useHistory();\r\n\r\n    const { user, logout } = useContext(AuthContext);\r\n\r\n    return (\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: open,\r\n                [classes.drawerClose]: !open\r\n            })}\r\n            classes={{\r\n                paper: clsx(classes.paper, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open\r\n                })\r\n            }}\r\n        >\r\n            <List className={classes.list}>\r\n                {[\r\n                    {\r\n                        text: \"Profile\", \r\n                        icon: <Avatar src={`/uploads/u${user.userId}/${user.profilePicName}`} \r\n                         style={{ marginLeft: -8 }}/>,\r\n                        onClick: () => history.push(\"/profile\")\r\n                    },\r\n                    {\r\n                        text: \"Dashboard\", icon: <HomeRounded />,\r\n                        onClick: () => history.push(\"/dashboard\")\r\n                    },\r\n                    {\r\n                        text: \"Calendar\", icon: <EventRounded />,\r\n                        onClick: () => history.push(\"/calendar\")\r\n                    },\r\n                    {\r\n                        for: \"instructor\",\r\n                        text: \"Courses\", icon: <LibraryBooks />,\r\n                        onClick: () => history.push(\"/courses\")\r\n                    },\r\n                    {\r\n                        for: \"student\",\r\n                        text: \"Registrations\", icon: <LibraryBooks />,\r\n                        onClick: () => history.push(\"/registrations\")\r\n                    },\r\n                    {\r\n                        text: \"Logout\", icon: <ExitToAppRounded />,\r\n                        onClick: logout\r\n                    }\r\n                ].map((item, index) => {\r\n                    if (item.for && item.for !== user.accountType) return null;\r\n                    return (\r\n                        <ListItem button key={item.text} onClick={item.onClick}>\r\n                            <ListItemIcon>{item.icon}</ListItemIcon>\r\n                            <ListItemText primary={item.text} />\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n            </List>\r\n\r\n            <div className={classes.collapseToggle}>\r\n                <IconButton onClick={handleDrawerToggle}>\r\n                    {open ? <ChevronLeft /> : <ChevronRight />}\r\n                </IconButton>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}