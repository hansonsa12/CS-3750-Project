{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\context\\\\AuthProvider.js\";\n// reference: https://www.youtube.com/watch?v=XuFDcZABiDQ\nimport React, { Component, createContext } from 'react';\nimport axios from 'axios';\nimport { AccountType } from '../helpers/constants';\nconst initialState = {\n  user: {\n    // setting initial state like this makes for better autocompletion\n    firstName: undefined,\n    lastName: undefined,\n    email: undefined,\n    birthDay: undefined,\n    accountType: undefined,\n    phoneNumber: undefined,\n    bio: undefined,\n    address: {\n      addressId: undefined,\n      addressOne: undefined,\n      addressTwo: undefined,\n      city: undefined,\n      state: undefined,\n      zipCode: undefined,\n      userId: undefined\n    },\n    profilePicName: undefined,\n    // fileUploads: [{}],\n    profileLinks: [{\n      profileLinkId: undefined,\n      link: undefined,\n      userId: undefined\n    }]\n  },\n  loading: true\n}; // Create context\n\nexport const AuthContext = createContext(initialState); // Provider component\n\nclass AuthProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setResponseToken = res => {\n      localStorage.setItem(\"authToken\", res.data.authToken);\n      window.location = \"/\";\n    };\n\n    this.setUser = async () => {\n      try {\n        const user = await this.getCurrentUserInfo();\n        this.setState({\n          user,\n          loading: false\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.getCurrentUserInfo = async () => {\n      try {\n        const authHeader = this.authHeader();\n        if (!authHeader) return null;\n        const res = await axios.get(\"api/users/current\", authHeader);\n        return res.data;\n      } catch (err) {\n        console.error(err);\n        localStorage.removeItem(\"authToken\");\n        return null;\n      }\n    };\n\n    this.login = ({\n      email,\n      password\n    }) => {\n      return axios.post(\"api/auth/login\", {\n        email,\n        password\n      }).then(res => {\n        this.setResponseToken(res);\n      }).catch(err => {\n        alert(`${err.message}:\\n${err.response.data.error}`);\n      });\n    };\n\n    this.logout = () => {\n      localStorage.removeItem(\"authToken\");\n      window.location = \"/\";\n    };\n\n    this.signup = userInfo => {\n      axios.post(\"api/auth/signup\", userInfo).then(res => {\n        this.setResponseToken(res);\n      }).catch(err => {\n        alert(err.message);\n        console.error(err.message);\n      });\n    };\n\n    this.authHeader = () => {\n      const authToken = localStorage.getItem(\"authToken\");\n      if (!authToken) return null;\n      return {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      };\n    };\n\n    this.updateUser = user => {\n      this.setState({\n        user\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  async componentDidMount() {\n    this.setUser();\n  }\n\n  render() {\n    const {\n      user,\n      loading\n    } = this.state;\n    const {\n      children\n    } = this.props;\n    return !loading && /*#__PURE__*/React.createElement(AuthContext.Provider, {\n      value: {\n        user,\n        login: this.login,\n        logout: this.logout,\n        signup: this.signup,\n        authHeader: this.authHeader(),\n        isStudent: (user === null || user === void 0 ? void 0 : user.accountType) === AccountType.STUDENT,\n        isInstructor: (user === null || user === void 0 ? void 0 : user.accountType) === AccountType.INSTRUCTOR,\n        updateUser: this.updateUser\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, children);\n  }\n\n}\n\nexport default AuthProvider;","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/context/AuthProvider.js"],"names":["React","Component","createContext","axios","AccountType","initialState","user","firstName","undefined","lastName","email","birthDay","accountType","phoneNumber","bio","address","addressId","addressOne","addressTwo","city","state","zipCode","userId","profilePicName","profileLinks","profileLinkId","link","loading","AuthContext","AuthProvider","constructor","props","setResponseToken","res","localStorage","setItem","data","authToken","window","location","setUser","getCurrentUserInfo","setState","err","console","log","authHeader","get","error","removeItem","login","password","post","then","catch","alert","message","response","logout","signup","userInfo","getItem","headers","Authorization","updateUser","componentDidMount","render","children","isStudent","STUDENT","isInstructor","INSTRUCTOR"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AAAE;AACJC,IAAAA,SAAS,EAAEC,SADT;AAEFC,IAAAA,QAAQ,EAAED,SAFR;AAGFE,IAAAA,KAAK,EAAEF,SAHL;AAIFG,IAAAA,QAAQ,EAAEH,SAJR;AAKFI,IAAAA,WAAW,EAAEJ,SALX;AAMFK,IAAAA,WAAW,EAAEL,SANX;AAOFM,IAAAA,GAAG,EAAEN,SAPH;AAQFO,IAAAA,OAAO,EAAE;AACLC,MAAAA,SAAS,EAAER,SADN;AAELS,MAAAA,UAAU,EAAET,SAFP;AAGLU,MAAAA,UAAU,EAAEV,SAHP;AAILW,MAAAA,IAAI,EAAEX,SAJD;AAKLY,MAAAA,KAAK,EAAEZ,SALF;AAMLa,MAAAA,OAAO,EAAEb,SANJ;AAOLc,MAAAA,MAAM,EAAEd;AAPH,KARP;AAiBFe,IAAAA,cAAc,EAAEf,SAjBd;AAkBF;AACAgB,IAAAA,YAAY,EAAE,CAAC;AACXC,MAAAA,aAAa,EAAEjB,SADJ;AAEXkB,MAAAA,IAAI,EAAElB,SAFK;AAGXc,MAAAA,MAAM,EAAEd;AAHG,KAAD;AAnBZ,GADW;AA0BjBmB,EAAAA,OAAO,EAAE;AA1BQ,CAArB,C,CA6BA;;AACA,OAAO,MAAMC,WAAW,GAAG1B,aAAa,CAACG,YAAD,CAAjC,C,CAEP;;AACA,MAAMwB,YAAN,SAA2B5B,SAA3B,CAAqC;AACjC6B,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,gBATmB,GASCC,GAAD,IAAS;AACxBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCF,GAAG,CAACG,IAAJ,CAASC,SAA3C;AACAC,MAAAA,MAAM,CAACC,QAAP,GAAkB,GAAlB;AACH,KAZkB;;AAAA,SAcnBC,OAdmB,GAcT,YAAY;AAClB,UAAG;AACC,cAAMlC,IAAI,GAAG,MAAM,KAAKmC,kBAAL,EAAnB;AACA,aAAKC,QAAL,CAAc;AAAEpC,UAAAA,IAAF;AAAQqB,UAAAA,OAAO,EAAE;AAAjB,SAAd;AACH,OAHD,CAGE,OAAMgB,GAAN,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KArBkB;;AAAA,SAuBnBF,kBAvBmB,GAuBE,YAAY;AAC7B,UAAI;AACA,cAAMK,UAAU,GAAG,KAAKA,UAAL,EAAnB;AACA,YAAI,CAACA,UAAL,EAAiB,OAAO,IAAP;AAEjB,cAAMb,GAAG,GAAG,MAAM9B,KAAK,CAAC4C,GAAN,CAAU,mBAAV,EAA+BD,UAA/B,CAAlB;AAEA,eAAOb,GAAG,CAACG,IAAX;AAEH,OARD,CAQE,OAAOO,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACI,KAAR,CAAcL,GAAd;AACAT,QAAAA,YAAY,CAACe,UAAb,CAAwB,WAAxB;AACA,eAAO,IAAP;AACH;AACJ,KArCkB;;AAAA,SAuCnBC,KAvCmB,GAuCX,CAAC;AAAExC,MAAAA,KAAF;AAASyC,MAAAA;AAAT,KAAD,KAAyB;AAC7B,aAAOhD,KAAK,CACPiD,IADE,CACG,gBADH,EACqB;AAAE1C,QAAAA,KAAF;AAASyC,QAAAA;AAAT,OADrB,EAEFE,IAFE,CAEGpB,GAAG,IAAI;AACT,aAAKD,gBAAL,CAAsBC,GAAtB;AACH,OAJE,EAKFqB,KALE,CAKIX,GAAG,IAAI;AACVY,QAAAA,KAAK,CAAE,GAAEZ,GAAG,CAACa,OAAQ,MAAKb,GAAG,CAACc,QAAJ,CAAarB,IAAb,CAAkBY,KAAM,EAA7C,CAAL;AACH,OAPE,CAAP;AAQH,KAhDkB;;AAAA,SAkDnBU,MAlDmB,GAkDV,MAAM;AACXxB,MAAAA,YAAY,CAACe,UAAb,CAAwB,WAAxB;AACAX,MAAAA,MAAM,CAACC,QAAP,GAAkB,GAAlB;AACH,KArDkB;;AAAA,SAuDnBoB,MAvDmB,GAuDTC,QAAD,IAAc;AACnBzD,MAAAA,KAAK,CACAiD,IADL,CACU,iBADV,EAC6BQ,QAD7B,EAEKP,IAFL,CAEUpB,GAAG,IAAI;AACT,aAAKD,gBAAL,CAAsBC,GAAtB;AACH,OAJL,EAKKqB,KALL,CAKWX,GAAG,IAAI;AACVY,QAAAA,KAAK,CAACZ,GAAG,CAACa,OAAL,CAAL;AACAZ,QAAAA,OAAO,CAACI,KAAR,CAAcL,GAAG,CAACa,OAAlB;AACH,OARL;AASH,KAjEkB;;AAAA,SAmEnBV,UAnEmB,GAmEN,MAAM;AACf,YAAMT,SAAS,GAAGH,YAAY,CAAC2B,OAAb,CAAqB,WAArB,CAAlB;AACA,UAAI,CAACxB,SAAL,EAAgB,OAAO,IAAP;AAChB,aAAO;AAAEyB,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAG,UAAS1B,SAAU;AAArC;AAAX,OAAP;AACH,KAvEkB;;AAAA,SAyEnB2B,UAzEmB,GAyEL1D,IAAD,IAAU;AACnB,WAAKoC,QAAL,CAAc;AAAEpC,QAAAA;AAAF,OAAd;AACH,KA3EkB;;AAEf,SAAKc,KAAL,GAAaf,YAAb;AACH;;AAEsB,QAAjB4D,iBAAiB,GAAG;AACtB,SAAKzB,OAAL;AACH;;AAsED0B,EAAAA,MAAM,GAAG;AACL,UAAM;AAAE5D,MAAAA,IAAF;AAAQqB,MAAAA;AAAR,QAAoB,KAAKP,KAA/B;AACA,UAAM;AAAE+C,MAAAA;AAAF,QAAe,KAAKpC,KAA1B;AAEA,WACA,CAACJ,OAAD,iBAAY,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AACrCrB,QAAAA,IADqC;AAErC4C,QAAAA,KAAK,EAAE,KAAKA,KAFyB;AAGrCQ,QAAAA,MAAM,EAAE,KAAKA,MAHwB;AAIrCC,QAAAA,MAAM,EAAE,KAAKA,MAJwB;AAKrCb,QAAAA,UAAU,EAAE,KAAKA,UAAL,EALyB;AAMrCsB,QAAAA,SAAS,EAAE,CAAA9D,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEM,WAAN,MAAsBR,WAAW,CAACiE,OANR;AAOrCC,QAAAA,YAAY,EAAE,CAAAhE,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEM,WAAN,MAAsBR,WAAW,CAACmE,UAPX;AAQrCP,QAAAA,UAAU,EAAE,KAAKA;AARoB,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUPG,QAVO,CADZ;AAcH;;AAhGgC;;AAmGrC,eAAetC,YAAf","sourcesContent":["// reference: https://www.youtube.com/watch?v=XuFDcZABiDQ\r\nimport React, { Component, createContext } from 'react';\r\nimport axios from 'axios';\r\nimport { AccountType } from '../helpers/constants';\r\n\r\nconst initialState = {\r\n    user: { // setting initial state like this makes for better autocompletion\r\n        firstName: undefined,\r\n        lastName: undefined,\r\n        email: undefined,\r\n        birthDay: undefined,\r\n        accountType: undefined,\r\n        phoneNumber: undefined,\r\n        bio: undefined,\r\n        address: {\r\n            addressId: undefined,\r\n            addressOne: undefined,\r\n            addressTwo: undefined,\r\n            city: undefined,\r\n            state: undefined,\r\n            zipCode: undefined,\r\n            userId: undefined\r\n        },\r\n        profilePicName: undefined,\r\n        // fileUploads: [{}],\r\n        profileLinks: [{\r\n            profileLinkId: undefined,\r\n            link: undefined,\r\n            userId: undefined\r\n        }]\r\n    },\r\n    loading: true,\r\n}\r\n\r\n// Create context\r\nexport const AuthContext = createContext(initialState);\r\n\r\n// Provider component\r\nclass AuthProvider extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = initialState;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setUser();\r\n    }\r\n\r\n    setResponseToken = (res) => {\r\n        localStorage.setItem(\"authToken\", res.data.authToken);\r\n        window.location = \"/\";\r\n    }\r\n\r\n    setUser = async () => {\r\n        try{\r\n            const user = await this.getCurrentUserInfo();\r\n            this.setState({ user, loading: false });\r\n        } catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    getCurrentUserInfo = async () => {\r\n        try {\r\n            const authHeader = this.authHeader();\r\n            if (!authHeader) return null;\r\n\r\n            const res = await axios.get(\"api/users/current\", authHeader);\r\n\r\n            return res.data;\r\n\r\n        } catch (err) {\r\n            console.error(err);\r\n            localStorage.removeItem(\"authToken\");\r\n            return null;\r\n        }\r\n    }\r\n\r\n    login = ({ email, password }) => {\r\n        return axios\r\n            .post(\"api/auth/login\", { email, password })\r\n            .then(res => {\r\n                this.setResponseToken(res);\r\n            })\r\n            .catch(err => {\r\n                alert(`${err.message}:\\n${err.response.data.error}`);\r\n            });\r\n    }\r\n\r\n    logout = () => {\r\n        localStorage.removeItem(\"authToken\");\r\n        window.location = \"/\";\r\n    }\r\n\r\n    signup = (userInfo) => {\r\n        axios\r\n            .post(\"api/auth/signup\", userInfo)\r\n            .then(res => {\r\n                this.setResponseToken(res);\r\n            })\r\n            .catch(err => {\r\n                alert(err.message);\r\n                console.error(err.message);\r\n            });\r\n    }\r\n\r\n    authHeader = () => {\r\n        const authToken = localStorage.getItem(\"authToken\");\r\n        if (!authToken) return null;\r\n        return { headers: { Authorization: `Bearer ${authToken}` } };\r\n    }\r\n\r\n    updateUser = (user) => {\r\n        this.setState({ user });\r\n    }\r\n\r\n    render() {\r\n        const { user, loading } = this.state;\r\n        const { children } = this.props;\r\n\r\n        return (\r\n        !loading && <AuthContext.Provider value={{\r\n            user,\r\n            login: this.login,\r\n            logout: this.logout,\r\n            signup: this.signup,\r\n            authHeader: this.authHeader(),\r\n            isStudent: user?.accountType === AccountType.STUDENT,\r\n            isInstructor: user?.accountType === AccountType.INSTRUCTOR,\r\n            updateUser: this.updateUser\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AuthProvider;"]},"metadata":{},"sourceType":"module"}