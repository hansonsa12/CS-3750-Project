{"ast":null,"code":"'use strict';\n\nmodule.exports = function (Chart) {\n  var helpers = Chart.helpers;\n  Chart.defaults.bar = {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        // Specific to Bar Controller\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        // grid line settings\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  };\n  Chart.controllers.bar = Chart.DatasetController.extend({\n    dataElementType: Chart.elements.Rectangle,\n    initialize: function (chart, datasetIndex) {\n      Chart.DatasetController.prototype.initialize.call(this, chart, datasetIndex);\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n      meta.stack = dataset.stack; // Use this to indicate that this is a bar dataset.\n\n      meta.bar = true;\n    },\n    // Correctly calculate the bar width accounting for stacks and the fact that not all bars are visible\n    getStackCount: function () {\n      var me = this;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var stacks = [];\n      helpers.each(me.chart.data.datasets, function (dataset, datasetIndex) {\n        var dsMeta = me.chart.getDatasetMeta(datasetIndex);\n\n        if (dsMeta.bar && me.chart.isDatasetVisible(datasetIndex) && (yScale.options.stacked === false || yScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1 || yScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1))) {\n          stacks.push(dsMeta.stack);\n        }\n      }, me);\n      return stacks.length;\n    },\n    update: function (reset) {\n      var me = this;\n      helpers.each(me.getMeta().data, function (rectangle, index) {\n        me.updateElement(rectangle, index, reset);\n      }, me);\n    },\n    updateElement: function (rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var scaleBase = yScale.getBasePixel();\n      var rectangleElementOptions = me.chart.options.elements.rectangle;\n      var custom = rectangle.custom || {};\n      var dataset = me.getDataset();\n      rectangle._xScale = xScale;\n      rectangle._yScale = yScale;\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      var ruler = me.getRuler(index); // The index argument for compatible\n\n      rectangle._model = {\n        x: me.calculateBarX(index, me.index, ruler),\n        y: reset ? scaleBase : me.calculateBarY(index, me.index),\n        // Tooltip\n        label: me.chart.data.labels[index],\n        datasetLabel: dataset.label,\n        // Appearance\n        horizontal: false,\n        base: reset ? scaleBase : me.calculateBarBase(me.index, index),\n        width: me.calculateBarWidth(ruler),\n        backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\n        borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\n        borderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\n        borderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\n      };\n      rectangle.pivot();\n    },\n    calculateBarBase: function (datasetIndex, index) {\n      var me = this;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var base = yScale.getBaseValue();\n      var original = base;\n\n      if (yScale.options.stacked === true || yScale.options.stacked === undefined && meta.stack !== undefined) {\n        var chart = me.chart;\n        var datasets = chart.data.datasets;\n        var value = Number(datasets[datasetIndex].data[index]);\n\n        for (var i = 0; i < datasetIndex; i++) {\n          var currentDs = datasets[i];\n          var currentDsMeta = chart.getDatasetMeta(i);\n\n          if (currentDsMeta.bar && currentDsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i) && meta.stack === currentDsMeta.stack) {\n            var currentVal = Number(currentDs.data[index]);\n            base += value < 0 ? Math.min(currentVal, original) : Math.max(currentVal, original);\n          }\n        }\n\n        return yScale.getPixelForValue(base);\n      }\n\n      return yScale.getBasePixel();\n    },\n    getRuler: function () {\n      var me = this;\n      var meta = me.getMeta();\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var stackCount = me.getStackCount();\n      var tickWidth = xScale.width / xScale.ticks.length;\n      var categoryWidth = tickWidth * xScale.options.categoryPercentage;\n      var categorySpacing = (tickWidth - tickWidth * xScale.options.categoryPercentage) / 2;\n      var fullBarWidth = categoryWidth / stackCount;\n      var barWidth = fullBarWidth * xScale.options.barPercentage;\n      var barSpacing = fullBarWidth - fullBarWidth * xScale.options.barPercentage;\n      return {\n        stackCount: stackCount,\n        tickWidth: tickWidth,\n        categoryWidth: categoryWidth,\n        categorySpacing: categorySpacing,\n        fullBarWidth: fullBarWidth,\n        barWidth: barWidth,\n        barSpacing: barSpacing\n      };\n    },\n    calculateBarWidth: function (ruler) {\n      var me = this;\n      var meta = me.getMeta();\n      var xScale = me.getScaleForId(meta.xAxisID);\n\n      if (xScale.options.barThickness) {\n        return xScale.options.barThickness;\n      }\n\n      return ruler.barWidth;\n    },\n    // Get stack index from the given dataset index accounting for stacks and the fact that not all bars are visible\n    getStackIndex: function (datasetIndex) {\n      var me = this;\n      var meta = me.chart.getDatasetMeta(datasetIndex);\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var dsMeta, j;\n      var stacks = [meta.stack];\n\n      for (j = 0; j < datasetIndex; ++j) {\n        dsMeta = this.chart.getDatasetMeta(j);\n\n        if (dsMeta.bar && this.chart.isDatasetVisible(j) && (yScale.options.stacked === false || yScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1 || yScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1))) {\n          stacks.push(dsMeta.stack);\n        }\n      }\n\n      return stacks.length - 1;\n    },\n    calculateBarX: function (index, datasetIndex, ruler) {\n      var me = this;\n      var meta = me.getMeta();\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var stackIndex = me.getStackIndex(datasetIndex);\n      var leftTick = xScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\n      leftTick -= me.chart.isCombo ? ruler.tickWidth / 2 : 0;\n      return leftTick + ruler.barWidth / 2 + ruler.categorySpacing + ruler.barWidth * stackIndex + ruler.barSpacing / 2 + ruler.barSpacing * stackIndex;\n    },\n    calculateBarY: function (index, datasetIndex) {\n      var me = this;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var value = Number(me.getDataset().data[index]);\n\n      if (yScale.options.stacked || yScale.options.stacked === undefined && meta.stack !== undefined) {\n        var base = yScale.getBaseValue();\n        var sumPos = base,\n            sumNeg = base;\n\n        for (var i = 0; i < datasetIndex; i++) {\n          var ds = me.chart.data.datasets[i];\n          var dsMeta = me.chart.getDatasetMeta(i);\n\n          if (dsMeta.bar && dsMeta.yAxisID === yScale.id && me.chart.isDatasetVisible(i) && meta.stack === dsMeta.stack) {\n            var stackedVal = Number(ds.data[index]);\n\n            if (stackedVal < 0) {\n              sumNeg += stackedVal || 0;\n            } else {\n              sumPos += stackedVal || 0;\n            }\n          }\n        }\n\n        if (value < 0) {\n          return yScale.getPixelForValue(sumNeg + value);\n        }\n\n        return yScale.getPixelForValue(sumPos + value);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    draw: function (ease) {\n      var me = this;\n      var easingDecimal = ease || 1;\n      var metaData = me.getMeta().data;\n      var dataset = me.getDataset();\n      var i, len;\n      Chart.canvasHelpers.clipArea(me.chart.chart.ctx, me.chart.chartArea);\n\n      for (i = 0, len = metaData.length; i < len; ++i) {\n        var d = dataset.data[i];\n\n        if (d !== null && d !== undefined && !isNaN(d)) {\n          metaData[i].transition(easingDecimal).draw();\n        }\n      }\n\n      Chart.canvasHelpers.unclipArea(me.chart.chart.ctx);\n    },\n    setHoverStyle: function (rectangle) {\n      var dataset = this.chart.data.datasets[rectangle._datasetIndex];\n      var index = rectangle._index;\n      var custom = rectangle.custom || {};\n      var model = rectangle._model;\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n    removeHoverStyle: function (rectangle) {\n      var dataset = this.chart.data.datasets[rectangle._datasetIndex];\n      var index = rectangle._index;\n      var custom = rectangle.custom || {};\n      var model = rectangle._model;\n      var rectangleElementOptions = this.chart.options.elements.rectangle;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n    }\n  }); // including horizontalBar in the bar file, instead of a file of its own\n  // it extends bar (like pie extends doughnut)\n\n  Chart.defaults.horizontalBar = {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        position: 'left',\n        type: 'category',\n        // Specific to Horizontal Bar Controller\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        // grid line settings\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      callbacks: {\n        title: function (tooltipItems, data) {\n          // Pick first xLabel for now\n          var title = '';\n\n          if (tooltipItems.length > 0) {\n            if (tooltipItems[0].yLabel) {\n              title = tooltipItems[0].yLabel;\n            } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\n              title = data.labels[tooltipItems[0].index];\n            }\n          }\n\n          return title;\n        },\n        label: function (tooltipItem, data) {\n          var datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n          return datasetLabel + ': ' + tooltipItem.xLabel;\n        }\n      }\n    }\n  };\n  Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\n    // Correctly calculate the bar width accounting for stacks and the fact that not all bars are visible\n    getStackCount: function () {\n      var me = this;\n      var meta = me.getMeta();\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var stacks = [];\n      helpers.each(me.chart.data.datasets, function (dataset, datasetIndex) {\n        var dsMeta = me.chart.getDatasetMeta(datasetIndex);\n\n        if (dsMeta.bar && me.chart.isDatasetVisible(datasetIndex) && (xScale.options.stacked === false || xScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1 || xScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1))) {\n          stacks.push(dsMeta.stack);\n        }\n      }, me);\n      return stacks.length;\n    },\n    updateElement: function (rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var scaleBase = xScale.getBasePixel();\n      var custom = rectangle.custom || {};\n      var dataset = me.getDataset();\n      var rectangleElementOptions = me.chart.options.elements.rectangle;\n      rectangle._xScale = xScale;\n      rectangle._yScale = yScale;\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      var ruler = me.getRuler(index); // The index argument for compatible\n\n      rectangle._model = {\n        x: reset ? scaleBase : me.calculateBarX(index, me.index),\n        y: me.calculateBarY(index, me.index, ruler),\n        // Tooltip\n        label: me.chart.data.labels[index],\n        datasetLabel: dataset.label,\n        // Appearance\n        horizontal: true,\n        base: reset ? scaleBase : me.calculateBarBase(me.index, index),\n        height: me.calculateBarHeight(ruler),\n        backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\n        borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\n        borderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\n        borderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\n      };\n      rectangle.pivot();\n    },\n    calculateBarBase: function (datasetIndex, index) {\n      var me = this;\n      var meta = me.getMeta();\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var base = xScale.getBaseValue();\n      var originalBase = base;\n\n      if (xScale.options.stacked || xScale.options.stacked === undefined && meta.stack !== undefined) {\n        var chart = me.chart;\n        var datasets = chart.data.datasets;\n        var value = Number(datasets[datasetIndex].data[index]);\n\n        for (var i = 0; i < datasetIndex; i++) {\n          var currentDs = datasets[i];\n          var currentDsMeta = chart.getDatasetMeta(i);\n\n          if (currentDsMeta.bar && currentDsMeta.xAxisID === xScale.id && chart.isDatasetVisible(i) && meta.stack === currentDsMeta.stack) {\n            var currentVal = Number(currentDs.data[index]);\n            base += value < 0 ? Math.min(currentVal, originalBase) : Math.max(currentVal, originalBase);\n          }\n        }\n\n        return xScale.getPixelForValue(base);\n      }\n\n      return xScale.getBasePixel();\n    },\n    getRuler: function () {\n      var me = this;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var stackCount = me.getStackCount();\n      var tickHeight = yScale.height / yScale.ticks.length;\n      var categoryHeight = tickHeight * yScale.options.categoryPercentage;\n      var categorySpacing = (tickHeight - tickHeight * yScale.options.categoryPercentage) / 2;\n      var fullBarHeight = categoryHeight / stackCount;\n      var barHeight = fullBarHeight * yScale.options.barPercentage;\n      var barSpacing = fullBarHeight - fullBarHeight * yScale.options.barPercentage;\n      return {\n        stackCount: stackCount,\n        tickHeight: tickHeight,\n        categoryHeight: categoryHeight,\n        categorySpacing: categorySpacing,\n        fullBarHeight: fullBarHeight,\n        barHeight: barHeight,\n        barSpacing: barSpacing\n      };\n    },\n    calculateBarHeight: function (ruler) {\n      var me = this;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      if (yScale.options.barThickness) {\n        return yScale.options.barThickness;\n      }\n\n      return ruler.barHeight;\n    },\n    // Get stack index from the given dataset index accounting for stacks and the fact that not all bars are visible\n    getStackIndex: function (datasetIndex) {\n      var me = this;\n      var meta = me.chart.getDatasetMeta(datasetIndex);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var dsMeta, j;\n      var stacks = [meta.stack];\n\n      for (j = 0; j < datasetIndex; ++j) {\n        dsMeta = this.chart.getDatasetMeta(j);\n\n        if (dsMeta.bar && this.chart.isDatasetVisible(j) && (xScale.options.stacked === false || xScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1 || xScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1))) {\n          stacks.push(dsMeta.stack);\n        }\n      }\n\n      return stacks.length - 1;\n    },\n    calculateBarX: function (index, datasetIndex) {\n      var me = this;\n      var meta = me.getMeta();\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var value = Number(me.getDataset().data[index]);\n\n      if (xScale.options.stacked || xScale.options.stacked === undefined && meta.stack !== undefined) {\n        var base = xScale.getBaseValue();\n        var sumPos = base,\n            sumNeg = base;\n\n        for (var i = 0; i < datasetIndex; i++) {\n          var ds = me.chart.data.datasets[i];\n          var dsMeta = me.chart.getDatasetMeta(i);\n\n          if (dsMeta.bar && dsMeta.xAxisID === xScale.id && me.chart.isDatasetVisible(i) && meta.stack === dsMeta.stack) {\n            var stackedVal = Number(ds.data[index]);\n\n            if (stackedVal < 0) {\n              sumNeg += stackedVal || 0;\n            } else {\n              sumPos += stackedVal || 0;\n            }\n          }\n        }\n\n        if (value < 0) {\n          return xScale.getPixelForValue(sumNeg + value);\n        }\n\n        return xScale.getPixelForValue(sumPos + value);\n      }\n\n      return xScale.getPixelForValue(value);\n    },\n    calculateBarY: function (index, datasetIndex, ruler) {\n      var me = this;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var stackIndex = me.getStackIndex(datasetIndex);\n      var topTick = yScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\n      topTick -= me.chart.isCombo ? ruler.tickHeight / 2 : 0;\n      return topTick + ruler.barHeight / 2 + ruler.categorySpacing + ruler.barHeight * stackIndex + ruler.barSpacing / 2 + ruler.barSpacing * stackIndex;\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/node_modules/chart.js/src/controllers/controller.bar.js"],"names":["module","exports","Chart","helpers","defaults","bar","hover","mode","scales","xAxes","type","categoryPercentage","barPercentage","gridLines","offsetGridLines","yAxes","controllers","DatasetController","extend","dataElementType","elements","Rectangle","initialize","chart","datasetIndex","prototype","call","me","meta","getMeta","dataset","getDataset","stack","getStackCount","yScale","getScaleForId","yAxisID","stacks","each","data","datasets","dsMeta","getDatasetMeta","isDatasetVisible","options","stacked","indexOf","undefined","push","length","update","reset","rectangle","index","updateElement","xScale","xAxisID","scaleBase","getBasePixel","rectangleElementOptions","custom","_xScale","_yScale","_datasetIndex","_index","ruler","getRuler","_model","x","calculateBarX","y","calculateBarY","label","labels","datasetLabel","horizontal","base","calculateBarBase","width","calculateBarWidth","backgroundColor","getValueAtIndexOrDefault","borderSkipped","borderColor","borderWidth","pivot","getBaseValue","original","value","Number","i","currentDs","currentDsMeta","id","currentVal","Math","min","max","getPixelForValue","stackCount","tickWidth","ticks","categoryWidth","categorySpacing","fullBarWidth","barWidth","barSpacing","barThickness","getStackIndex","j","stackIndex","leftTick","isCombo","sumPos","sumNeg","ds","stackedVal","draw","ease","easingDecimal","metaData","len","canvasHelpers","clipArea","ctx","chartArea","d","isNaN","transition","unclipArea","setHoverStyle","model","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","horizontalBar","position","tooltips","callbacks","title","tooltipItems","yLabel","tooltipItem","xLabel","height","calculateBarHeight","originalBase","tickHeight","categoryHeight","fullBarHeight","barHeight","topTick"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgB;AAEhC,MAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;AAEAD,EAAAA,KAAK,CAACE,QAAN,CAAeC,GAAf,GAAqB;AACpBC,IAAAA,KAAK,EAAE;AACNC,MAAAA,IAAI,EAAE;AADA,KADa;AAKpBC,IAAAA,MAAM,EAAE;AACPC,MAAAA,KAAK,EAAE,CAAC;AACPC,QAAAA,IAAI,EAAE,UADC;AAGP;AACAC,QAAAA,kBAAkB,EAAE,GAJb;AAKPC,QAAAA,aAAa,EAAE,GALR;AAOP;AACAC,QAAAA,SAAS,EAAE;AACVC,UAAAA,eAAe,EAAE;AADP;AARJ,OAAD,CADA;AAaPC,MAAAA,KAAK,EAAE,CAAC;AACPL,QAAAA,IAAI,EAAE;AADC,OAAD;AAbA;AALY,GAArB;AAwBAR,EAAAA,KAAK,CAACc,WAAN,CAAkBX,GAAlB,GAAwBH,KAAK,CAACe,iBAAN,CAAwBC,MAAxB,CAA+B;AAEtDC,IAAAA,eAAe,EAAEjB,KAAK,CAACkB,QAAN,CAAeC,SAFsB;AAItDC,IAAAA,UAAU,EAAE,UAASC,KAAT,EAAgBC,YAAhB,EAA8B;AACzCtB,MAAAA,KAAK,CAACe,iBAAN,CAAwBQ,SAAxB,CAAkCH,UAAlC,CAA6CI,IAA7C,CAAkD,IAAlD,EAAwDH,KAAxD,EAA+DC,YAA/D;AAEA,UAAIG,EAAE,GAAG,IAAT;AACA,UAAIC,IAAI,GAAGD,EAAE,CAACE,OAAH,EAAX;AACA,UAAIC,OAAO,GAAGH,EAAE,CAACI,UAAH,EAAd;AAEAH,MAAAA,IAAI,CAACI,KAAL,GAAaF,OAAO,CAACE,KAArB,CAPyC,CAQzC;;AACAJ,MAAAA,IAAI,CAACvB,GAAL,GAAW,IAAX;AACA,KAdqD;AAgBtD;AACA4B,IAAAA,aAAa,EAAE,YAAW;AACzB,UAAIN,EAAE,GAAG,IAAT;AACA,UAAIC,IAAI,GAAGD,EAAE,CAACE,OAAH,EAAX;AACA,UAAIK,MAAM,GAAGP,EAAE,CAACQ,aAAH,CAAiBP,IAAI,CAACQ,OAAtB,CAAb;AAEA,UAAIC,MAAM,GAAG,EAAb;AACAlC,MAAAA,OAAO,CAACmC,IAAR,CAAaX,EAAE,CAACJ,KAAH,CAASgB,IAAT,CAAcC,QAA3B,EAAqC,UAASV,OAAT,EAAkBN,YAAlB,EAAgC;AACpE,YAAIiB,MAAM,GAAGd,EAAE,CAACJ,KAAH,CAASmB,cAAT,CAAwBlB,YAAxB,CAAb;;AACA,YAAIiB,MAAM,CAACpC,GAAP,IAAcsB,EAAE,CAACJ,KAAH,CAASoB,gBAAT,CAA0BnB,YAA1B,CAAd,KACFU,MAAM,CAACU,OAAP,CAAeC,OAAf,KAA2B,KAA3B,IACAX,MAAM,CAACU,OAAP,CAAeC,OAAf,KAA2B,IAA3B,IAAmCR,MAAM,CAACS,OAAP,CAAeL,MAAM,CAACT,KAAtB,MAAiC,CAAC,CADrE,IAEAE,MAAM,CAACU,OAAP,CAAeC,OAAf,KAA2BE,SAA3B,KAAyCN,MAAM,CAACT,KAAP,KAAiBe,SAAjB,IAA8BV,MAAM,CAACS,OAAP,CAAeL,MAAM,CAACT,KAAtB,MAAiC,CAAC,CAAzG,CAHE,CAAJ,EAGiH;AAChHK,UAAAA,MAAM,CAACW,IAAP,CAAYP,MAAM,CAACT,KAAnB;AACA;AACD,OARD,EAQGL,EARH;AAUA,aAAOU,MAAM,CAACY,MAAd;AACA,KAlCqD;AAoCtDC,IAAAA,MAAM,EAAE,UAASC,KAAT,EAAgB;AACvB,UAAIxB,EAAE,GAAG,IAAT;AACAxB,MAAAA,OAAO,CAACmC,IAAR,CAAaX,EAAE,CAACE,OAAH,GAAaU,IAA1B,EAAgC,UAASa,SAAT,EAAoBC,KAApB,EAA2B;AAC1D1B,QAAAA,EAAE,CAAC2B,aAAH,CAAiBF,SAAjB,EAA4BC,KAA5B,EAAmCF,KAAnC;AACA,OAFD,EAEGxB,EAFH;AAGA,KAzCqD;AA2CtD2B,IAAAA,aAAa,EAAE,UAASF,SAAT,EAAoBC,KAApB,EAA2BF,KAA3B,EAAkC;AAChD,UAAIxB,EAAE,GAAG,IAAT;AACA,UAAIC,IAAI,GAAGD,EAAE,CAACE,OAAH,EAAX;AACA,UAAI0B,MAAM,GAAG5B,EAAE,CAACQ,aAAH,CAAiBP,IAAI,CAAC4B,OAAtB,CAAb;AACA,UAAItB,MAAM,GAAGP,EAAE,CAACQ,aAAH,CAAiBP,IAAI,CAACQ,OAAtB,CAAb;AACA,UAAIqB,SAAS,GAAGvB,MAAM,CAACwB,YAAP,EAAhB;AACA,UAAIC,uBAAuB,GAAGhC,EAAE,CAACJ,KAAH,CAASqB,OAAT,CAAiBxB,QAAjB,CAA0BgC,SAAxD;AACA,UAAIQ,MAAM,GAAGR,SAAS,CAACQ,MAAV,IAAoB,EAAjC;AACA,UAAI9B,OAAO,GAAGH,EAAE,CAACI,UAAH,EAAd;AAEAqB,MAAAA,SAAS,CAACS,OAAV,GAAoBN,MAApB;AACAH,MAAAA,SAAS,CAACU,OAAV,GAAoB5B,MAApB;AACAkB,MAAAA,SAAS,CAACW,aAAV,GAA0BpC,EAAE,CAAC0B,KAA7B;AACAD,MAAAA,SAAS,CAACY,MAAV,GAAmBX,KAAnB;AAEA,UAAIY,KAAK,GAAGtC,EAAE,CAACuC,QAAH,CAAYb,KAAZ,CAAZ,CAfgD,CAehB;;AAChCD,MAAAA,SAAS,CAACe,MAAV,GAAmB;AAClBC,QAAAA,CAAC,EAAEzC,EAAE,CAAC0C,aAAH,CAAiBhB,KAAjB,EAAwB1B,EAAE,CAAC0B,KAA3B,EAAkCY,KAAlC,CADe;AAElBK,QAAAA,CAAC,EAAEnB,KAAK,GAAGM,SAAH,GAAe9B,EAAE,CAAC4C,aAAH,CAAiBlB,KAAjB,EAAwB1B,EAAE,CAAC0B,KAA3B,CAFL;AAIlB;AACAmB,QAAAA,KAAK,EAAE7C,EAAE,CAACJ,KAAH,CAASgB,IAAT,CAAckC,MAAd,CAAqBpB,KAArB,CALW;AAMlBqB,QAAAA,YAAY,EAAE5C,OAAO,CAAC0C,KANJ;AAQlB;AACAG,QAAAA,UAAU,EAAE,KATM;AAUlBC,QAAAA,IAAI,EAAEzB,KAAK,GAAGM,SAAH,GAAe9B,EAAE,CAACkD,gBAAH,CAAoBlD,EAAE,CAAC0B,KAAvB,EAA8BA,KAA9B,CAVR;AAWlByB,QAAAA,KAAK,EAAEnD,EAAE,CAACoD,iBAAH,CAAqBd,KAArB,CAXW;AAYlBe,QAAAA,eAAe,EAAEpB,MAAM,CAACoB,eAAP,GAAyBpB,MAAM,CAACoB,eAAhC,GAAkD7E,OAAO,CAAC8E,wBAAR,CAAiCnD,OAAO,CAACkD,eAAzC,EAA0D3B,KAA1D,EAAiEM,uBAAuB,CAACqB,eAAzF,CAZjD;AAalBE,QAAAA,aAAa,EAAEtB,MAAM,CAACsB,aAAP,GAAuBtB,MAAM,CAACsB,aAA9B,GAA8CvB,uBAAuB,CAACuB,aAbnE;AAclBC,QAAAA,WAAW,EAAEvB,MAAM,CAACuB,WAAP,GAAqBvB,MAAM,CAACuB,WAA5B,GAA0ChF,OAAO,CAAC8E,wBAAR,CAAiCnD,OAAO,CAACqD,WAAzC,EAAsD9B,KAAtD,EAA6DM,uBAAuB,CAACwB,WAArF,CAdrC;AAelBC,QAAAA,WAAW,EAAExB,MAAM,CAACwB,WAAP,GAAqBxB,MAAM,CAACwB,WAA5B,GAA0CjF,OAAO,CAAC8E,wBAAR,CAAiCnD,OAAO,CAACsD,WAAzC,EAAsD/B,KAAtD,EAA6DM,uBAAuB,CAACyB,WAArF;AAfrC,OAAnB;AAkBAhC,MAAAA,SAAS,CAACiC,KAAV;AACA,KA9EqD;AAgFtDR,IAAAA,gBAAgB,EAAE,UAASrD,YAAT,EAAuB6B,KAAvB,EAA8B;AAC/C,UAAI1B,EAAE,GAAG,IAAT;AACA,UAAIC,IAAI,GAAGD,EAAE,CAACE,OAAH,EAAX;AACA,UAAIK,MAAM,GAAGP,EAAE,CAACQ,aAAH,CAAiBP,IAAI,CAACQ,OAAtB,CAAb;AACA,UAAIwC,IAAI,GAAG1C,MAAM,CAACoD,YAAP,EAAX;AACA,UAAIC,QAAQ,GAAGX,IAAf;;AAEA,UAAK1C,MAAM,CAACU,OAAP,CAAeC,OAAf,KAA2B,IAA5B,IACFX,MAAM,CAACU,OAAP,CAAeC,OAAf,KAA2BE,SAA3B,IAAwCnB,IAAI,CAACI,KAAL,KAAee,SADzD,EACqE;AACpE,YAAIxB,KAAK,GAAGI,EAAE,CAACJ,KAAf;AACA,YAAIiB,QAAQ,GAAGjB,KAAK,CAACgB,IAAN,CAAWC,QAA1B;AACA,YAAIgD,KAAK,GAAGC,MAAM,CAACjD,QAAQ,CAAChB,YAAD,CAAR,CAAuBe,IAAvB,CAA4Bc,KAA5B,CAAD,CAAlB;;AAEA,aAAK,IAAIqC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlE,YAApB,EAAkCkE,CAAC,EAAnC,EAAuC;AACtC,cAAIC,SAAS,GAAGnD,QAAQ,CAACkD,CAAD,CAAxB;AACA,cAAIE,aAAa,GAAGrE,KAAK,CAACmB,cAAN,CAAqBgD,CAArB,CAApB;;AACA,cAAIE,aAAa,CAACvF,GAAd,IAAqBuF,aAAa,CAACxD,OAAd,KAA0BF,MAAM,CAAC2D,EAAtD,IAA4DtE,KAAK,CAACoB,gBAAN,CAAuB+C,CAAvB,CAA5D,IACH9D,IAAI,CAACI,KAAL,KAAe4D,aAAa,CAAC5D,KAD9B,EACqC;AACpC,gBAAI8D,UAAU,GAAGL,MAAM,CAACE,SAAS,CAACpD,IAAV,CAAec,KAAf,CAAD,CAAvB;AACAuB,YAAAA,IAAI,IAAIY,KAAK,GAAG,CAAR,GAAYO,IAAI,CAACC,GAAL,CAASF,UAAT,EAAqBP,QAArB,CAAZ,GAA6CQ,IAAI,CAACE,GAAL,CAASH,UAAT,EAAqBP,QAArB,CAArD;AACA;AACD;;AAED,eAAOrD,MAAM,CAACgE,gBAAP,CAAwBtB,IAAxB,CAAP;AACA;;AAED,aAAO1C,MAAM,CAACwB,YAAP,EAAP;AACA,KA3GqD;AA6GtDQ,IAAAA,QAAQ,EAAE,YAAW;AACpB,UAAIvC,EAAE,GAAG,IAAT;AACA,UAAIC,IAAI,GAAGD,EAAE,CAACE,OAAH,EAAX;AACA,UAAI0B,MAAM,GAAG5B,EAAE,CAACQ,aAAH,CAAiBP,IAAI,CAAC4B,OAAtB,CAAb;AACA,UAAI2C,UAAU,GAAGxE,EAAE,CAACM,aAAH,EAAjB;AAEA,UAAImE,SAAS,GAAG7C,MAAM,CAACuB,KAAP,GAAevB,MAAM,CAAC8C,KAAP,CAAapD,MAA5C;AACA,UAAIqD,aAAa,GAAGF,SAAS,GAAG7C,MAAM,CAACX,OAAP,CAAejC,kBAA/C;AACA,UAAI4F,eAAe,GAAG,CAACH,SAAS,GAAIA,SAAS,GAAG7C,MAAM,CAACX,OAAP,CAAejC,kBAAzC,IAAgE,CAAtF;AACA,UAAI6F,YAAY,GAAGF,aAAa,GAAGH,UAAnC;AAEA,UAAIM,QAAQ,GAAGD,YAAY,GAAGjD,MAAM,CAACX,OAAP,CAAehC,aAA7C;AACA,UAAI8F,UAAU,GAAGF,YAAY,GAAIA,YAAY,GAAGjD,MAAM,CAACX,OAAP,CAAehC,aAA/D;AAEA,aAAO;AACNuF,QAAAA,UAAU,EAAEA,UADN;AAENC,QAAAA,SAAS,EAAEA,SAFL;AAGNE,QAAAA,aAAa,EAAEA,aAHT;AAINC,QAAAA,eAAe,EAAEA,eAJX;AAKNC,QAAAA,YAAY,EAAEA,YALR;AAMNC,QAAAA,QAAQ,EAAEA,QANJ;AAONC,QAAAA,UAAU,EAAEA;AAPN,OAAP;AASA,KApIqD;AAsItD3B,IAAAA,iBAAiB,EAAE,UAASd,KAAT,EAAgB;AAClC,UAAItC,EAAE,GAAG,IAAT;AACA,UAAIC,IAAI,GAAGD,EAAE,CAACE,OAAH,EAAX;AACA,UAAI0B,MAAM,GAAG5B,EAAE,CAACQ,aAAH,CAAiBP,IAAI,CAAC4B,OAAtB,CAAb;;AACA,UAAID,MAAM,CAACX,OAAP,CAAe+D,YAAnB,EAAiC;AAChC,eAAOpD,MAAM,CAACX,OAAP,CAAe+D,YAAtB;AACA;;AACD,aAAO1C,KAAK,CAACwC,QAAb;AACA,KA9IqD;AAgJtD;AACAG,IAAAA,aAAa,EAAE,UAASpF,YAAT,EAAuB;AACrC,UAAIG,EAAE,GAAG,IAAT;AACA,UAAIC,IAAI,GAAGD,EAAE,CAACJ,KAAH,CAASmB,cAAT,CAAwBlB,YAAxB,CAAX;AACA,UAAIU,MAAM,GAAGP,EAAE,CAACQ,aAAH,CAAiBP,IAAI,CAACQ,OAAtB,CAAb;AACA,UAAIK,MAAJ,EAAYoE,CAAZ;AACA,UAAIxE,MAAM,GAAG,CAACT,IAAI,CAACI,KAAN,CAAb;;AAEA,WAAK6E,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGrF,YAAhB,EAA8B,EAAEqF,CAAhC,EAAmC;AAClCpE,QAAAA,MAAM,GAAG,KAAKlB,KAAL,CAAWmB,cAAX,CAA0BmE,CAA1B,CAAT;;AACA,YAAIpE,MAAM,CAACpC,GAAP,IAAc,KAAKkB,KAAL,CAAWoB,gBAAX,CAA4BkE,CAA5B,CAAd,KACF3E,MAAM,CAACU,OAAP,CAAeC,OAAf,KAA2B,KAA3B,IACAX,MAAM,CAACU,OAAP,CAAeC,OAAf,KAA2B,IAA3B,IAAmCR,MAAM,CAACS,OAAP,CAAeL,MAAM,CAACT,KAAtB,MAAiC,CAAC,CADrE,IAEAE,MAAM,CAACU,OAAP,CAAeC,OAAf,KAA2BE,SAA3B,KAAyCN,MAAM,CAACT,KAAP,KAAiBe,SAAjB,IAA8BV,MAAM,CAACS,OAAP,CAAeL,MAAM,CAACT,KAAtB,MAAiC,CAAC,CAAzG,CAHE,CAAJ,EAGiH;AAChHK,UAAAA,MAAM,CAACW,IAAP,CAAYP,MAAM,CAACT,KAAnB;AACA;AACD;;AAED,aAAOK,MAAM,CAACY,MAAP,GAAgB,CAAvB;AACA,KAnKqD;AAqKtDoB,IAAAA,aAAa,EAAE,UAAShB,KAAT,EAAgB7B,YAAhB,EAA8ByC,KAA9B,EAAqC;AACnD,UAAItC,EAAE,GAAG,IAAT;AACA,UAAIC,IAAI,GAAGD,EAAE,CAACE,OAAH,EAAX;AACA,UAAI0B,MAAM,GAAG5B,EAAE,CAACQ,aAAH,CAAiBP,IAAI,CAAC4B,OAAtB,CAAb;AACA,UAAIsD,UAAU,GAAGnF,EAAE,CAACiF,aAAH,CAAiBpF,YAAjB,CAAjB;AACA,UAAIuF,QAAQ,GAAGxD,MAAM,CAAC2C,gBAAP,CAAwB,IAAxB,EAA8B7C,KAA9B,EAAqC7B,YAArC,EAAmDG,EAAE,CAACJ,KAAH,CAASyF,OAA5D,CAAf;AACAD,MAAAA,QAAQ,IAAIpF,EAAE,CAACJ,KAAH,CAASyF,OAAT,GAAoB/C,KAAK,CAACmC,SAAN,GAAkB,CAAtC,GAA2C,CAAvD;AAEA,aAAOW,QAAQ,GACb9C,KAAK,CAACwC,QAAN,GAAiB,CADZ,GAENxC,KAAK,CAACsC,eAFA,GAGLtC,KAAK,CAACwC,QAAN,GAAiBK,UAHZ,GAIL7C,KAAK,CAACyC,UAAN,GAAmB,CAJd,GAKLzC,KAAK,CAACyC,UAAN,GAAmBI,UALrB;AAMA,KAnLqD;AAqLtDvC,IAAAA,aAAa,EAAE,UAASlB,KAAT,EAAgB7B,YAAhB,EAA8B;AAC5C,UAAIG,EAAE,GAAG,IAAT;AACA,UAAIC,IAAI,GAAGD,EAAE,CAACE,OAAH,EAAX;AACA,UAAIK,MAAM,GAAGP,EAAE,CAACQ,aAAH,CAAiBP,IAAI,CAACQ,OAAtB,CAAb;AACA,UAAIoD,KAAK,GAAGC,MAAM,CAAC9D,EAAE,CAACI,UAAH,GAAgBQ,IAAhB,CAAqBc,KAArB,CAAD,CAAlB;;AAEA,UAAInB,MAAM,CAACU,OAAP,CAAeC,OAAf,IACFX,MAAM,CAACU,OAAP,CAAeC,OAAf,KAA2BE,SAA3B,IAAwCnB,IAAI,CAACI,KAAL,KAAee,SADzD,EACqE;AACpE,YAAI6B,IAAI,GAAG1C,MAAM,CAACoD,YAAP,EAAX;AACA,YAAI2B,MAAM,GAAGrC,IAAb;AAAA,YACCsC,MAAM,GAAGtC,IADV;;AAGA,aAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlE,YAApB,EAAkCkE,CAAC,EAAnC,EAAuC;AACtC,cAAIyB,EAAE,GAAGxF,EAAE,CAACJ,KAAH,CAASgB,IAAT,CAAcC,QAAd,CAAuBkD,CAAvB,CAAT;AACA,cAAIjD,MAAM,GAAGd,EAAE,CAACJ,KAAH,CAASmB,cAAT,CAAwBgD,CAAxB,CAAb;;AACA,cAAIjD,MAAM,CAACpC,GAAP,IAAcoC,MAAM,CAACL,OAAP,KAAmBF,MAAM,CAAC2D,EAAxC,IAA8ClE,EAAE,CAACJ,KAAH,CAASoB,gBAAT,CAA0B+C,CAA1B,CAA9C,IACH9D,IAAI,CAACI,KAAL,KAAeS,MAAM,CAACT,KADvB,EAC8B;AAC7B,gBAAIoF,UAAU,GAAG3B,MAAM,CAAC0B,EAAE,CAAC5E,IAAH,CAAQc,KAAR,CAAD,CAAvB;;AACA,gBAAI+D,UAAU,GAAG,CAAjB,EAAoB;AACnBF,cAAAA,MAAM,IAAIE,UAAU,IAAI,CAAxB;AACA,aAFD,MAEO;AACNH,cAAAA,MAAM,IAAIG,UAAU,IAAI,CAAxB;AACA;AACD;AACD;;AAED,YAAI5B,KAAK,GAAG,CAAZ,EAAe;AACd,iBAAOtD,MAAM,CAACgE,gBAAP,CAAwBgB,MAAM,GAAG1B,KAAjC,CAAP;AACA;;AACD,eAAOtD,MAAM,CAACgE,gBAAP,CAAwBe,MAAM,GAAGzB,KAAjC,CAAP;AACA;;AAED,aAAOtD,MAAM,CAACgE,gBAAP,CAAwBV,KAAxB,CAAP;AACA,KAtNqD;AAwNtD6B,IAAAA,IAAI,EAAE,UAASC,IAAT,EAAe;AACpB,UAAI3F,EAAE,GAAG,IAAT;AACA,UAAI4F,aAAa,GAAGD,IAAI,IAAI,CAA5B;AACA,UAAIE,QAAQ,GAAG7F,EAAE,CAACE,OAAH,GAAaU,IAA5B;AACA,UAAIT,OAAO,GAAGH,EAAE,CAACI,UAAH,EAAd;AACA,UAAI2D,CAAJ,EAAO+B,GAAP;AAEAvH,MAAAA,KAAK,CAACwH,aAAN,CAAoBC,QAApB,CAA6BhG,EAAE,CAACJ,KAAH,CAASA,KAAT,CAAeqG,GAA5C,EAAiDjG,EAAE,CAACJ,KAAH,CAASsG,SAA1D;;AACA,WAAKnC,CAAC,GAAG,CAAJ,EAAO+B,GAAG,GAAGD,QAAQ,CAACvE,MAA3B,EAAmCyC,CAAC,GAAG+B,GAAvC,EAA4C,EAAE/B,CAA9C,EAAiD;AAChD,YAAIoC,CAAC,GAAGhG,OAAO,CAACS,IAAR,CAAamD,CAAb,CAAR;;AACA,YAAIoC,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAK/E,SAApB,IAAiC,CAACgF,KAAK,CAACD,CAAD,CAA3C,EAAgD;AAC/CN,UAAAA,QAAQ,CAAC9B,CAAD,CAAR,CAAYsC,UAAZ,CAAuBT,aAAvB,EAAsCF,IAAtC;AACA;AACD;;AACDnH,MAAAA,KAAK,CAACwH,aAAN,CAAoBO,UAApB,CAA+BtG,EAAE,CAACJ,KAAH,CAASA,KAAT,CAAeqG,GAA9C;AACA,KAvOqD;AAyOtDM,IAAAA,aAAa,EAAE,UAAS9E,SAAT,EAAoB;AAClC,UAAItB,OAAO,GAAG,KAAKP,KAAL,CAAWgB,IAAX,CAAgBC,QAAhB,CAAyBY,SAAS,CAACW,aAAnC,CAAd;AACA,UAAIV,KAAK,GAAGD,SAAS,CAACY,MAAtB;AAEA,UAAIJ,MAAM,GAAGR,SAAS,CAACQ,MAAV,IAAoB,EAAjC;AACA,UAAIuE,KAAK,GAAG/E,SAAS,CAACe,MAAtB;AACAgE,MAAAA,KAAK,CAACnD,eAAN,GAAwBpB,MAAM,CAACwE,oBAAP,GAA8BxE,MAAM,CAACwE,oBAArC,GAA4DjI,OAAO,CAAC8E,wBAAR,CAAiCnD,OAAO,CAACsG,oBAAzC,EAA+D/E,KAA/D,EAAsElD,OAAO,CAACkI,aAAR,CAAsBF,KAAK,CAACnD,eAA5B,CAAtE,CAApF;AACAmD,MAAAA,KAAK,CAAChD,WAAN,GAAoBvB,MAAM,CAAC0E,gBAAP,GAA0B1E,MAAM,CAAC0E,gBAAjC,GAAoDnI,OAAO,CAAC8E,wBAAR,CAAiCnD,OAAO,CAACwG,gBAAzC,EAA2DjF,KAA3D,EAAkElD,OAAO,CAACkI,aAAR,CAAsBF,KAAK,CAAChD,WAA5B,CAAlE,CAAxE;AACAgD,MAAAA,KAAK,CAAC/C,WAAN,GAAoBxB,MAAM,CAAC2E,gBAAP,GAA0B3E,MAAM,CAAC2E,gBAAjC,GAAoDpI,OAAO,CAAC8E,wBAAR,CAAiCnD,OAAO,CAACyG,gBAAzC,EAA2DlF,KAA3D,EAAkE8E,KAAK,CAAC/C,WAAxE,CAAxE;AACA,KAlPqD;AAoPtDoD,IAAAA,gBAAgB,EAAE,UAASpF,SAAT,EAAoB;AACrC,UAAItB,OAAO,GAAG,KAAKP,KAAL,CAAWgB,IAAX,CAAgBC,QAAhB,CAAyBY,SAAS,CAACW,aAAnC,CAAd;AACA,UAAIV,KAAK,GAAGD,SAAS,CAACY,MAAtB;AACA,UAAIJ,MAAM,GAAGR,SAAS,CAACQ,MAAV,IAAoB,EAAjC;AACA,UAAIuE,KAAK,GAAG/E,SAAS,CAACe,MAAtB;AACA,UAAIR,uBAAuB,GAAG,KAAKpC,KAAL,CAAWqB,OAAX,CAAmBxB,QAAnB,CAA4BgC,SAA1D;AAEA+E,MAAAA,KAAK,CAACnD,eAAN,GAAwBpB,MAAM,CAACoB,eAAP,GAAyBpB,MAAM,CAACoB,eAAhC,GAAkD7E,OAAO,CAAC8E,wBAAR,CAAiCnD,OAAO,CAACkD,eAAzC,EAA0D3B,KAA1D,EAAiEM,uBAAuB,CAACqB,eAAzF,CAA1E;AACAmD,MAAAA,KAAK,CAAChD,WAAN,GAAoBvB,MAAM,CAACuB,WAAP,GAAqBvB,MAAM,CAACuB,WAA5B,GAA0ChF,OAAO,CAAC8E,wBAAR,CAAiCnD,OAAO,CAACqD,WAAzC,EAAsD9B,KAAtD,EAA6DM,uBAAuB,CAACwB,WAArF,CAA9D;AACAgD,MAAAA,KAAK,CAAC/C,WAAN,GAAoBxB,MAAM,CAACwB,WAAP,GAAqBxB,MAAM,CAACwB,WAA5B,GAA0CjF,OAAO,CAAC8E,wBAAR,CAAiCnD,OAAO,CAACsD,WAAzC,EAAsD/B,KAAtD,EAA6DM,uBAAuB,CAACyB,WAArF,CAA9D;AACA;AA9PqD,GAA/B,CAAxB,CA5BgC,CA+RhC;AACA;;AACAlF,EAAAA,KAAK,CAACE,QAAN,CAAeqI,aAAf,GAA+B;AAC9BnI,IAAAA,KAAK,EAAE;AACNC,MAAAA,IAAI,EAAE;AADA,KADuB;AAK9BC,IAAAA,MAAM,EAAE;AACPC,MAAAA,KAAK,EAAE,CAAC;AACPC,QAAAA,IAAI,EAAE,QADC;AAEPgI,QAAAA,QAAQ,EAAE;AAFH,OAAD,CADA;AAKP3H,MAAAA,KAAK,EAAE,CAAC;AACP2H,QAAAA,QAAQ,EAAE,MADH;AAEPhI,QAAAA,IAAI,EAAE,UAFC;AAIP;AACAC,QAAAA,kBAAkB,EAAE,GALb;AAMPC,QAAAA,aAAa,EAAE,GANR;AAQP;AACAC,QAAAA,SAAS,EAAE;AACVC,UAAAA,eAAe,EAAE;AADP;AATJ,OAAD;AALA,KALsB;AAwB9BM,IAAAA,QAAQ,EAAE;AACTgC,MAAAA,SAAS,EAAE;AACV8B,QAAAA,aAAa,EAAE;AADL;AADF,KAxBoB;AA6B9ByD,IAAAA,QAAQ,EAAE;AACTC,MAAAA,SAAS,EAAE;AACVC,QAAAA,KAAK,EAAE,UAASC,YAAT,EAAuBvG,IAAvB,EAA6B;AACnC;AACA,cAAIsG,KAAK,GAAG,EAAZ;;AAEA,cAAIC,YAAY,CAAC7F,MAAb,GAAsB,CAA1B,EAA6B;AAC5B,gBAAI6F,YAAY,CAAC,CAAD,CAAZ,CAAgBC,MAApB,EAA4B;AAC3BF,cAAAA,KAAK,GAAGC,YAAY,CAAC,CAAD,CAAZ,CAAgBC,MAAxB;AACA,aAFD,MAEO,IAAIxG,IAAI,CAACkC,MAAL,CAAYxB,MAAZ,GAAqB,CAArB,IAA0B6F,YAAY,CAAC,CAAD,CAAZ,CAAgBzF,KAAhB,GAAwBd,IAAI,CAACkC,MAAL,CAAYxB,MAAlE,EAA0E;AAChF4F,cAAAA,KAAK,GAAGtG,IAAI,CAACkC,MAAL,CAAYqE,YAAY,CAAC,CAAD,CAAZ,CAAgBzF,KAA5B,CAAR;AACA;AACD;;AAED,iBAAOwF,KAAP;AACA,SAdS;AAeVrE,QAAAA,KAAK,EAAE,UAASwE,WAAT,EAAsBzG,IAAtB,EAA4B;AAClC,cAAImC,YAAY,GAAGnC,IAAI,CAACC,QAAL,CAAcwG,WAAW,CAACxH,YAA1B,EAAwCgD,KAAxC,IAAiD,EAApE;AACA,iBAAOE,YAAY,GAAG,IAAf,GAAsBsE,WAAW,CAACC,MAAzC;AACA;AAlBS;AADF;AA7BoB,GAA/B;AAqDA/I,EAAAA,KAAK,CAACc,WAAN,CAAkByH,aAAlB,GAAkCvI,KAAK,CAACc,WAAN,CAAkBX,GAAlB,CAAsBa,MAAtB,CAA6B;AAE9D;AACAe,IAAAA,aAAa,EAAE,YAAW;AACzB,UAAIN,EAAE,GAAG,IAAT;AACA,UAAIC,IAAI,GAAGD,EAAE,CAACE,OAAH,EAAX;AACA,UAAI0B,MAAM,GAAG5B,EAAE,CAACQ,aAAH,CAAiBP,IAAI,CAAC4B,OAAtB,CAAb;AAEA,UAAInB,MAAM,GAAG,EAAb;AACAlC,MAAAA,OAAO,CAACmC,IAAR,CAAaX,EAAE,CAACJ,KAAH,CAASgB,IAAT,CAAcC,QAA3B,EAAqC,UAASV,OAAT,EAAkBN,YAAlB,EAAgC;AACpE,YAAIiB,MAAM,GAAGd,EAAE,CAACJ,KAAH,CAASmB,cAAT,CAAwBlB,YAAxB,CAAb;;AACA,YAAIiB,MAAM,CAACpC,GAAP,IAAcsB,EAAE,CAACJ,KAAH,CAASoB,gBAAT,CAA0BnB,YAA1B,CAAd,KACF+B,MAAM,CAACX,OAAP,CAAeC,OAAf,KAA2B,KAA3B,IACAU,MAAM,CAACX,OAAP,CAAeC,OAAf,KAA2B,IAA3B,IAAmCR,MAAM,CAACS,OAAP,CAAeL,MAAM,CAACT,KAAtB,MAAiC,CAAC,CADrE,IAEAuB,MAAM,CAACX,OAAP,CAAeC,OAAf,KAA2BE,SAA3B,KAAyCN,MAAM,CAACT,KAAP,KAAiBe,SAAjB,IAA8BV,MAAM,CAACS,OAAP,CAAeL,MAAM,CAACT,KAAtB,MAAiC,CAAC,CAAzG,CAHE,CAAJ,EAGiH;AAChHK,UAAAA,MAAM,CAACW,IAAP,CAAYP,MAAM,CAACT,KAAnB;AACA;AACD,OARD,EAQGL,EARH;AAUA,aAAOU,MAAM,CAACY,MAAd;AACA,KApB6D;AAsB9DK,IAAAA,aAAa,EAAE,UAASF,SAAT,EAAoBC,KAApB,EAA2BF,KAA3B,EAAkC;AAChD,UAAIxB,EAAE,GAAG,IAAT;AACA,UAAIC,IAAI,GAAGD,EAAE,CAACE,OAAH,EAAX;AACA,UAAI0B,MAAM,GAAG5B,EAAE,CAACQ,aAAH,CAAiBP,IAAI,CAAC4B,OAAtB,CAAb;AACA,UAAItB,MAAM,GAAGP,EAAE,CAACQ,aAAH,CAAiBP,IAAI,CAACQ,OAAtB,CAAb;AACA,UAAIqB,SAAS,GAAGF,MAAM,CAACG,YAAP,EAAhB;AACA,UAAIE,MAAM,GAAGR,SAAS,CAACQ,MAAV,IAAoB,EAAjC;AACA,UAAI9B,OAAO,GAAGH,EAAE,CAACI,UAAH,EAAd;AACA,UAAI4B,uBAAuB,GAAGhC,EAAE,CAACJ,KAAH,CAASqB,OAAT,CAAiBxB,QAAjB,CAA0BgC,SAAxD;AAEAA,MAAAA,SAAS,CAACS,OAAV,GAAoBN,MAApB;AACAH,MAAAA,SAAS,CAACU,OAAV,GAAoB5B,MAApB;AACAkB,MAAAA,SAAS,CAACW,aAAV,GAA0BpC,EAAE,CAAC0B,KAA7B;AACAD,MAAAA,SAAS,CAACY,MAAV,GAAmBX,KAAnB;AAEA,UAAIY,KAAK,GAAGtC,EAAE,CAACuC,QAAH,CAAYb,KAAZ,CAAZ,CAfgD,CAehB;;AAChCD,MAAAA,SAAS,CAACe,MAAV,GAAmB;AAClBC,QAAAA,CAAC,EAAEjB,KAAK,GAAGM,SAAH,GAAe9B,EAAE,CAAC0C,aAAH,CAAiBhB,KAAjB,EAAwB1B,EAAE,CAAC0B,KAA3B,CADL;AAElBiB,QAAAA,CAAC,EAAE3C,EAAE,CAAC4C,aAAH,CAAiBlB,KAAjB,EAAwB1B,EAAE,CAAC0B,KAA3B,EAAkCY,KAAlC,CAFe;AAIlB;AACAO,QAAAA,KAAK,EAAE7C,EAAE,CAACJ,KAAH,CAASgB,IAAT,CAAckC,MAAd,CAAqBpB,KAArB,CALW;AAMlBqB,QAAAA,YAAY,EAAE5C,OAAO,CAAC0C,KANJ;AAQlB;AACAG,QAAAA,UAAU,EAAE,IATM;AAUlBC,QAAAA,IAAI,EAAEzB,KAAK,GAAGM,SAAH,GAAe9B,EAAE,CAACkD,gBAAH,CAAoBlD,EAAE,CAAC0B,KAAvB,EAA8BA,KAA9B,CAVR;AAWlB6F,QAAAA,MAAM,EAAEvH,EAAE,CAACwH,kBAAH,CAAsBlF,KAAtB,CAXU;AAYlBe,QAAAA,eAAe,EAAEpB,MAAM,CAACoB,eAAP,GAAyBpB,MAAM,CAACoB,eAAhC,GAAkD7E,OAAO,CAAC8E,wBAAR,CAAiCnD,OAAO,CAACkD,eAAzC,EAA0D3B,KAA1D,EAAiEM,uBAAuB,CAACqB,eAAzF,CAZjD;AAalBE,QAAAA,aAAa,EAAEtB,MAAM,CAACsB,aAAP,GAAuBtB,MAAM,CAACsB,aAA9B,GAA8CvB,uBAAuB,CAACuB,aAbnE;AAclBC,QAAAA,WAAW,EAAEvB,MAAM,CAACuB,WAAP,GAAqBvB,MAAM,CAACuB,WAA5B,GAA0ChF,OAAO,CAAC8E,wBAAR,CAAiCnD,OAAO,CAACqD,WAAzC,EAAsD9B,KAAtD,EAA6DM,uBAAuB,CAACwB,WAArF,CAdrC;AAelBC,QAAAA,WAAW,EAAExB,MAAM,CAACwB,WAAP,GAAqBxB,MAAM,CAACwB,WAA5B,GAA0CjF,OAAO,CAAC8E,wBAAR,CAAiCnD,OAAO,CAACsD,WAAzC,EAAsD/B,KAAtD,EAA6DM,uBAAuB,CAACyB,WAArF;AAfrC,OAAnB;AAkBAhC,MAAAA,SAAS,CAACiC,KAAV;AACA,KAzD6D;AA2D9DR,IAAAA,gBAAgB,EAAE,UAASrD,YAAT,EAAuB6B,KAAvB,EAA8B;AAC/C,UAAI1B,EAAE,GAAG,IAAT;AACA,UAAIC,IAAI,GAAGD,EAAE,CAACE,OAAH,EAAX;AACA,UAAI0B,MAAM,GAAG5B,EAAE,CAACQ,aAAH,CAAiBP,IAAI,CAAC4B,OAAtB,CAAb;AACA,UAAIoB,IAAI,GAAGrB,MAAM,CAAC+B,YAAP,EAAX;AACA,UAAI8D,YAAY,GAAGxE,IAAnB;;AAEA,UAAIrB,MAAM,CAACX,OAAP,CAAeC,OAAf,IACFU,MAAM,CAACX,OAAP,CAAeC,OAAf,KAA2BE,SAA3B,IAAwCnB,IAAI,CAACI,KAAL,KAAee,SADzD,EACqE;AACpE,YAAIxB,KAAK,GAAGI,EAAE,CAACJ,KAAf;AACA,YAAIiB,QAAQ,GAAGjB,KAAK,CAACgB,IAAN,CAAWC,QAA1B;AACA,YAAIgD,KAAK,GAAGC,MAAM,CAACjD,QAAQ,CAAChB,YAAD,CAAR,CAAuBe,IAAvB,CAA4Bc,KAA5B,CAAD,CAAlB;;AAEA,aAAK,IAAIqC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlE,YAApB,EAAkCkE,CAAC,EAAnC,EAAuC;AACtC,cAAIC,SAAS,GAAGnD,QAAQ,CAACkD,CAAD,CAAxB;AACA,cAAIE,aAAa,GAAGrE,KAAK,CAACmB,cAAN,CAAqBgD,CAArB,CAApB;;AACA,cAAIE,aAAa,CAACvF,GAAd,IAAqBuF,aAAa,CAACpC,OAAd,KAA0BD,MAAM,CAACsC,EAAtD,IAA4DtE,KAAK,CAACoB,gBAAN,CAAuB+C,CAAvB,CAA5D,IACH9D,IAAI,CAACI,KAAL,KAAe4D,aAAa,CAAC5D,KAD9B,EACqC;AACpC,gBAAI8D,UAAU,GAAGL,MAAM,CAACE,SAAS,CAACpD,IAAV,CAAec,KAAf,CAAD,CAAvB;AACAuB,YAAAA,IAAI,IAAIY,KAAK,GAAG,CAAR,GAAYO,IAAI,CAACC,GAAL,CAASF,UAAT,EAAqBsD,YAArB,CAAZ,GAAiDrD,IAAI,CAACE,GAAL,CAASH,UAAT,EAAqBsD,YAArB,CAAzD;AACA;AACD;;AAED,eAAO7F,MAAM,CAAC2C,gBAAP,CAAwBtB,IAAxB,CAAP;AACA;;AAED,aAAOrB,MAAM,CAACG,YAAP,EAAP;AACA,KAtF6D;AAwF9DQ,IAAAA,QAAQ,EAAE,YAAW;AACpB,UAAIvC,EAAE,GAAG,IAAT;AACA,UAAIC,IAAI,GAAGD,EAAE,CAACE,OAAH,EAAX;AACA,UAAIK,MAAM,GAAGP,EAAE,CAACQ,aAAH,CAAiBP,IAAI,CAACQ,OAAtB,CAAb;AACA,UAAI+D,UAAU,GAAGxE,EAAE,CAACM,aAAH,EAAjB;AAEA,UAAIoH,UAAU,GAAGnH,MAAM,CAACgH,MAAP,GAAgBhH,MAAM,CAACmE,KAAP,CAAapD,MAA9C;AACA,UAAIqG,cAAc,GAAGD,UAAU,GAAGnH,MAAM,CAACU,OAAP,CAAejC,kBAAjD;AACA,UAAI4F,eAAe,GAAG,CAAC8C,UAAU,GAAIA,UAAU,GAAGnH,MAAM,CAACU,OAAP,CAAejC,kBAA3C,IAAkE,CAAxF;AACA,UAAI4I,aAAa,GAAGD,cAAc,GAAGnD,UAArC;AAEA,UAAIqD,SAAS,GAAGD,aAAa,GAAGrH,MAAM,CAACU,OAAP,CAAehC,aAA/C;AACA,UAAI8F,UAAU,GAAG6C,aAAa,GAAIA,aAAa,GAAGrH,MAAM,CAACU,OAAP,CAAehC,aAAjE;AAEA,aAAO;AACNuF,QAAAA,UAAU,EAAEA,UADN;AAENkD,QAAAA,UAAU,EAAEA,UAFN;AAGNC,QAAAA,cAAc,EAAEA,cAHV;AAIN/C,QAAAA,eAAe,EAAEA,eAJX;AAKNgD,QAAAA,aAAa,EAAEA,aALT;AAMNC,QAAAA,SAAS,EAAEA,SANL;AAON9C,QAAAA,UAAU,EAAEA;AAPN,OAAP;AASA,KA/G6D;AAiH9DyC,IAAAA,kBAAkB,EAAE,UAASlF,KAAT,EAAgB;AACnC,UAAItC,EAAE,GAAG,IAAT;AACA,UAAIC,IAAI,GAAGD,EAAE,CAACE,OAAH,EAAX;AACA,UAAIK,MAAM,GAAGP,EAAE,CAACQ,aAAH,CAAiBP,IAAI,CAACQ,OAAtB,CAAb;;AACA,UAAIF,MAAM,CAACU,OAAP,CAAe+D,YAAnB,EAAiC;AAChC,eAAOzE,MAAM,CAACU,OAAP,CAAe+D,YAAtB;AACA;;AACD,aAAO1C,KAAK,CAACuF,SAAb;AACA,KAzH6D;AA2H9D;AACA5C,IAAAA,aAAa,EAAE,UAASpF,YAAT,EAAuB;AACrC,UAAIG,EAAE,GAAG,IAAT;AACA,UAAIC,IAAI,GAAGD,EAAE,CAACJ,KAAH,CAASmB,cAAT,CAAwBlB,YAAxB,CAAX;AACA,UAAI+B,MAAM,GAAG5B,EAAE,CAACQ,aAAH,CAAiBP,IAAI,CAAC4B,OAAtB,CAAb;AACA,UAAIf,MAAJ,EAAYoE,CAAZ;AACA,UAAIxE,MAAM,GAAG,CAACT,IAAI,CAACI,KAAN,CAAb;;AAEA,WAAK6E,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGrF,YAAhB,EAA8B,EAAEqF,CAAhC,EAAmC;AAClCpE,QAAAA,MAAM,GAAG,KAAKlB,KAAL,CAAWmB,cAAX,CAA0BmE,CAA1B,CAAT;;AACA,YAAIpE,MAAM,CAACpC,GAAP,IAAc,KAAKkB,KAAL,CAAWoB,gBAAX,CAA4BkE,CAA5B,CAAd,KACFtD,MAAM,CAACX,OAAP,CAAeC,OAAf,KAA2B,KAA3B,IACAU,MAAM,CAACX,OAAP,CAAeC,OAAf,KAA2B,IAA3B,IAAmCR,MAAM,CAACS,OAAP,CAAeL,MAAM,CAACT,KAAtB,MAAiC,CAAC,CADrE,IAEAuB,MAAM,CAACX,OAAP,CAAeC,OAAf,KAA2BE,SAA3B,KAAyCN,MAAM,CAACT,KAAP,KAAiBe,SAAjB,IAA8BV,MAAM,CAACS,OAAP,CAAeL,MAAM,CAACT,KAAtB,MAAiC,CAAC,CAAzG,CAHE,CAAJ,EAGiH;AAChHK,UAAAA,MAAM,CAACW,IAAP,CAAYP,MAAM,CAACT,KAAnB;AACA;AACD;;AAED,aAAOK,MAAM,CAACY,MAAP,GAAgB,CAAvB;AACA,KA9I6D;AAgJ9DoB,IAAAA,aAAa,EAAE,UAAShB,KAAT,EAAgB7B,YAAhB,EAA8B;AAC5C,UAAIG,EAAE,GAAG,IAAT;AACA,UAAIC,IAAI,GAAGD,EAAE,CAACE,OAAH,EAAX;AACA,UAAI0B,MAAM,GAAG5B,EAAE,CAACQ,aAAH,CAAiBP,IAAI,CAAC4B,OAAtB,CAAb;AACA,UAAIgC,KAAK,GAAGC,MAAM,CAAC9D,EAAE,CAACI,UAAH,GAAgBQ,IAAhB,CAAqBc,KAArB,CAAD,CAAlB;;AAEA,UAAIE,MAAM,CAACX,OAAP,CAAeC,OAAf,IACFU,MAAM,CAACX,OAAP,CAAeC,OAAf,KAA2BE,SAA3B,IAAwCnB,IAAI,CAACI,KAAL,KAAee,SADzD,EACqE;AACpE,YAAI6B,IAAI,GAAGrB,MAAM,CAAC+B,YAAP,EAAX;AACA,YAAI2B,MAAM,GAAGrC,IAAb;AAAA,YACCsC,MAAM,GAAGtC,IADV;;AAGA,aAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlE,YAApB,EAAkCkE,CAAC,EAAnC,EAAuC;AACtC,cAAIyB,EAAE,GAAGxF,EAAE,CAACJ,KAAH,CAASgB,IAAT,CAAcC,QAAd,CAAuBkD,CAAvB,CAAT;AACA,cAAIjD,MAAM,GAAGd,EAAE,CAACJ,KAAH,CAASmB,cAAT,CAAwBgD,CAAxB,CAAb;;AACA,cAAIjD,MAAM,CAACpC,GAAP,IAAcoC,MAAM,CAACe,OAAP,KAAmBD,MAAM,CAACsC,EAAxC,IAA8ClE,EAAE,CAACJ,KAAH,CAASoB,gBAAT,CAA0B+C,CAA1B,CAA9C,IACH9D,IAAI,CAACI,KAAL,KAAeS,MAAM,CAACT,KADvB,EAC8B;AAC7B,gBAAIoF,UAAU,GAAG3B,MAAM,CAAC0B,EAAE,CAAC5E,IAAH,CAAQc,KAAR,CAAD,CAAvB;;AACA,gBAAI+D,UAAU,GAAG,CAAjB,EAAoB;AACnBF,cAAAA,MAAM,IAAIE,UAAU,IAAI,CAAxB;AACA,aAFD,MAEO;AACNH,cAAAA,MAAM,IAAIG,UAAU,IAAI,CAAxB;AACA;AACD;AACD;;AAED,YAAI5B,KAAK,GAAG,CAAZ,EAAe;AACd,iBAAOjC,MAAM,CAAC2C,gBAAP,CAAwBgB,MAAM,GAAG1B,KAAjC,CAAP;AACA;;AACD,eAAOjC,MAAM,CAAC2C,gBAAP,CAAwBe,MAAM,GAAGzB,KAAjC,CAAP;AACA;;AAED,aAAOjC,MAAM,CAAC2C,gBAAP,CAAwBV,KAAxB,CAAP;AACA,KAjL6D;AAmL9DjB,IAAAA,aAAa,EAAE,UAASlB,KAAT,EAAgB7B,YAAhB,EAA8ByC,KAA9B,EAAqC;AACnD,UAAItC,EAAE,GAAG,IAAT;AACA,UAAIC,IAAI,GAAGD,EAAE,CAACE,OAAH,EAAX;AACA,UAAIK,MAAM,GAAGP,EAAE,CAACQ,aAAH,CAAiBP,IAAI,CAACQ,OAAtB,CAAb;AACA,UAAI0E,UAAU,GAAGnF,EAAE,CAACiF,aAAH,CAAiBpF,YAAjB,CAAjB;AACA,UAAIiI,OAAO,GAAGvH,MAAM,CAACgE,gBAAP,CAAwB,IAAxB,EAA8B7C,KAA9B,EAAqC7B,YAArC,EAAmDG,EAAE,CAACJ,KAAH,CAASyF,OAA5D,CAAd;AACAyC,MAAAA,OAAO,IAAI9H,EAAE,CAACJ,KAAH,CAASyF,OAAT,GAAoB/C,KAAK,CAACoF,UAAN,GAAmB,CAAvC,GAA4C,CAAvD;AAEA,aAAOI,OAAO,GACZxF,KAAK,CAACuF,SAAN,GAAkB,CADb,GAENvF,KAAK,CAACsC,eAFA,GAGLtC,KAAK,CAACuF,SAAN,GAAkB1C,UAHb,GAIL7C,KAAK,CAACyC,UAAN,GAAmB,CAJd,GAKLzC,KAAK,CAACyC,UAAN,GAAmBI,UALrB;AAMA;AAjM6D,GAA7B,CAAlC;AAmMA,CAzhBD","sourcesContent":["'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.bar = {\n\t\thover: {\n\t\t\tmode: 'label'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'category',\n\n\t\t\t\t// Specific to Bar Controller\n\t\t\t\tcategoryPercentage: 0.8,\n\t\t\t\tbarPercentage: 0.9,\n\n\t\t\t\t// grid line settings\n\t\t\t\tgridLines: {\n\t\t\t\t\toffsetGridLines: true\n\t\t\t\t}\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear'\n\t\t\t}]\n\t\t}\n\t};\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Rectangle,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tChart.DatasetController.prototype.initialize.call(this, chart, datasetIndex);\n\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tmeta.stack = dataset.stack;\n\t\t\t// Use this to indicate that this is a bar dataset.\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\t// Correctly calculate the bar width accounting for stacks and the fact that not all bars are visible\n\t\tgetStackCount: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\n\t\t\tvar stacks = [];\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (dsMeta.bar && me.chart.isDatasetVisible(datasetIndex) &&\n\t\t\t\t\t(yScale.options.stacked === false ||\n\t\t\t\t\t(yScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t(yScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn stacks.length;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.getMeta().data, function(rectangle, index) {\n\t\t\t\tme.updateElement(rectangle, index, reset);\n\t\t\t}, me);\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar scaleBase = yScale.getBasePixel();\n\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\trectangle._xScale = xScale;\n\t\t\trectangle._yScale = yScale;\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\tvar ruler = me.getRuler(index); // The index argument for compatible\n\t\t\trectangle._model = {\n\t\t\t\tx: me.calculateBarX(index, me.index, ruler),\n\t\t\t\ty: reset ? scaleBase : me.calculateBarY(index, me.index),\n\n\t\t\t\t// Tooltip\n\t\t\t\tlabel: me.chart.data.labels[index],\n\t\t\t\tdatasetLabel: dataset.label,\n\n\t\t\t\t// Appearance\n\t\t\t\thorizontal: false,\n\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\n\t\t\t\twidth: me.calculateBarWidth(ruler),\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\n\t\t\t};\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\tcalculateBarBase: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar base = yScale.getBaseValue();\n\t\t\tvar original = base;\n\n\t\t\tif ((yScale.options.stacked === true) ||\n\t\t\t\t(yScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\tvar chart = me.chart;\n\t\t\t\tvar datasets = chart.data.datasets;\n\t\t\t\tvar value = Number(datasets[datasetIndex].data[index]);\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar currentDs = datasets[i];\n\t\t\t\t\tvar currentDsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (currentDsMeta.bar && currentDsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i) &&\n\t\t\t\t\t\tmeta.stack === currentDsMeta.stack) {\n\t\t\t\t\t\tvar currentVal = Number(currentDs.data[index]);\n\t\t\t\t\t\tbase += value < 0 ? Math.min(currentVal, original) : Math.max(currentVal, original);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn yScale.getPixelForValue(base);\n\t\t\t}\n\n\t\t\treturn yScale.getBasePixel();\n\t\t},\n\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar stackCount = me.getStackCount();\n\n\t\t\tvar tickWidth = xScale.width / xScale.ticks.length;\r\n\t\t\tvar categoryWidth = tickWidth * xScale.options.categoryPercentage;\n\t\t\tvar categorySpacing = (tickWidth - (tickWidth * xScale.options.categoryPercentage)) / 2;\n\t\t\tvar fullBarWidth = categoryWidth / stackCount;\n\n\t\t\tvar barWidth = fullBarWidth * xScale.options.barPercentage;\n\t\t\tvar barSpacing = fullBarWidth - (fullBarWidth * xScale.options.barPercentage);\n\n\t\t\treturn {\n\t\t\t\tstackCount: stackCount,\n\t\t\t\ttickWidth: tickWidth,\n\t\t\t\tcategoryWidth: categoryWidth,\n\t\t\t\tcategorySpacing: categorySpacing,\n\t\t\t\tfullBarWidth: fullBarWidth,\n\t\t\t\tbarWidth: barWidth,\n\t\t\t\tbarSpacing: barSpacing\n\t\t\t};\n\t\t},\n\n\t\tcalculateBarWidth: function(ruler) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tif (xScale.options.barThickness) {\n\t\t\t\treturn xScale.options.barThickness;\n\t\t\t}\n\t\t\treturn ruler.barWidth;\r\n\t\t},\n\n\t\t// Get stack index from the given dataset index accounting for stacks and the fact that not all bars are visible\n\t\tgetStackIndex: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar dsMeta, j;\n\t\t\tvar stacks = [meta.stack];\n\n\t\t\tfor (j = 0; j < datasetIndex; ++j) {\n\t\t\t\tdsMeta = this.chart.getDatasetMeta(j);\n\t\t\t\tif (dsMeta.bar && this.chart.isDatasetVisible(j) &&\n\t\t\t\t\t(yScale.options.stacked === false ||\n\t\t\t\t\t(yScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t(yScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks.length - 1;\n\t\t},\n\n\t\tcalculateBarX: function(index, datasetIndex, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex);\n\t\t\tvar leftTick = xScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\n\t\t\tleftTick -= me.chart.isCombo ? (ruler.tickWidth / 2) : 0;\n\n\t\t\treturn leftTick +\n\t\t\t\t(ruler.barWidth / 2) +\n\t\t\t\truler.categorySpacing +\n\t\t\t\t(ruler.barWidth * stackIndex) +\n\t\t\t\t(ruler.barSpacing / 2) +\n\t\t\t\t(ruler.barSpacing * stackIndex);\n\t\t},\n\n\t\tcalculateBarY: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar value = Number(me.getDataset().data[index]);\n\n\t\t\tif (yScale.options.stacked ||\n\t\t\t\t(yScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\tvar base = yScale.getBaseValue();\n\t\t\t\tvar sumPos = base,\n\t\t\t\t\tsumNeg = base;\r\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar ds = me.chart.data.datasets[i];\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.bar && dsMeta.yAxisID === yScale.id && me.chart.isDatasetVisible(i) &&\n\t\t\t\t\t\tmeta.stack === dsMeta.stack) {\n\t\t\t\t\t\tvar stackedVal = Number(ds.data[index]);\n\t\t\t\t\t\tif (stackedVal < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedVal || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedVal || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tdraw: function(ease) {\n\t\t\tvar me = this;\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tvar metaData = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar i, len;\n\n\t\t\tChart.canvasHelpers.clipArea(me.chart.chart.ctx, me.chart.chartArea);\n\t\t\tfor (i = 0, len = metaData.length; i < len; ++i) {\n\t\t\t\tvar d = dataset.data[i];\n\t\t\t\tif (d !== null && d !== undefined && !isNaN(d)) {\n\t\t\t\t\tmetaData[i].transition(easingDecimal).draw();\n\t\t\t\t}\n\t\t\t}\n\t\t\tChart.canvasHelpers.unclipArea(me.chart.chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\n\t});\n\n\n\t// including horizontalBar in the bar file, instead of a file of its own\n\t// it extends bar (like pie extends doughnut)\n\tChart.defaults.horizontalBar = {\n\t\thover: {\n\t\t\tmode: 'label'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tposition: 'bottom'\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\tposition: 'left',\n\t\t\t\ttype: 'category',\n\n\t\t\t\t// Specific to Horizontal Bar Controller\n\t\t\t\tcategoryPercentage: 0.8,\n\t\t\t\tbarPercentage: 0.9,\n\n\t\t\t\t// grid line settings\n\t\t\t\tgridLines: {\n\t\t\t\t\toffsetGridLines: true\n\t\t\t\t}\n\t\t\t}]\n\t\t},\n\t\telements: {\n\t\t\trectangle: {\n\t\t\t\tborderSkipped: 'left'\n\t\t\t}\n\t\t},\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t\t// Pick first xLabel for now\n\t\t\t\t\tvar title = '';\n\n\t\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\t\tif (tooltipItems[0].yLabel) {\n\t\t\t\t\t\t\ttitle = tooltipItems[0].yLabel;\n\t\t\t\t\t\t} else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\n\t\t\t\t\t\t\ttitle = data.labels[tooltipItems[0].index];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn title;\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n\t\t\t\t\treturn datasetLabel + ': ' + tooltipItem.xLabel;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\n\t\t// Correctly calculate the bar width accounting for stacks and the fact that not all bars are visible\n\t\tgetStackCount: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\n\t\t\tvar stacks = [];\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (dsMeta.bar && me.chart.isDatasetVisible(datasetIndex) &&\n\t\t\t\t\t(xScale.options.stacked === false ||\n\t\t\t\t\t(xScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t(xScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn stacks.length;\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar scaleBase = xScale.getBasePixel();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = xScale;\n\t\t\trectangle._yScale = yScale;\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\tvar ruler = me.getRuler(index); // The index argument for compatible\n\t\t\trectangle._model = {\n\t\t\t\tx: reset ? scaleBase : me.calculateBarX(index, me.index),\n\t\t\t\ty: me.calculateBarY(index, me.index, ruler),\n\n\t\t\t\t// Tooltip\n\t\t\t\tlabel: me.chart.data.labels[index],\n\t\t\t\tdatasetLabel: dataset.label,\n\n\t\t\t\t// Appearance\n\t\t\t\thorizontal: true,\n\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\n\t\t\t\theight: me.calculateBarHeight(ruler),\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\n\t\t\t};\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\tcalculateBarBase: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar base = xScale.getBaseValue();\n\t\t\tvar originalBase = base;\n\n\t\t\tif (xScale.options.stacked ||\n\t\t\t\t(xScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\tvar chart = me.chart;\n\t\t\t\tvar datasets = chart.data.datasets;\n\t\t\t\tvar value = Number(datasets[datasetIndex].data[index]);\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar currentDs = datasets[i];\n\t\t\t\t\tvar currentDsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (currentDsMeta.bar && currentDsMeta.xAxisID === xScale.id && chart.isDatasetVisible(i) &&\n\t\t\t\t\t\tmeta.stack === currentDsMeta.stack) {\n\t\t\t\t\t\tvar currentVal = Number(currentDs.data[index]);\n\t\t\t\t\t\tbase += value < 0 ? Math.min(currentVal, originalBase) : Math.max(currentVal, originalBase);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn xScale.getPixelForValue(base);\n\t\t\t}\n\n\t\t\treturn xScale.getBasePixel();\n\t\t},\n\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar stackCount = me.getStackCount();\n\n\t\t\tvar tickHeight = yScale.height / yScale.ticks.length;\n\t\t\tvar categoryHeight = tickHeight * yScale.options.categoryPercentage;\n\t\t\tvar categorySpacing = (tickHeight - (tickHeight * yScale.options.categoryPercentage)) / 2;\n\t\t\tvar fullBarHeight = categoryHeight / stackCount;\n\n\t\t\tvar barHeight = fullBarHeight * yScale.options.barPercentage;\n\t\t\tvar barSpacing = fullBarHeight - (fullBarHeight * yScale.options.barPercentage);\n\n\t\t\treturn {\n\t\t\t\tstackCount: stackCount,\n\t\t\t\ttickHeight: tickHeight,\n\t\t\t\tcategoryHeight: categoryHeight,\n\t\t\t\tcategorySpacing: categorySpacing,\n\t\t\t\tfullBarHeight: fullBarHeight,\n\t\t\t\tbarHeight: barHeight,\n\t\t\t\tbarSpacing: barSpacing\n\t\t\t};\n\t\t},\n\n\t\tcalculateBarHeight: function(ruler) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tif (yScale.options.barThickness) {\n\t\t\t\treturn yScale.options.barThickness;\n\t\t\t}\n\t\t\treturn ruler.barHeight;\n\t\t},\n\n\t\t// Get stack index from the given dataset index accounting for stacks and the fact that not all bars are visible\n\t\tgetStackIndex: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar dsMeta, j;\n\t\t\tvar stacks = [meta.stack];\n\n\t\t\tfor (j = 0; j < datasetIndex; ++j) {\n\t\t\t\tdsMeta = this.chart.getDatasetMeta(j);\n\t\t\t\tif (dsMeta.bar && this.chart.isDatasetVisible(j) &&\n\t\t\t\t\t(xScale.options.stacked === false ||\n\t\t\t\t\t(xScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t(xScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks.length - 1;\r\n\t\t},\n\n\t\tcalculateBarX: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar value = Number(me.getDataset().data[index]);\n\n\t\t\tif (xScale.options.stacked ||\n\t\t\t\t(xScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\tvar base = xScale.getBaseValue();\n\t\t\t\tvar sumPos = base,\n\t\t\t\t\tsumNeg = base;\r\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar ds = me.chart.data.datasets[i];\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.bar && dsMeta.xAxisID === xScale.id && me.chart.isDatasetVisible(i) &&\n\t\t\t\t\t\tmeta.stack === dsMeta.stack) {\n\t\t\t\t\t\tvar stackedVal = Number(ds.data[index]);\n\t\t\t\t\t\tif (stackedVal < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedVal || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedVal || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value < 0) {\n\t\t\t\t\treturn xScale.getPixelForValue(sumNeg + value);\n\t\t\t\t}\n\t\t\t\treturn xScale.getPixelForValue(sumPos + value);\n\t\t\t}\n\n\t\t\treturn xScale.getPixelForValue(value);\n\t\t},\n\n\t\tcalculateBarY: function(index, datasetIndex, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex);\n\t\t\tvar topTick = yScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\n\t\t\ttopTick -= me.chart.isCombo ? (ruler.tickHeight / 2) : 0;\n\n\t\t\treturn topTick +\n\t\t\t\t(ruler.barHeight / 2) +\n\t\t\t\truler.categorySpacing +\n\t\t\t\t(ruler.barHeight * stackIndex) +\n\t\t\t\t(ruler.barSpacing / 2) +\n\t\t\t\t(ruler.barSpacing * stackIndex);\n\t\t}\n\t});\n};\n"]},"metadata":{},"sourceType":"script"}