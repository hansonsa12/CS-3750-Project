{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\Courses\\\\CourseForm.js\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, IconButton, MenuItem, Tooltip, Typography } from \"@material-ui/core\";\nimport { Add } from '@material-ui/icons';\nimport axios from 'axios';\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport _ from \"lodash\";\nimport { Checkboxes, makeValidate } from \"mui-rff\";\nimport React, { useContext } from \"react\";\nimport { Form as FForm } from \"react-final-form\";\nimport * as Yup from \"yup\";\nimport { AuthContext } from '../../context/AuthProvider';\nimport { DEPARTMENTS } from '../../helpers/constants';\nimport { SectionHeaderItem, TextEntryItem, TimeEntryItem } from '../FormComponents';\nexport default function CourseForm({\n  course,\n  action = course ? \"Edit\" : \"Add\"\n}) {\n  var _course$meetingDays;\n\n  const [open, setOpen] = React.useState(false);\n  const {\n    user,\n    authHeader\n  } = useContext(AuthContext);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const openButton = /*#__PURE__*/React.createElement(Tooltip, {\n    title: `${action} Course`,\n    placement: course ? \"top\" : \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, course ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClickOpen,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 24\n    }\n  }, \"Edit\") : /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(Add, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  })));\n\n  const onSubmit = values => {\n    var _values$meetingDays;\n\n    let formattedValues = { ...values,\n      meetingDays: (_values$meetingDays = values.meetingDays) === null || _values$meetingDays === void 0 ? void 0 : _values$meetingDays.join(''),\n      startTime: values.startTime ? dayjs(values.startTime).format(\"hh:mm A\") : undefined,\n      endTime: values.endTime ? dayjs(values.endTime).format(\"hh:mm A\") : undefined,\n      instructorId: user.userId\n    };\n    formattedValues = _.omitBy(formattedValues, _.isUndefined); // get rid of undefined values\n\n    axios.request({\n      url: 'api/courses',\n      method: course ? 'PUT' : 'POST',\n      ...authHeader,\n      data: formattedValues\n    }).then(res => {\n      alert(\"Course Updated Successfully!\");\n      window.location.reload(); // TODO Ky create and call updateCourses so app re-renders without reload\n    }).catch((err, res) => {\n      alert(`${err.message}:\\n${err.response.data.error}`);\n    });\n  };\n\n  const validationSchema = Yup.object().shape({\n    courseName: Yup.string().required(\"Course name is required\"),\n    courseNumber: Yup.string().required(\"Course number is required\"),\n    department: Yup.string().required(\"Department is required\")\n  });\n  const validate = makeValidate(validationSchema);\n  dayjs.extend(customParseFormat);\n  let initialValues = { ...course,\n    meetingDays: course === null || course === void 0 ? void 0 : (_course$meetingDays = course.meetingDays) === null || _course$meetingDays === void 0 ? void 0 : _course$meetingDays.split(''),\n    startTime: (course === null || course === void 0 ? void 0 : course.startTime) ? dayjs(course.startTime, \"hh:mm A\").format() : undefined,\n    endTime: (course === null || course === void 0 ? void 0 : course.startTime) ? dayjs(course === null || course === void 0 ? void 0 : course.endTime, \"hh:mm A\").format() : undefined\n  };\n\n  if (!initialValues.creditHours) {\n    initialValues.creditHours = 0;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, openButton, /*#__PURE__*/React.createElement(FForm, {\n    onSubmit: onSubmit,\n    initialValues: initialValues,\n    validate: validate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, action, \" Course\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(SectionHeaderItem, {\n    top: true,\n    title: \"Course Information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TextEntryItem, {\n    name: \"courseName\",\n    sm: 8,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TextEntryItem, {\n    name: \"courseNumber\",\n    sm: 4,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TextEntryItem, {\n    name: \"description\",\n    rows: 6,\n    multiline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TextEntryItem, {\n    name: \"department\",\n    select: true,\n    sm: 9,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 37\n    }\n  }, DEPARTMENTS.map((option, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: `departmentOption-${index}`,\n    value: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 45\n    }\n  }, option))), /*#__PURE__*/React.createElement(TextEntryItem, {\n    name: \"creditHours\",\n    select: true,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }, [\"n/a\", \"1\", \"2\", \"3\", \"4\", \"5\"].map((option, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: `creditHoursOption-${index}`,\n    value: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 45\n    }\n  }, option))), /*#__PURE__*/React.createElement(SectionHeaderItem, {\n    title: \"Meeting Location/Time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TextEntryItem, {\n    name: \"buildingName\",\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TextEntryItem, {\n    name: \"roomNumber\",\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    alignItems: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 41\n    }\n  }, \"Meeting Days:\"), /*#__PURE__*/React.createElement(Checkboxes, {\n    name: \"meetingDays\",\n    data: [\"M\", \"T\", \"W\", \"R\", \"F\"].map(day => ({\n      label: day,\n      value: day\n    })),\n    formControlLabelProps: {\n      labelPlacement: \"top\"\n    },\n    formGroupProps: {\n      row: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(TextEntryItem, {\n    name: \"maxCapacity\",\n    sm: 4,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TimeEntryItem, {\n    name: \"startTime\",\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TimeEntryItem, {\n    name: \"endTime\",\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 33\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 33\n    }\n  }, \"Submit\"))))));\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/Courses/CourseForm.js"],"names":["Button","Dialog","DialogActions","DialogContent","DialogTitle","Grid","IconButton","MenuItem","Tooltip","Typography","Add","axios","dayjs","customParseFormat","_","Checkboxes","makeValidate","React","useContext","Form","FForm","Yup","AuthContext","DEPARTMENTS","SectionHeaderItem","TextEntryItem","TimeEntryItem","CourseForm","course","action","open","setOpen","useState","user","authHeader","handleClickOpen","handleClose","openButton","onSubmit","values","formattedValues","meetingDays","join","startTime","format","undefined","endTime","instructorId","userId","omitBy","isUndefined","request","url","method","data","then","res","alert","window","location","reload","catch","err","message","response","error","validationSchema","object","shape","courseName","string","required","courseNumber","department","validate","extend","initialValues","split","creditHours","handleSubmit","map","option","index","day","label","value","labelPlacement","row"],"mappings":"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","sourcesContent":["import {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    IconButton,\r\n    MenuItem,\r\n    Tooltip,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport { Add } from '@material-ui/icons';\r\nimport axios from 'axios';\r\nimport dayjs from \"dayjs\";\r\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\r\nimport _ from \"lodash\";\r\nimport { Checkboxes, makeValidate } from \"mui-rff\";\r\nimport React, { useContext } from \"react\";\r\nimport { Form as FForm } from \"react-final-form\";\r\nimport * as Yup from \"yup\";\r\nimport { AuthContext } from '../../context/AuthProvider';\r\nimport { DEPARTMENTS } from '../../helpers/constants';\r\nimport {\r\n    SectionHeaderItem,\r\n    TextEntryItem,\r\n    TimeEntryItem\r\n} from '../FormComponents';\r\n\r\nexport default function CourseForm({\r\n    course,\r\n    action = course ? \"Edit\" : \"Add\"\r\n}) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const { user, authHeader } = useContext(AuthContext);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const openButton = (\r\n        <Tooltip title={`${action} Course`} placement={course ? \"top\" : \"right\"}>\r\n            { course ? <Button onClick={handleClickOpen}\r\n                variant=\"contained\" color=\"primary\">Edit</Button>\r\n                : (<IconButton onClick={handleClickOpen}>\r\n                    <Add />\r\n                </IconButton>)\r\n            }\r\n        </Tooltip>\r\n    );\r\n\r\n    const onSubmit = (values) => {\r\n        let formattedValues = {\r\n            ...values,\r\n            meetingDays: values.meetingDays?.join(''),\r\n            startTime: values.startTime ? dayjs(values.startTime).format(\"hh:mm A\") : undefined,\r\n            endTime: values.endTime ? dayjs(values.endTime).format(\"hh:mm A\") : undefined,\r\n            instructorId: user.userId\r\n        }\r\n        formattedValues = _.omitBy(formattedValues, _.isUndefined); // get rid of undefined values\r\n\r\n        axios.request({\r\n            url: 'api/courses',\r\n            method: course ? 'PUT' : 'POST',\r\n            ...authHeader,\r\n            data: formattedValues\r\n        }).then(res => {\r\n            alert(\"Course Updated Successfully!\");\r\n            window.location.reload();\r\n            // TODO Ky create and call updateCourses so app re-renders without reload\r\n        }).catch((err, res) => {\r\n            alert(`${err.message}:\\n${err.response.data.error}`);\r\n        });\r\n\r\n    };\r\n\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        courseName: Yup.string().required(\"Course name is required\"),\r\n        courseNumber: Yup.string().required(\"Course number is required\"),\r\n        department: Yup.string().required(\"Department is required\"),\r\n    });\r\n\r\n    const validate = makeValidate(validationSchema);\r\n\r\n    dayjs.extend(customParseFormat);\r\n    let initialValues = {\r\n        ...course,\r\n        meetingDays: course?.meetingDays?.split(''),\r\n        startTime: course?.startTime ? dayjs(course.startTime, \"hh:mm A\").format() : undefined,\r\n        endTime: course?.startTime ? dayjs(course?.endTime, \"hh:mm A\").format() : undefined\r\n    };\r\n\r\n    if (!initialValues.creditHours) {\r\n        initialValues.creditHours = 0;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {openButton}\r\n            <FForm\r\n                onSubmit={onSubmit}\r\n                initialValues={initialValues}\r\n                validate={validate}\r\n            >\r\n                {({ handleSubmit }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Dialog\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"form-dialog-title\"\r\n                        >\r\n                            <DialogTitle id=\"form-dialog-title\">{action} Course</DialogTitle>\r\n                            <DialogContent>\r\n                                <Grid container spacing={2} justify=\"space-between\">\r\n                                    <SectionHeaderItem top title=\"Course Information\" />\r\n                                    <TextEntryItem name=\"courseName\" sm={8} required={true} />\r\n                                    <TextEntryItem name=\"courseNumber\" sm={4} required={true} />\r\n                                    <TextEntryItem name=\"description\" rows={6} multiline />\r\n                                    <TextEntryItem name=\"department\" select sm={9} required={true}>\r\n                                        {DEPARTMENTS.map((option, index) =>(\r\n                                            <MenuItem key={`departmentOption-${index}`} value={option}>\r\n                                                {option}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextEntryItem>\r\n                                    <TextEntryItem name=\"creditHours\" select sm={3}>\r\n                                        {[\"n/a\", \"1\", \"2\", \"3\", \"4\", \"5\"].map((option, index) => (\r\n                                            <MenuItem key={`creditHoursOption-${index}`} value={index}>\r\n                                                {option}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextEntryItem>\r\n                                    <SectionHeaderItem title=\"Meeting Location/Time\" />\r\n                                    <TextEntryItem name=\"buildingName\" sm={8} />\r\n                                    <TextEntryItem name=\"roomNumber\" sm={4} />\r\n                                    <Grid item container xs={12} alignItems=\"center\" justify=\"center\">\r\n                                        <Typography>Meeting Days:</Typography>\r\n                                        <Checkboxes\r\n                                            name=\"meetingDays\"\r\n                                            data={[\"M\", \"T\", \"W\", \"R\", \"F\"].map(day => (\r\n                                                { label: day, value: day }\r\n                                            ))}\r\n                                            formControlLabelProps={{ labelPlacement: \"top\" }}\r\n                                            formGroupProps={{ row: true }}\r\n                                        />\r\n                                    </Grid>\r\n                                    <TextEntryItem name=\"maxCapacity\" sm={4} type=\"number\" />\r\n                                    <TimeEntryItem name=\"startTime\" sm={4} />\r\n                                    <TimeEntryItem name=\"endTime\" sm={4} />\r\n                                </Grid>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={handleClose} color=\"primary\">\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button onClick={handleSubmit} color=\"primary\">\r\n                                    Submit\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </form>\r\n                )}\r\n            </FForm>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}