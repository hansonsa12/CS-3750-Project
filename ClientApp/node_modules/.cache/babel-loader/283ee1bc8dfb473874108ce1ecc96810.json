{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\Registrations.js\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport React, { useCallback, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthProvider\";\nimport { DataContext } from \"../context/DataProvider\";\nimport { getFormattedLocation, getFormattedTime } from \"../helpers/constants\";\nimport DepartmentDropDown from \"./Courses/DepartmentDropDown\";\nimport TableComponent from \"./TableComponent\";\nexport default function Registrations() {\n  const {\n    authHeader\n  } = useContext(AuthContext);\n  const {\n    userCourses,\n    allCourses,\n    setUserCourses\n  } = useContext(DataContext);\n  const registeredCourseIds = useCallback(() => {\n    // get array of registered course ids on initial component\n    // load and if registrations array changes\n    // https://reactjs.org/docs/hooks-reference.html#usecallback\n    return _.map(userCourses, \"courseId\");\n  }, [userCourses])();\n\n  function registerForCourse(courseId) {\n    axios.post(`api/registrations/${courseId}`, {}, authHeader).then(res => {\n      alert(\"Registered Successfully!\");\n      setUserCourses(res.data);\n    }).catch((err, res) => {\n      alert(`${err.message}:\\n${err.response.data.error}`);\n    });\n  }\n\n  function dropCourse(courseId) {\n    axios.delete(`api/registrations/${courseId}`, authHeader).then(res => {\n      alert(\"Dropped Sucessfully\");\n      setUserCourses(res.data);\n    }).catch((err, res) => {\n      alert(`${err.message}:\\n${err.response.data.error}`);\n    });\n  }\n\n  const columns = useCallback(() => [{\n    header: \"Course Number\",\n    accessor: \"courseNumber\"\n  }, {\n    header: \"Title\",\n    accessor: \"courseName\"\n  }, {\n    header: \"Instructor\",\n    accessor: r => {\n      var _r$instructor, _r$instructor2;\n\n      return `${(_r$instructor = r.instructor) === null || _r$instructor === void 0 ? void 0 : _r$instructor.lastName}, ${(_r$instructor2 = r.instructor) === null || _r$instructor2 === void 0 ? void 0 : _r$instructor2.firstName}`;\n    }\n  }, {\n    header: \"Location\",\n    accessor: r => getFormattedLocation(r.buildingName, r.roomNumber)\n  }, {\n    header: \"Time\",\n    accessor: r => getFormattedTime(r.startTime, r.endTime)\n  }, {\n    header: \"Meeting Days\",\n    accessor: \"meetingDays\"\n  }, {\n    header: \"Register\",\n    accessor: r => registeredCourseIds.includes(r.courseId) ? /*#__PURE__*/React.createElement(Button, {\n      onClick: () => dropCourse(r.courseId),\n      color: \"secondary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"Drop\") : /*#__PURE__*/React.createElement(Button, {\n      onClick: () => registerForCourse(r.courseId),\n      color: \"primary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, \"Register\")\n  }], [registeredCourseIds])();\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DepartmentDropDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableComponent, {\n    rows: allCourses,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/Registrations.js"],"names":["Button","Grid","axios","_","React","useCallback","useContext","AuthContext","DataContext","getFormattedLocation","getFormattedTime","DepartmentDropDown","TableComponent","Registrations","authHeader","userCourses","allCourses","setUserCourses","registeredCourseIds","map","registerForCourse","courseId","post","then","res","alert","data","catch","err","message","response","error","dropCourse","delete","columns","header","accessor","r","instructor","lastName","firstName","buildingName","roomNumber","startTime","endTime","includes","width"],"mappings":"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","sourcesContent":["import { Button, Grid } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\nimport React, { useCallback, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthProvider\";\r\nimport { DataContext } from \"../context/DataProvider\";\r\nimport { getFormattedLocation, getFormattedTime } from \"../helpers/constants\";\r\nimport DepartmentDropDown from \"./Courses/DepartmentDropDown\";\r\nimport TableComponent from \"./TableComponent\";\r\n\r\nexport default function Registrations() {\r\n    const { authHeader } = useContext(AuthContext);\r\n    const { userCourses, allCourses, setUserCourses } = useContext(DataContext);\r\n\r\n    const registeredCourseIds = useCallback(() => {\r\n        // get array of registered course ids on initial component\r\n        // load and if registrations array changes\r\n        // https://reactjs.org/docs/hooks-reference.html#usecallback\r\n        return _.map(userCourses, \"courseId\");\r\n    }, [userCourses])();\r\n\r\n    function registerForCourse(courseId) {\r\n        axios\r\n            .post(`api/registrations/${courseId}`, {}, authHeader)\r\n            .then(res => {\r\n                alert(\"Registered Successfully!\");\r\n                setUserCourses(res.data);\r\n            })\r\n            .catch((err, res) => {\r\n                alert(`${err.message}:\\n${err.response.data.error}`);\r\n            });\r\n    }\r\n\r\n    function dropCourse(courseId) {\r\n        axios\r\n            .delete(`api/registrations/${courseId}`, authHeader)\r\n            .then(res => {\r\n                alert(\"Dropped Sucessfully\");\r\n                setUserCourses(res.data);\r\n            })\r\n            .catch((err, res) => {\r\n                alert(`${err.message}:\\n${err.response.data.error}`);\r\n            });\r\n    }\r\n\r\n    const columns = useCallback(\r\n        () => [\r\n            { header: \"Course Number\", accessor: \"courseNumber\" },\r\n            { header: \"Title\", accessor: \"courseName\" },\r\n            {\r\n                header: \"Instructor\",\r\n                accessor: r =>\r\n                    `${r.instructor?.lastName}, ${r.instructor?.firstName}`,\r\n            },\r\n            {\r\n                header: \"Location\",\r\n                accessor: r =>\r\n                    getFormattedLocation(r.buildingName, r.roomNumber),\r\n            },\r\n            {\r\n                header: \"Time\",\r\n                accessor: r => getFormattedTime(r.startTime, r.endTime),\r\n            },\r\n            { header: \"Meeting Days\", accessor: \"meetingDays\" },\r\n            {\r\n                header: \"Register\",\r\n                accessor: r =>\r\n                    registeredCourseIds.includes(r.courseId) ? (\r\n                        <Button\r\n                            onClick={() => dropCourse(r.courseId)}\r\n                            color=\"secondary\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            Drop\r\n                        </Button>\r\n                    ) : (\r\n                        <Button\r\n                            onClick={() => registerForCourse(r.courseId)}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                    ),\r\n            },\r\n        ],\r\n        [registeredCourseIds]\r\n    )();\r\n\r\n    return (\r\n        <Grid container style={{ width: \"100%\" }}>\r\n            <Grid item xs={12}>\r\n                <DepartmentDropDown />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TableComponent rows={allCourses} columns={columns} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}