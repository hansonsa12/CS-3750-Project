{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\Courses\\\\CourseDetails\\\\AssignmentsTable.js\";\nimport { Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../../context/AuthProvider\";\nimport { DataContext } from \"../../../context/DataProvider\";\nimport { getFormattedDateTime } from \"../../../helpers/helpers\";\nimport AssignmentForm from \"../../Assignments/AssignmentForm\";\nimport AssignmentSubmissionForm from \"../../Assignments/AssignmentSubmissionForm\";\nimport TableComponent from \"../../TableComponent\";\nexport default function AssignmentsTable({\n  course\n}) {\n  const [assignments, setAssignments] = useState([]);\n  const {\n    authHeader,\n    isInstructor\n  } = useContext(AuthContext);\n  const {\n    submissions\n  } = useContext(DataContext);\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await axios.get(`api/courses/${course.courseId}/assignments`, authHeader);\n      setAssignments(res.data);\n    };\n\n    fetchData();\n  }, [course]);\n  const assignmentSubmissions = useMemo(() => assignments.map(a => ({ ...a,\n    submission: submissions === null || submissions === void 0 ? void 0 : submissions.find(s => s.assignmentId === a.assignmentId)\n  })), [assignments, submissions]);\n  const actions = useMemo(() => ({\n    header: \"Actions\",\n    accessor: a => isInstructor ? /*#__PURE__*/React.createElement(AssignmentForm, {\n      assignment: a,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, \"Edit\")) : a.submission ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Submitted\") : /*#__PURE__*/React.createElement(AssignmentSubmissionForm, {\n      assignment: a,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, \"Submit\"))\n  }));\n  const columns = useMemo(() => [{\n    header: \"Title\",\n    accessor: a => /*#__PURE__*/React.createElement(Link, {\n      to: `assignments/${a.assignmentId}/details`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, a.title)\n  }, {\n    header: \"Due Date\",\n    accessor: a => getFormattedDateTime(a.dueDate)\n  }, {\n    header: \"Type\",\n    accessor: \"assignmentType\"\n  }, actions]);\n  return /*#__PURE__*/React.createElement(TableComponent, {\n    columns: columns,\n    rows: assignmentSubmissions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/Courses/CourseDetails/AssignmentsTable.js"],"names":["Button","axios","React","useContext","useEffect","useMemo","useState","Link","AuthContext","DataContext","getFormattedDateTime","AssignmentForm","AssignmentSubmissionForm","TableComponent","AssignmentsTable","course","assignments","setAssignments","authHeader","isInstructor","submissions","fetchData","res","get","courseId","data","assignmentSubmissions","map","a","submission","find","s","assignmentId","actions","header","accessor","columns","title","dueDate"],"mappings":"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","sourcesContent":["import { Button } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../../context/AuthProvider\";\r\nimport { DataContext } from \"../../../context/DataProvider\";\r\nimport { getFormattedDateTime } from \"../../../helpers/helpers\";\r\nimport AssignmentForm from \"../../Assignments/AssignmentForm\";\r\nimport AssignmentSubmissionForm from \"../../Assignments/AssignmentSubmissionForm\";\r\nimport TableComponent from \"../../TableComponent\";\r\n\r\nexport default function AssignmentsTable({ course }) {\r\n    const [assignments, setAssignments] = useState([]);\r\n    const { authHeader, isInstructor } = useContext(AuthContext);\r\n    const { submissions } = useContext(DataContext);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const res = await axios.get(\r\n                `api/courses/${course.courseId}/assignments`,\r\n                authHeader\r\n            );\r\n            setAssignments(res.data);\r\n        };\r\n        fetchData();\r\n    }, [course]);\r\n\r\n    const assignmentSubmissions = useMemo(\r\n        () =>\r\n            assignments.map(a => ({\r\n                ...a,\r\n                submission: submissions?.find(\r\n                    s => s.assignmentId === a.assignmentId\r\n                )\r\n            })),\r\n        [assignments, submissions]\r\n    );\r\n\r\n    const actions = useMemo(() => ({\r\n        header: \"Actions\",\r\n        accessor: a =>\r\n            isInstructor ? (\r\n                <AssignmentForm assignment={a}>\r\n                    <Button variant=\"contained\" color=\"primary\">\r\n                        Edit\r\n                    </Button>\r\n                </AssignmentForm>\r\n            ) : a.submission ? (\r\n                <Button variant=\"contained\" color=\"primary\" disabled>\r\n                    Submitted\r\n                </Button>\r\n            ) : (\r\n                <AssignmentSubmissionForm assignment={a}>\r\n                    <Button variant=\"contained\" color=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n                </AssignmentSubmissionForm>\r\n            )\r\n    }));\r\n\r\n    const columns = useMemo(() => [\r\n        {\r\n            header: \"Title\",\r\n            accessor: a => (\r\n                <Link to={`assignments/${a.assignmentId}/details`}>\r\n                    {a.title}\r\n                </Link>\r\n            )\r\n        },\r\n        {\r\n            header: \"Due Date\",\r\n            accessor: a => getFormattedDateTime(a.dueDate)\r\n        },\r\n        { header: \"Type\", accessor: \"assignmentType\" },\r\n\r\n        actions\r\n    ]);\r\n\r\n    return <TableComponent columns={columns} rows={assignmentSubmissions} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}