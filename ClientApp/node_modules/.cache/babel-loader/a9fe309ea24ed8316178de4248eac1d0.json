{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kronos\\\\Documents\\\\Programming\\\\Web\\\\React\\\\CS-3750-Project\\\\ClientApp\\\\src\\\\components\\\\Assignments\\\\AssignmentDetails.js\";\nimport { Grid } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/AuthProvider\";\nimport { getFileUrl, getFormattedDateTime } from \"../../helpers/helpers\";\nimport DetailsContainer from \"../DetailsContainer\";\nimport { SectionHeaderItem } from \"../FormComponents\";\nimport MainView from \"../MainView\";\nimport AssignmentSubmissionsTable from \"./AssignmentSubmissionsTable\";\nexport default function AssignmentDetails() {\n  var _assignment$assignmen;\n\n  const {\n    assignmentId\n  } = useParams(); // get params from route url\n\n  const {\n    authHeader,\n    isInstructor,\n    isStudent\n  } = useContext(AuthContext);\n  const [assignment, setAssigment] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await axios.get(`api/assignments/${assignmentId}`, authHeader);\n      setAssigment(res.data);\n    };\n\n    fetchData();\n  }, [assignmentId]);\n  return /*#__PURE__*/React.createElement(MainView, {\n    title: assignment === null || assignment === void 0 ? void 0 : assignment.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DetailsContainer, {\n    object: assignment,\n    omitProperties: [\"assignmentSubmissions\", \"assignmentId\", \"courseId\", \"title\"],\n    specialFormatters: {\n      dueDate: a => getFormattedDateTime(a.dueDate)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  })), isStudent && (assignment === null || assignment === void 0 ? void 0 : (_assignment$assignmen = assignment.assignmentSubmissions) === null || _assignment$assignmen === void 0 ? void 0 : _assignment$assignmen.length) > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SectionHeaderItem, {\n    title: \"Submission Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DetailsContainer, {\n    object: assignment.assignmentSubmissions[0],\n    omitProperties: [\"student\", \"assignmentSubmissionId\", \"assignmentId\", \"studentId\", \"fileName\"],\n    specialFormatters: {\n      submittedAt: s => getFormattedDateTime(s.submittedAt),\n      submission: s => s.fileName ? /*#__PURE__*/React.createElement(\"a\", {\n        href: getFileUrl(s.studentId, \"submission\", s.fileName),\n        target: \"_blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 45\n        }\n      }, s.submission) : s.submission\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }))), isInstructor && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SectionHeaderItem, {\n    title: \"Submissions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AssignmentSubmissionsTable, {\n    rows: assignment.assignmentSubmissions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/Kronos/Documents/Programming/Web/React/CS-3750-Project/ClientApp/src/components/Assignments/AssignmentDetails.js"],"names":["Grid","axios","React","useContext","useEffect","useState","useParams","AuthContext","getFileUrl","getFormattedDateTime","DetailsContainer","SectionHeaderItem","MainView","AssignmentSubmissionsTable","AssignmentDetails","assignmentId","authHeader","isInstructor","isStudent","assignment","setAssigment","fetchData","res","get","data","title","dueDate","a","assignmentSubmissions","length","submittedAt","s","submission","fileName","studentId"],"mappings":";AAAA,SAASA,IAAT,QAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,UAAT,EAAqBC,oBAArB,QAAiD,uBAAjD;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAmBT,SAAS,EAAlC,CADwC,CACF;;AAEtC,QAAM;AAAEU,IAAAA,UAAF;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA;AAA5B,MAA0Cf,UAAU,CAACI,WAAD,CAA1D;AAEA,QAAM,CAACY,UAAD,EAAaC,YAAb,IAA6Bf,QAAQ,CAAC,EAAD,CAA3C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiB,SAAS,GAAG,YAAY;AAC1B,YAAMC,GAAG,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CACb,mBAAkBR,YAAa,EADlB,EAEdC,UAFc,CAAlB;AAIAI,MAAAA,YAAY,CAACE,GAAG,CAACE,IAAL,CAAZ;AACH,KAND;;AAOAH,IAAAA,SAAS;AACZ,GATQ,EASN,CAACN,YAAD,CATM,CAAT;AAWA,sBACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEI,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEM,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AACI,IAAA,MAAM,EAAEN,UADZ;AAEI,IAAA,cAAc,EAAE,CACZ,uBADY,EAEZ,cAFY,EAGZ,UAHY,EAIZ,OAJY,CAFpB;AAQI,IAAA,iBAAiB,EAAE;AACfO,MAAAA,OAAO,EAAEC,CAAC,IAAIlB,oBAAoB,CAACkB,CAAC,CAACD,OAAH;AADnB,KARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAeKR,SAAS,IAAI,CAAAC,UAAU,SAAV,IAAAA,UAAU,WAAV,qCAAAA,UAAU,CAAES,qBAAZ,gFAAmCC,MAAnC,IAA4C,CAAzD,iBACG,uDACI,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,oBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AACI,IAAA,MAAM,EAAEV,UAAU,CAACS,qBAAX,CAAiC,CAAjC,CADZ;AAEI,IAAA,cAAc,EAAE,CACZ,SADY,EAEZ,wBAFY,EAGZ,cAHY,EAIZ,WAJY,EAKZ,UALY,CAFpB;AASI,IAAA,iBAAiB,EAAE;AACfE,MAAAA,WAAW,EAAEC,CAAC,IACVtB,oBAAoB,CAACsB,CAAC,CAACD,WAAH,CAFT;AAGfE,MAAAA,UAAU,EAAED,CAAC,IACTA,CAAC,CAACE,QAAF,gBACI;AACI,QAAA,IAAI,EAAEzB,UAAU,CACZuB,CAAC,CAACG,SADU,EAEZ,YAFY,EAGZH,CAAC,CAACE,QAHU,CADpB;AAMI,QAAA,MAAM,EAAC,QANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQKF,CAAC,CAACC,UARP,CADJ,GAYID,CAAC,CAACC;AAhBK,KATvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CAhBR,EAmDKf,YAAY,iBACT,uDACI,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,0BAAD;AACI,IAAA,IAAI,EAAEE,UAAU,CAACS,qBADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CApDR,CADJ,CADJ;AAkEH","sourcesContent":["import { Grid } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthProvider\";\r\nimport { getFileUrl, getFormattedDateTime } from \"../../helpers/helpers\";\r\nimport DetailsContainer from \"../DetailsContainer\";\r\nimport { SectionHeaderItem } from \"../FormComponents\";\r\nimport MainView from \"../MainView\";\r\nimport AssignmentSubmissionsTable from \"./AssignmentSubmissionsTable\";\r\n\r\nexport default function AssignmentDetails() {\r\n    const { assignmentId } = useParams(); // get params from route url\r\n\r\n    const { authHeader, isInstructor, isStudent } = useContext(AuthContext);\r\n\r\n    const [assignment, setAssigment] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const res = await axios.get(\r\n                `api/assignments/${assignmentId}`,\r\n                authHeader\r\n            );\r\n            setAssigment(res.data);\r\n        };\r\n        fetchData();\r\n    }, [assignmentId]);\r\n\r\n    return (\r\n        <MainView title={assignment?.title}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <DetailsContainer\r\n                        object={assignment}\r\n                        omitProperties={[\r\n                            \"assignmentSubmissions\",\r\n                            \"assignmentId\",\r\n                            \"courseId\",\r\n                            \"title\"\r\n                        ]}\r\n                        specialFormatters={{\r\n                            dueDate: a => getFormattedDateTime(a.dueDate)\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                {isStudent && assignment?.assignmentSubmissions?.length > 0 && (\r\n                    <>\r\n                        <SectionHeaderItem title=\"Submission Details\" />\r\n                        <Grid item xs={12}>\r\n                            <DetailsContainer\r\n                                object={assignment.assignmentSubmissions[0]}\r\n                                omitProperties={[\r\n                                    \"student\",\r\n                                    \"assignmentSubmissionId\",\r\n                                    \"assignmentId\",\r\n                                    \"studentId\",\r\n                                    \"fileName\"\r\n                                ]}\r\n                                specialFormatters={{\r\n                                    submittedAt: s =>\r\n                                        getFormattedDateTime(s.submittedAt),\r\n                                    submission: s =>\r\n                                        s.fileName ? (\r\n                                            <a\r\n                                                href={getFileUrl(\r\n                                                    s.studentId,\r\n                                                    \"submission\",\r\n                                                    s.fileName\r\n                                                )}\r\n                                                target=\"_blank\"\r\n                                            >\r\n                                                {s.submission}\r\n                                            </a>\r\n                                        ) : (\r\n                                            s.submission\r\n                                        )\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </>\r\n                )}\r\n                {isInstructor && (\r\n                    <>\r\n                        <SectionHeaderItem title=\"Submissions\" />\r\n                        <Grid item xs={12}>\r\n                            <AssignmentSubmissionsTable\r\n                                rows={assignment.assignmentSubmissions}\r\n                            />\r\n                        </Grid>\r\n                    </>\r\n                )}\r\n            </Grid>\r\n        </MainView>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}